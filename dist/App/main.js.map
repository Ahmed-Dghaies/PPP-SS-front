{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Components/Authentification/login/login.component.css","webpack:///./src/app/Components/Authentification/login/login.component.html","webpack:///./src/app/Components/Authentification/login/login.component.ts","webpack:///./src/app/Components/Authentification/register/register.component.css","webpack:///./src/app/Components/Authentification/register/register.component.html","webpack:///./src/app/Components/Authentification/register/register.component.ts","webpack:///./src/app/Components/Shared/confirm-delete/confirm-delete.component.css","webpack:///./src/app/Components/Shared/confirm-delete/confirm-delete.component.html","webpack:///./src/app/Components/Shared/confirm-delete/confirm-delete.component.ts","webpack:///./src/app/Components/check-current-session/Recette/releveIndex-list/releveIndex-add/releveIndex-add.component.css","webpack:///./src/app/Components/check-current-session/Recette/releveIndex-list/releveIndex-add/releveIndex-add.component.html","webpack:///./src/app/Components/check-current-session/Recette/releveIndex-list/releveIndex-add/releveIndex-add.component.ts","webpack:///./src/app/Components/check-current-session/Recette/releveIndex-list/releveIndex-edit/releveIndex-edit.component.css","webpack:///./src/app/Components/check-current-session/Recette/releveIndex-list/releveIndex-edit/releveIndex-edit.component.html","webpack:///./src/app/Components/check-current-session/Recette/releveIndex-list/releveIndex-edit/releveIndex-edit.component.ts","webpack:///./src/app/Components/check-current-session/Recette/releveIndex-list/releveIndex-list.component.css","webpack:///./src/app/Components/check-current-session/Recette/releveIndex-list/releveIndex-list.component.html","webpack:///./src/app/Components/check-current-session/Recette/releveIndex-list/releveIndex-list.component.ts","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-bon-valeur/recette-bon-valeur-add/recette-bon-valeur-add.component.css","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-bon-valeur/recette-bon-valeur-add/recette-bon-valeur-add.component.html","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-bon-valeur/recette-bon-valeur-add/recette-bon-valeur-add.component.ts","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-bon-valeur/recette-bon-valeur-edit/recette-bon-valeur-edit.component.css","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-bon-valeur/recette-bon-valeur-edit/recette-bon-valeur-edit.component.html","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-bon-valeur/recette-bon-valeur-edit/recette-bon-valeur-edit.component.ts","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-bon-valeur/recette-bon-valeur.component.css","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-bon-valeur/recette-bon-valeur.component.html","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-bon-valeur/recette-bon-valeur.component.ts","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-carte-bon/recette-carte-bon-add/recette-carte-bon-add.component.css","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-carte-bon/recette-carte-bon-add/recette-carte-bon-add.component.html","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-carte-bon/recette-carte-bon-add/recette-carte-bon-add.component.ts","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-carte-bon/recette-carte-bon-edit/recette-carte-bon-edit.component.css","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-carte-bon/recette-carte-bon-edit/recette-carte-bon-edit.component.html","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-carte-bon/recette-carte-bon-edit/recette-carte-bon-edit.component.ts","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-carte-bon/recette-carte-bon-more-details/recette-carte-bon-more-details.component.css","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-carte-bon/recette-carte-bon-more-details/recette-carte-bon-more-details.component.html","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-carte-bon/recette-carte-bon-more-details/recette-carte-bon-more-details.component.ts","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-carte-bon/recette-carte-bon.component.css","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-carte-bon/recette-carte-bon.component.html","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-carte-bon/recette-carte-bon.component.ts","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-cheque/recette-cheque-add/recette-cheque-add.component.css","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-cheque/recette-cheque-add/recette-cheque-add.component.html","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-cheque/recette-cheque-add/recette-cheque-add.component.ts","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-cheque/recette-cheque-edit/recette-cheque-edit.component.css","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-cheque/recette-cheque-edit/recette-cheque-edit.component.html","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-cheque/recette-cheque-edit/recette-cheque-edit.component.ts","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-cheque/recette-cheque-more-details/recette-cheque-more-details.component.css","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-cheque/recette-cheque-more-details/recette-cheque-more-details.component.html","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-cheque/recette-cheque-more-details/recette-cheque-more-details.component.ts","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-cheque/recette-cheque.component.css","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-cheque/recette-cheque.component.html","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-cheque/recette-cheque.component.ts","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-credits/recette-credits-add/recette-credits-add.component.css","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-credits/recette-credits-add/recette-credits-add.component.html","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-credits/recette-credits-add/recette-credits-add.component.ts","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-credits/recette-credits-edit/recette-credits-edit.component.css","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-credits/recette-credits-edit/recette-credits-edit.component.html","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-credits/recette-credits-edit/recette-credits-edit.component.ts","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-credits/recette-credits.component.css","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-credits/recette-credits.component.html","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-credits/recette-credits.component.ts","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-espece/recette-espece-add/recette-espece-add.component.css","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-espece/recette-espece-add/recette-espece-add.component.html","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-espece/recette-espece-add/recette-espece-add.component.ts","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-espece/recette-espece-edit/recette-espece-edit.component.css","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-espece/recette-espece-edit/recette-espece-edit.component.html","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-espece/recette-espece-edit/recette-espece-edit.component.ts","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-espece/recette-espece.component.css","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-espece/recette-espece.component.html","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-espece/recette-espece.component.ts","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-steg-et-autres/recette-steg-et-autres-add/recette-steg-et-autres-add.component.css","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-steg-et-autres/recette-steg-et-autres-add/recette-steg-et-autres-add.component.html","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-steg-et-autres/recette-steg-et-autres-add/recette-steg-et-autres-add.component.ts","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-steg-et-autres/recette-steg-et-autres-edit/recette-steg-et-autres-edit.component.css","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-steg-et-autres/recette-steg-et-autres-edit/recette-steg-et-autres-edit.component.html","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-steg-et-autres/recette-steg-et-autres-edit/recette-steg-et-autres-edit.component.ts","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-steg-et-autres/recette-steg-et-autres-more-details/recette-steg-et-autres-more-details.component.css","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-steg-et-autres/recette-steg-et-autres-more-details/recette-steg-et-autres-more-details.component.html","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-steg-et-autres/recette-steg-et-autres-more-details/recette-steg-et-autres-more-details.component.ts","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-steg-et-autres/recette-steg-et-autres.component.css","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-steg-et-autres/recette-steg-et-autres.component.html","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-steg-et-autres/recette-steg-et-autres.component.ts","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-subvention-peche/recette-subvention-peche-add/recette-subvention-peche-add.component.css","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-subvention-peche/recette-subvention-peche-add/recette-subvention-peche-add.component.html","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-subvention-peche/recette-subvention-peche-add/recette-subvention-peche-add.component.ts","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-subvention-peche/recette-subvention-peche-edit/recette-subvention-peche-edit.component.css","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-subvention-peche/recette-subvention-peche-edit/recette-subvention-peche-edit.component.html","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-subvention-peche/recette-subvention-peche-edit/recette-subvention-peche-edit.component.ts","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-subvention-peche/recette-subvention-peche-more-details/recette-subvention-peche-more-details.component.css","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-subvention-peche/recette-subvention-peche-more-details/recette-subvention-peche-more-details.component.html","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-subvention-peche/recette-subvention-peche-more-details/recette-subvention-peche-more-details.component.ts","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-subvention-peche/recette-subvention-peche.component.css","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-subvention-peche/recette-subvention-peche.component.html","webpack:///./src/app/Components/check-current-session/Recette/show-details/recette-subvention-peche/recette-subvention-peche.component.ts","webpack:///./src/app/Components/check-current-session/Recette/show-details/show-details.component.css","webpack:///./src/app/Components/check-current-session/Recette/show-details/show-details.component.html","webpack:///./src/app/Components/check-current-session/Recette/show-details/show-details.component.ts","webpack:///./src/app/Components/check-current-session/check-current-session.component.css","webpack:///./src/app/Components/check-current-session/check-current-session.component.html","webpack:///./src/app/Components/check-current-session/check-current-session.component.ts","webpack:///./src/app/Components/check-current-session/confirm-session-closer/confirm-session-closer.component.css","webpack:///./src/app/Components/check-current-session/confirm-session-closer/confirm-session-closer.component.html","webpack:///./src/app/Components/check-current-session/confirm-session-closer/confirm-session-closer.component.ts","webpack:///./src/app/Components/check-current-session/modify-session/modify-session.component.css","webpack:///./src/app/Components/check-current-session/modify-session/modify-session.component.html","webpack:///./src/app/Components/check-current-session/modify-session/modify-session.component.ts","webpack:///./src/app/Components/check-current-session/open-session/open-session.component.css","webpack:///./src/app/Components/check-current-session/open-session/open-session.component.html","webpack:///./src/app/Components/check-current-session/open-session/open-session.component.ts","webpack:///./src/app/Components/check-current-session/session-pompiste-list/session-pompiste-list.component.css","webpack:///./src/app/Components/check-current-session/session-pompiste-list/session-pompiste-list.component.html","webpack:///./src/app/Components/check-current-session/session-pompiste-list/session-pompiste-list.component.ts","webpack:///./src/app/Components/home/calendar/calendar.component.css","webpack:///./src/app/Components/home/calendar/calendar.component.html","webpack:///./src/app/Components/home/calendar/calendar.component.ts","webpack:///./src/app/Components/home/calendar/list-events/list-events.component.css","webpack:///./src/app/Components/home/calendar/list-events/list-events.component.html","webpack:///./src/app/Components/home/calendar/list-events/list-events.component.ts","webpack:///./src/app/Components/home/calendar/list-events/update-event/update-event.component.css","webpack:///./src/app/Components/home/calendar/list-events/update-event/update-event.component.html","webpack:///./src/app/Components/home/calendar/list-events/update-event/update-event.component.ts","webpack:///./src/app/Components/home/home.component.css","webpack:///./src/app/Components/home/home.component.html","webpack:///./src/app/Components/home/home.component.ts","webpack:///./src/app/Components/home/tanks/tanks.component.css","webpack:///./src/app/Components/home/tanks/tanks.component.html","webpack:///./src/app/Components/home/tanks/tanks.component.ts","webpack:///./src/app/Components/inventaire/Bon valeur/bon-valeur-list/bon-valeur-edit/bon-valeur-edit.component.css","webpack:///./src/app/Components/inventaire/Bon valeur/bon-valeur-list/bon-valeur-edit/bon-valeur-edit.component.html","webpack:///./src/app/Components/inventaire/Bon valeur/bon-valeur-list/bon-valeur-edit/bon-valeur-edit.component.ts","webpack:///./src/app/Components/inventaire/Bon valeur/bon-valeur-list/bon-valeur-list.component.css","webpack:///./src/app/Components/inventaire/Bon valeur/bon-valeur-list/bon-valeur-list.component.html","webpack:///./src/app/Components/inventaire/Bon valeur/bon-valeur-list/bon-valeur-list.component.ts","webpack:///./src/app/Components/inventaire/Carte Bon/card-bon-list/card-bon-edit/card-bon-edit.component.css","webpack:///./src/app/Components/inventaire/Carte Bon/card-bon-list/card-bon-edit/card-bon-edit.component.html","webpack:///./src/app/Components/inventaire/Carte Bon/card-bon-list/card-bon-edit/card-bon-edit.component.ts","webpack:///./src/app/Components/inventaire/Carte Bon/card-bon-list/card-bon-list.component.css","webpack:///./src/app/Components/inventaire/Carte Bon/card-bon-list/card-bon-list.component.html","webpack:///./src/app/Components/inventaire/Carte Bon/card-bon-list/card-bon-list.component.ts","webpack:///./src/app/Components/inventaire/Carte Bon/card-bon-list/card-bon-more-details/card-bon-more-details.component.css","webpack:///./src/app/Components/inventaire/Carte Bon/card-bon-list/card-bon-more-details/card-bon-more-details.component.html","webpack:///./src/app/Components/inventaire/Carte Bon/card-bon-list/card-bon-more-details/card-bon-more-details.component.ts","webpack:///./src/app/Components/inventaire/Cheque/cheque-list/cheque-edit/cheque-edit.component.css","webpack:///./src/app/Components/inventaire/Cheque/cheque-list/cheque-edit/cheque-edit.component.html","webpack:///./src/app/Components/inventaire/Cheque/cheque-list/cheque-edit/cheque-edit.component.ts","webpack:///./src/app/Components/inventaire/Cheque/cheque-list/cheque-list.component.css","webpack:///./src/app/Components/inventaire/Cheque/cheque-list/cheque-list.component.html","webpack:///./src/app/Components/inventaire/Cheque/cheque-list/cheque-list.component.ts","webpack:///./src/app/Components/inventaire/Credit/credit-list/credit-add/credit-add.component.css","webpack:///./src/app/Components/inventaire/Credit/credit-list/credit-add/credit-add.component.html","webpack:///./src/app/Components/inventaire/Credit/credit-list/credit-add/credit-add.component.ts","webpack:///./src/app/Components/inventaire/Credit/credit-list/credit-edit/credit-edit.component.css","webpack:///./src/app/Components/inventaire/Credit/credit-list/credit-edit/credit-edit.component.html","webpack:///./src/app/Components/inventaire/Credit/credit-list/credit-edit/credit-edit.component.ts","webpack:///./src/app/Components/inventaire/Credit/credit-list/credit-list.component.css","webpack:///./src/app/Components/inventaire/Credit/credit-list/credit-list.component.html","webpack:///./src/app/Components/inventaire/Credit/credit-list/credit-list.component.ts","webpack:///./src/app/Components/inventaire/Espece/espece-list/espece-edit/espece-edit.component.css","webpack:///./src/app/Components/inventaire/Espece/espece-list/espece-edit/espece-edit.component.html","webpack:///./src/app/Components/inventaire/Espece/espece-list/espece-edit/espece-edit.component.ts","webpack:///./src/app/Components/inventaire/Espece/espece-list/espece-list.component.css","webpack:///./src/app/Components/inventaire/Espece/espece-list/espece-list.component.html","webpack:///./src/app/Components/inventaire/Espece/espece-list/espece-list.component.ts","webpack:///./src/app/Components/inventaire/Steg-et-autres/steg-et-autres-list/steg-et-autres-edit/steg-et-autres-edit.component.css","webpack:///./src/app/Components/inventaire/Steg-et-autres/steg-et-autres-list/steg-et-autres-edit/steg-et-autres-edit.component.html","webpack:///./src/app/Components/inventaire/Steg-et-autres/steg-et-autres-list/steg-et-autres-edit/steg-et-autres-edit.component.ts","webpack:///./src/app/Components/inventaire/Steg-et-autres/steg-et-autres-list/steg-et-autres-list.component.css","webpack:///./src/app/Components/inventaire/Steg-et-autres/steg-et-autres-list/steg-et-autres-list.component.html","webpack:///./src/app/Components/inventaire/Steg-et-autres/steg-et-autres-list/steg-et-autres-list.component.ts","webpack:///./src/app/Components/inventaire/Steg-et-autres/steg-et-autres-list/steg-et-autres-more-details/steg-et-autres-more-details.component.css","webpack:///./src/app/Components/inventaire/Steg-et-autres/steg-et-autres-list/steg-et-autres-more-details/steg-et-autres-more-details.component.html","webpack:///./src/app/Components/inventaire/Steg-et-autres/steg-et-autres-list/steg-et-autres-more-details/steg-et-autres-more-details.component.ts","webpack:///./src/app/Components/inventaire/Subvention Peche/subvention-peche-list/subvention-peche-edit/subvention-peche-edit.component.css","webpack:///./src/app/Components/inventaire/Subvention Peche/subvention-peche-list/subvention-peche-edit/subvention-peche-edit.component.html","webpack:///./src/app/Components/inventaire/Subvention Peche/subvention-peche-list/subvention-peche-edit/subvention-peche-edit.component.ts","webpack:///./src/app/Components/inventaire/Subvention Peche/subvention-peche-list/subvention-peche-list.component.css","webpack:///./src/app/Components/inventaire/Subvention Peche/subvention-peche-list/subvention-peche-list.component.html","webpack:///./src/app/Components/inventaire/Subvention Peche/subvention-peche-list/subvention-peche-list.component.ts","webpack:///./src/app/Components/inventaire/Subvention Peche/subvention-peche-list/subvention-peche-more-details/subvention-peche-more-details.component.css","webpack:///./src/app/Components/inventaire/Subvention Peche/subvention-peche-list/subvention-peche-more-details/subvention-peche-more-details.component.html","webpack:///./src/app/Components/inventaire/Subvention Peche/subvention-peche-list/subvention-peche-more-details/subvention-peche-more-details.component.ts","webpack:///./src/app/Components/inventaire/inventaire.component.css","webpack:///./src/app/Components/inventaire/inventaire.component.html","webpack:///./src/app/Components/inventaire/inventaire.component.ts","webpack:///./src/app/Components/parameters/Carte Bon/card-type-list/card-type-add/card-type-add.component.css","webpack:///./src/app/Components/parameters/Carte Bon/card-type-list/card-type-add/card-type-add.component.html","webpack:///./src/app/Components/parameters/Carte Bon/card-type-list/card-type-add/card-type-add.component.ts","webpack:///./src/app/Components/parameters/Carte Bon/card-type-list/card-type-edit/card-type-edit.component.css","webpack:///./src/app/Components/parameters/Carte Bon/card-type-list/card-type-edit/card-type-edit.component.html","webpack:///./src/app/Components/parameters/Carte Bon/card-type-list/card-type-edit/card-type-edit.component.ts","webpack:///./src/app/Components/parameters/Carte Bon/card-type-list/card-type-list.component.css","webpack:///./src/app/Components/parameters/Carte Bon/card-type-list/card-type-list.component.html","webpack:///./src/app/Components/parameters/Carte Bon/card-type-list/card-type-list.component.ts","webpack:///./src/app/Components/parameters/bank/bank-list/bank-add/bank-add.component.css","webpack:///./src/app/Components/parameters/bank/bank-list/bank-add/bank-add.component.html","webpack:///./src/app/Components/parameters/bank/bank-list/bank-add/bank-add.component.ts","webpack:///./src/app/Components/parameters/bank/bank-list/bank-edit/bank-edit.component.css","webpack:///./src/app/Components/parameters/bank/bank-list/bank-edit/bank-edit.component.html","webpack:///./src/app/Components/parameters/bank/bank-list/bank-edit/bank-edit.component.ts","webpack:///./src/app/Components/parameters/bank/bank-list/bank-list.component.css","webpack:///./src/app/Components/parameters/bank/bank-list/bank-list.component.html","webpack:///./src/app/Components/parameters/bank/bank-list/bank-list.component.ts","webpack:///./src/app/Components/parameters/bank/bank-list/bank-more-details/bank-more-details.component.css","webpack:///./src/app/Components/parameters/bank/bank-list/bank-more-details/bank-more-details.component.html","webpack:///./src/app/Components/parameters/bank/bank-list/bank-more-details/bank-more-details.component.ts","webpack:///./src/app/Components/parameters/carburant/add-carburant/add-carburant.component.css","webpack:///./src/app/Components/parameters/carburant/add-carburant/add-carburant.component.html","webpack:///./src/app/Components/parameters/carburant/add-carburant/add-carburant.component.ts","webpack:///./src/app/Components/parameters/carburant/carburant.component.css","webpack:///./src/app/Components/parameters/carburant/carburant.component.html","webpack:///./src/app/Components/parameters/carburant/carburant.component.ts","webpack:///./src/app/Components/parameters/carburant/update-carburant/update-carburant.component.css","webpack:///./src/app/Components/parameters/carburant/update-carburant/update-carburant.component.html","webpack:///./src/app/Components/parameters/carburant/update-carburant/update-carburant.component.ts","webpack:///./src/app/Components/parameters/citerne/citerne-list/add-citerne/add-citerne.component.css","webpack:///./src/app/Components/parameters/citerne/citerne-list/add-citerne/add-citerne.component.html","webpack:///./src/app/Components/parameters/citerne/citerne-list/add-citerne/add-citerne.component.ts","webpack:///./src/app/Components/parameters/citerne/citerne-list/citerne-list.component.css","webpack:///./src/app/Components/parameters/citerne/citerne-list/citerne-list.component.html","webpack:///./src/app/Components/parameters/citerne/citerne-list/citerne-list.component.ts","webpack:///./src/app/Components/parameters/citerne/citerne-list/more-citerne-details/more-citerne-details.component.css","webpack:///./src/app/Components/parameters/citerne/citerne-list/more-citerne-details/more-citerne-details.component.html","webpack:///./src/app/Components/parameters/citerne/citerne-list/more-citerne-details/more-citerne-details.component.ts","webpack:///./src/app/Components/parameters/citerne/citerne-list/update-citerne/update-citerne.component.css","webpack:///./src/app/Components/parameters/citerne/citerne-list/update-citerne/update-citerne.component.html","webpack:///./src/app/Components/parameters/citerne/citerne-list/update-citerne/update-citerne.component.ts","webpack:///./src/app/Components/parameters/client/client-list/add-client/add-client.component.css","webpack:///./src/app/Components/parameters/client/client-list/add-client/add-client.component.html","webpack:///./src/app/Components/parameters/client/client-list/add-client/add-client.component.ts","webpack:///./src/app/Components/parameters/client/client-list/client-list.component.css","webpack:///./src/app/Components/parameters/client/client-list/client-list.component.html","webpack:///./src/app/Components/parameters/client/client-list/client-list.component.ts","webpack:///./src/app/Components/parameters/client/client-list/more-details/more-details.component.css","webpack:///./src/app/Components/parameters/client/client-list/more-details/more-details.component.html","webpack:///./src/app/Components/parameters/client/client-list/more-details/more-details.component.ts","webpack:///./src/app/Components/parameters/client/client-list/update-client/update-client.component.css","webpack:///./src/app/Components/parameters/client/client-list/update-client/update-client.component.html","webpack:///./src/app/Components/parameters/client/client-list/update-client/update-client.component.ts","webpack:///./src/app/Components/parameters/distributeur/distributeur-list/distributeur-add/distributeur-add.component.css","webpack:///./src/app/Components/parameters/distributeur/distributeur-list/distributeur-add/distributeur-add.component.html","webpack:///./src/app/Components/parameters/distributeur/distributeur-list/distributeur-add/distributeur-add.component.ts","webpack:///./src/app/Components/parameters/distributeur/distributeur-list/distributeur-edit/distributeur-edit.component.css","webpack:///./src/app/Components/parameters/distributeur/distributeur-list/distributeur-edit/distributeur-edit.component.html","webpack:///./src/app/Components/parameters/distributeur/distributeur-list/distributeur-edit/distributeur-edit.component.ts","webpack:///./src/app/Components/parameters/distributeur/distributeur-list/distributeur-list.component.css","webpack:///./src/app/Components/parameters/distributeur/distributeur-list/distributeur-list.component.html","webpack:///./src/app/Components/parameters/distributeur/distributeur-list/distributeur-list.component.ts","webpack:///./src/app/Components/parameters/index/index-list/index-add/index-add.component.css","webpack:///./src/app/Components/parameters/index/index-list/index-add/index-add.component.html","webpack:///./src/app/Components/parameters/index/index-list/index-add/index-add.component.ts","webpack:///./src/app/Components/parameters/index/index-list/index-edit/index-edit.component.css","webpack:///./src/app/Components/parameters/index/index-list/index-edit/index-edit.component.html","webpack:///./src/app/Components/parameters/index/index-list/index-edit/index-edit.component.ts","webpack:///./src/app/Components/parameters/index/index-list/index-list.component.css","webpack:///./src/app/Components/parameters/index/index-list/index-list.component.html","webpack:///./src/app/Components/parameters/index/index-list/index-list.component.ts","webpack:///./src/app/Components/parameters/parameters.component.css","webpack:///./src/app/Components/parameters/parameters.component.html","webpack:///./src/app/Components/parameters/parameters.component.ts","webpack:///./src/app/Components/parameters/pompiste/pompiste-list/add-pompiste/add-pompiste.component.css","webpack:///./src/app/Components/parameters/pompiste/pompiste-list/add-pompiste/add-pompiste.component.html","webpack:///./src/app/Components/parameters/pompiste/pompiste-list/add-pompiste/add-pompiste.component.ts","webpack:///./src/app/Components/parameters/pompiste/pompiste-list/pompiste-list.component.css","webpack:///./src/app/Components/parameters/pompiste/pompiste-list/pompiste-list.component.html","webpack:///./src/app/Components/parameters/pompiste/pompiste-list/pompiste-list.component.ts","webpack:///./src/app/Components/parameters/pompiste/pompiste-list/update-pompiste/update-pompiste.component.css","webpack:///./src/app/Components/parameters/pompiste/pompiste-list/update-pompiste/update-pompiste.component.html","webpack:///./src/app/Components/parameters/pompiste/pompiste-list/update-pompiste/update-pompiste.component.ts","webpack:///./src/app/Components/parameters/prixCarburant/prix-carburant-list/prix-carburant-add/prix-carburant-add.component.css","webpack:///./src/app/Components/parameters/prixCarburant/prix-carburant-list/prix-carburant-add/prix-carburant-add.component.html","webpack:///./src/app/Components/parameters/prixCarburant/prix-carburant-list/prix-carburant-add/prix-carburant-add.component.ts","webpack:///./src/app/Components/parameters/prixCarburant/prix-carburant-list/prix-carburant-edit/prix-carburant-edit.component.css","webpack:///./src/app/Components/parameters/prixCarburant/prix-carburant-list/prix-carburant-edit/prix-carburant-edit.component.html","webpack:///./src/app/Components/parameters/prixCarburant/prix-carburant-list/prix-carburant-edit/prix-carburant-edit.component.ts","webpack:///./src/app/Components/parameters/prixCarburant/prix-carburant-list/prix-carburant-list.component.css","webpack:///./src/app/Components/parameters/prixCarburant/prix-carburant-list/prix-carburant-list.component.html","webpack:///./src/app/Components/parameters/prixCarburant/prix-carburant-list/prix-carburant-list.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/app/shared/Guards/auth.guard.ts","webpack:///./src/app/shared/models/Cheque.model.ts","webpack:///./src/app/shared/models/Index.model.ts","webpack:///./src/app/shared/models/ReleveIndex.model.ts","webpack:///./src/app/shared/models/StegEtAutre.model.ts","webpack:///./src/app/shared/models/bank.ts","webpack:///./src/app/shared/models/bonValeur.model.ts","webpack:///./src/app/shared/models/carburant.ts","webpack:///./src/app/shared/models/cardType.model.ts","webpack:///./src/app/shared/models/carteBon.model.ts","webpack:///./src/app/shared/models/citerne.model.ts","webpack:///./src/app/shared/models/client.model.ts","webpack:///./src/app/shared/models/credit.model.ts","webpack:///./src/app/shared/models/distributeur.model.ts","webpack:///./src/app/shared/models/espece.ts","webpack:///./src/app/shared/models/event.model.ts","webpack:///./src/app/shared/models/payementCredit.model.ts","webpack:///./src/app/shared/models/pompiste.model.ts","webpack:///./src/app/shared/models/prixcarburant.ts","webpack:///./src/app/shared/models/session.model.ts","webpack:///./src/app/shared/models/subventionPeche.ts","webpack:///./src/app/shared/services/auth.service.ts","webpack:///./src/app/shared/services/bank.service.ts","webpack:///./src/app/shared/services/bon-valeur.service.ts","webpack:///./src/app/shared/services/carburant.service.ts","webpack:///./src/app/shared/services/carte-bon-type.service.ts","webpack:///./src/app/shared/services/carte-bon.service.ts","webpack:///./src/app/shared/services/cheque.service.ts","webpack:///./src/app/shared/services/citerne.service.ts","webpack:///./src/app/shared/services/client.service.ts","webpack:///./src/app/shared/services/credit.service.ts","webpack:///./src/app/shared/services/distributeur.service.ts","webpack:///./src/app/shared/services/espece.service.ts","webpack:///./src/app/shared/services/event.service.ts","webpack:///./src/app/shared/services/index.service.ts","webpack:///./src/app/shared/services/notification.service.ts","webpack:///./src/app/shared/services/payement-credit.service.ts","webpack:///./src/app/shared/services/pompiste.service.ts","webpack:///./src/app/shared/services/prix-carburant.service.ts","webpack:///./src/app/shared/services/releveIndex.service.ts","webpack:///./src/app/shared/services/session.service.ts","webpack:///./src/app/shared/services/steg-et-autres.service.ts","webpack:///./src/app/shared/services/subvention-peche.service.ts","webpack:///./src/app/shared/services/token-interceptor.service.ts","webpack:///./src/app/shared/services/weather.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,+DAA+D,+K;;;;;;;;;;;ACA/D,g9C;;;;;;;;;;;;;;;;;;;ACAkD;AACkB;AAC3B;AAOzC;IAGE,wBACU,IAAiB,EACjB,KAAa;QADb,SAAI,GAAJ,IAAI,CAAa;QACjB,UAAK,GAAL,KAAK,CAAQ;QAHvB,kBAAa,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;IAGjB,CAAC;IAE5B,iCAAQ,GAAR;QACE,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE;YACxB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SAChC;IACH,CAAC;IAED,kCAAS,GAAT;QAAA,iBAUC;QATC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC;aACpC,SAAS,CACR,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;YACzC,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACjC,CAAC,EACD,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CACxB,CAAC;IACN,CAAC;IAvBU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,+HAAqC;;SAEtC,CAAC;+EAKgB,yEAAW;YACV,sDAAM;OALZ,cAAc,CAyB1B;IAAD,qBAAC;CAAA;AAzB0B;;;;;;;;;;;;ACT3B,+DAA+D,uL;;;;;;;;;;;ACA/D,4/C;;;;;;;;;;;;;;;;;;;ACAkD;AACkB;AAC3B;AAOzC;IAGE,2BAAoB,IAAiB,EAAU,MAAc;QAAzC,SAAI,GAAJ,IAAI,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAD7D,qBAAgB,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC,CAAC;IACmB,CAAC;IAElE,oCAAQ,GAAR;IACA,CAAC;IAED,wCAAY,GAAZ;QAAA,iBAUC;QATC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC;aAC5C,SAAS,CACR,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;YACzC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAClC,CAAC,EACD,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CACxB,CAAC;IACJ,CAAC;IAlBU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,wIAAwC;;SAEzC,CAAC;+EAI0B,yEAAW,EAAkB,sDAAM;OAHlD,iBAAiB,CAmB7B;IAAD,wBAAC;CAAA;AAnB6B;;;;;;;;;;;;ACT9B,+DAA+D,2L;;;;;;;;;;;ACA/D,uFAAuF,KAAK,8T;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlC;AACQ;AACC;AACY;AACE;AACJ;AACZ;AACI;AACU;AACG;AACX;AACN;AACQ;AAIJ;AACG;AACE;AACP;AACA;AACiB;AACH;AAOjF;IAKE,gCACS,SAA+C,EACrB,IAAS,EAClC,aAA4B,EAC5B,eAAoC,EACpC,kBAAsC,EACtC,YAA0B,EAC1B,cAA8B,EAC9B,mBAAwC,EACxC,cAA8B,EAC9B,oBAA0C,EAC1C,eAAgC,EAChC,YAAiC,EACjC,YAA0B,EAC1B,gBAAkC,EAClC,eAAgC,EAChC,gBAAkC,EAClC,aAA4B,EAC5B,aAA4B,EAC5B,qBAA4C,EAC5C,kBAAuC;QAnBxC,cAAS,GAAT,SAAS,CAAsC;QACrB,SAAI,GAAJ,IAAI,CAAK;QAClC,kBAAa,GAAb,aAAa,CAAe;QAC5B,oBAAe,GAAf,eAAe,CAAqB;QACpC,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAqB;QACjC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,oBAAe,GAAf,eAAe,CAAiB;QAChC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,kBAAa,GAAb,aAAa,CAAe;QAC5B,kBAAa,GAAb,aAAa,CAAe;QAC5B,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,uBAAkB,GAAlB,kBAAkB,CAAqB;QAC/C,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QAClB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;IACtB,CAAC;IAED,yCAAQ,GAAR;QACE,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAC;IAC1C,CAAC;IAED,uCAAM,GAAN;QACE,IAAI,IAAI,CAAC,GAAG,KAAK,QAAQ,EAAE;YACzB,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;aAAM,IAAI,IAAI,CAAC,GAAG,KAAK,gBAAgB,EAAE;YACxC,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;aAAM,IAAI,IAAI,CAAC,GAAG,KAAK,cAAc,EAAE;YACtC,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;aAAM,IAAI,IAAI,CAAC,GAAG,KAAK,OAAO,EAAE;YAC/B,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;aAAM,IAAI,IAAI,CAAC,GAAG,KAAK,SAAS,EAAE;YACjC,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;aAAM,IAAI,IAAI,CAAC,GAAG,KAAK,cAAc,EAAE;YACtC,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;aAAM,IAAI,IAAI,CAAC,GAAG,KAAK,gBAAgB,EAAE;YACxC,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC5B;aAAM,IAAI,IAAI,CAAC,GAAG,KAAK,UAAU,EAAE;YAClC,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;aAAM,IAAI,IAAI,CAAC,GAAG,KAAK,WAAW,EAAE;YACnC,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;aAAM,IAAI,IAAI,CAAC,GAAG,KAAK,WAAW,EAAE;YACnC,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;aAAM,IAAI,IAAI,CAAC,GAAG,KAAK,UAAU,EAAE;YAClC,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;aAAM,IAAI,IAAI,CAAC,GAAG,KAAK,WAAW,EAAE;YACnC,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;aAAM,IAAI,IAAI,CAAC,GAAG,KAAK,QAAQ,EAAE;YAChC,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;aAAM,IAAI,IAAI,CAAC,GAAG,KAAK,QAAQ,EAAE;YAChC,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;aAAM,IAAI,IAAI,CAAC,GAAG,KAAK,kBAAkB,EAAE;YAC1C,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAC9B;aAAM,IAAI,IAAI,CAAC,GAAG,KAAK,mBAAmB,EAAE;YAC3C,IAAI,CAAC,sBAAsB,EAAE,CAAC;SAC/B;aAAM,IAAI,IAAI,CAAC,GAAG,KAAK,gBAAgB,EAAE;YACxC,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC5B;aAAM,IAAI,IAAI,CAAC,GAAG,KAAK,iBAAiB,EAAE;YACzC,IAAI,CAAC,oBAAoB,EAAE,CAAC;SAC7B;aAAM,IAAI,IAAI,CAAC,GAAG,KAAK,aAAa,EAAE;YACrC,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;aAAM,IAAI,IAAI,CAAC,GAAG,KAAK,qBAAqB,EAAE;YAC7C,IAAI,CAAC,wBAAwB,EAAE,CAAC;SACjC;IACH,CAAC;IAED,wCAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,oDAAmB,GAAnB;QAAA,iBASC;QARC,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YAClE,KAAI,CAAC,oBAAoB,CAAC,gBAAgB,EAAE,CAAC;YAC7C,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAI,KAAI,CAAC,GAAG,oCAAuB,CAAC,CAAC;QAChE,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kDAAiB,GAAjB;QAAA,iBASC;QARC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YAC9D,KAAI,CAAC,kBAAkB,CAAC,mBAAmB,EAAE,CAAC;YAC9C,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAI,KAAI,CAAC,GAAG,oCAAuB,CAAC,CAAC;QAChE,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,yDAAwB,GAAxB;QAAA,iBASC;QARC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YAC9D,KAAI,CAAC,kBAAkB,CAAC,uBAAuB,CAAC,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;YACtF,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAI,KAAI,CAAC,GAAG,oCAAuB,CAAC,CAAC;QAChE,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gDAAe,GAAf;QAAA,iBAwBC;QAvBC,IAAI,CAAC,cAAc,CAAC,qBAAqB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACrE,8CAA8C;YACxC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,UAAC,OAAgB;gBACxC,OAAO,CAAC,SAAS,GAAG,0BAA0B,CAAC;gBAC/C,KAAI,CAAC,cAAc,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,aAAG;gBACrE,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACxE,8CAA8C;YACxC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAC,OAAsB;gBAC1C,KAAI,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,aAAG;gBACxE,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YAC1D,KAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC;YAC1C,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAI,KAAI,CAAC,GAAG,oCAAuB,CAAC,CAAC;QAChE,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mDAAkB,GAAlB;QAAA,iBAeC;QAdC,IAAI,CAAC,YAAY,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,IAAa;YACxE,IAAI,CAAC,OAAO,CAAC,UAAC,OAAc;gBAC1B,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,aAAG;gBACxD,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YAChE,KAAI,CAAC,mBAAmB,CAAC,oBAAoB,EAAE,CAAC;YAChD,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAI,KAAI,CAAC,GAAG,oCAAuB,CAAC,CAAC;QAChE,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,8CAAa,GAAb;QAAA,iBAeC;QAdC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,IAAa;YACnE,IAAI,CAAC,OAAO,CAAC,UAAC,OAAc;gBAC1B,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,aAAG;gBACxD,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YACtD,KAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC;YACtC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAI,KAAI,CAAC,GAAG,oCAAuB,CAAC,CAAC;QAChE,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kDAAiB,GAAjB;QAAA,iBASC;QARC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YAC9D,KAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;YAClF,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAI,KAAI,CAAC,GAAG,oCAAuB,CAAC,CAAC;QAChE,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,+CAAc,GAAd;QAAA,iBASC;QARC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YACxD,KAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC;YACxC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAI,KAAI,CAAC,GAAG,oCAAuB,CAAC,CAAC;QAChE,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6CAAY,GAAZ;QAAA,iBASC;QARC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YACpD,KAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;YACpC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAI,KAAI,CAAC,GAAG,oCAAuB,CAAC,CAAC;QAChE,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6CAAY,GAAZ;QAAA,iBASC;QARC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YACpD,KAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;YACpC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAI,KAAI,CAAC,GAAG,oCAAuB,CAAC,CAAC;QAChE,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qDAAoB,GAApB;QAAA,iBASC;QARC,IAAI,CAAC,qBAAqB,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YACpE,KAAI,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;YACxF,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAI,KAAI,CAAC,GAAG,oCAAuB,CAAC,CAAC;QAChE,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gDAAe,GAAf;QAAA,iBASC;QARC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YAC1D,KAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC;YAC1C,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAI,KAAI,CAAC,GAAG,oCAAuB,CAAC,CAAC;QAChE,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,4CAAW,GAAX;QAAA,iBASC;QARC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YAClD,KAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;YACjC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAI,KAAI,CAAC,GAAG,oCAAuB,CAAC,CAAC;QAChE,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6CAAY,GAAZ;QAAA,iBASC;QARC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YACpD,KAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;YACpC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAI,KAAI,CAAC,GAAG,oCAAuB,CAAC,CAAC;QAChE,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,+CAAc,GAAd;QAAA,iBASC;QARC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YACxD,KAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC;YACxC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAI,KAAI,CAAC,GAAG,oCAAuB,CAAC,CAAC;QAChE,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,+CAAc,GAAd;QAAA,iBASC;QARC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YACxD,KAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC;YACxC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAI,KAAI,CAAC,GAAG,oCAAuB,CAAC,CAAC;QAChE,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,4CAAW,GAAX;QAAA,iBAYC;QAVC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,aAAG;YAC9D,KAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;YAC9B,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;YAChD,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACzB,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACjC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sDAAqB,GAArB;QAAA,iBASC;QARC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YACxD,KAAI,CAAC,eAAe,CAAC,oBAAoB,CAAC,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;YAChF,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAI,KAAI,CAAC,GAAG,oCAAuB,CAAC,CAAC;QAChE,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,oDAAmB,GAAnB;QAAA,iBASC;QARC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YACpD,KAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;YAC5E,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAI,KAAI,CAAC,GAAG,oCAAuB,CAAC,CAAC;QAChE,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,uDAAsB,GAAtB;QAAA,iBASC;QARC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YAC1D,KAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;YAClF,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAI,KAAI,CAAC,GAAG,oCAAuB,CAAC,CAAC;QAChE,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IA1UU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,gJAA8C;;SAE/C,CAAC;QAQG,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY,UAEP,gFAAa;YACX,8FAAmB;YAChB,0FAAkB;YACxB,8EAAY;YACV,kFAAc;YACT,4FAAmB;YACxB,mFAAc;YACR,gGAAoB;YACzB,qFAAe;YAClB,4FAAmB;YACnB,+EAAY;YACR,uFAAgB;YACjB,sFAAe;YACd,wFAAgB;YACnB,iFAAa;YACb,iFAAa;YACL,kGAAqB;YACxB,+FAAmB;OAzBtC,sBAAsB,CA4UlC;IAAD,6BAAC;CAAA;AA5UkC;;;;;;;;;;;;AC7BnC,+DAA+D,mP;;;;;;;;;;;ACA/D,20BAA20B,MAAM,s+BAAs+B,OAAO,6iB;;;;;;;;;;;;;;;;;;;;;;;;ACAjwD;AACK;AACM;AACK;AACE;AAEd;AAEiB;AAEb;AAOrE;IASE,iCACU,SAAgD,EACjD,kBAAsC,EACtC,cAA8B,EAC7B,YAA0B,EAC1B,gBAAsC,EACtC,YAAiC;QALjC,cAAS,GAAT,SAAS,CAAuC;QACjD,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,mBAAc,GAAd,cAAc,CAAgB;QAC7B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,qBAAgB,GAAhB,gBAAgB,CAAsB;QACtC,iBAAY,GAAZ,YAAY,CAAqB;QACzC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,IAAI,+EAAW,EAAE,CAAC;QACrC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;IACvB,CAAC;IAED,gDAAc,GAAd;QAAA,iBA+BC;QA9BC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,SAAgB;YACpF,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC;YACrC,KAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,aAA4B;gBACnF,KAAI,CAAC,WAAW,CAAC,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC;gBAC3C,KAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,KAAI,CAAC,WAAW,CAAC;qBACrD,SAAS,CACR,aAAG;oBACD,KAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAE,CAAC;oBACnF,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;oBACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC;gBAChE,CAAC,EACD,aAAG;oBACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACjB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACnC,CAAC,CACF,CAAC;YACN,CAAC,EACC,aAAG;gBACD;oBACE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACjB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAClC;YACH,CAAC,CAAC,CAAC;QACP,CAAC,EACC,aAAG;YACD;gBACE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAClC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,+CAAa,GAAb,UAAc,SAAiB;QAC7B,IAAM,GAAG,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,SAAS,KAAK,SAAS,EAAzB,CAAyB,CAAC,CAAC;QAClF,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;IAC/C,CAAC;IAED,yCAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,yCAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,0CAAQ,GAAR;QACE,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,EAAE,CAAC;IAC/C,CAAC;IAjEmB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;yDAAC;IACT;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;8DAAC;IAPtC,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,2LAA+C;;SAEhD,CAAC;+EAWqB,8DAAY;YACJ,0FAAkB;YACtB,kFAAc;YACf,8EAAY;YACR,+FAAoB;YACxB,4FAAmB;OAfhC,uBAAuB,CAyEnC;IAAD,8BAAC;CAAA;AAzEmC;;;;;;;;;;;;ACjBpC,+DAA+D,mP;;;;;;;;;;;ACA/D,sqDAAsqD,OAAO,qiB;;;;;;;;;;;;;;;;;;;;;ACAnnD;AAEQ;AACW;AACE;AAEV;AAOrE;IAIE,kCACS,SAAiD,EACxB,IAAS,EAClC,kBAAsC,EACtC,cAA8B,EAC7B,YAAiC;QAJlC,cAAS,GAAT,SAAS,CAAwC;QACxB,SAAI,GAAJ,IAAI,CAAK;QAClC,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,mBAAc,GAAd,cAAc,CAAgB;QAC7B,iBAAY,GAAZ,YAAY,CAAqB;QACzC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;IAChC,CAAC;IAED,2CAAQ,GAAR,UAAS,MAAc;QACrB,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;YACpC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YAClD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,iEAAiE,CAAC,CAAC;SAC3F;IACH,CAAC;IAED,oDAAiB,GAAjB;QAAA,iBAiBC;QAhBC,wCAAwC;QACxC,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,OAAO,CAAC,WAAC;YACzC,IAAI,CAAC,CAAC,GAAG,KAAK,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,EAAE;gBAC3C,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;aACvC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC;aAC9E,SAAS,CAAC,aAAG;YACZ,KAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;YAClF,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC;QAChE,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACT,CAAC;IAED,0CAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,0CAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,2CAAQ,GAAR;QACE,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,EAAE,CAAC;IAC/C,CAAC;IAjDU,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,8LAAgD;;SAEjD,CAAC;QAOG,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY,UAEH,0FAAkB;YACtB,kFAAc;YACf,4FAAmB;OAThC,wBAAwB,CAmDpC;IAAD,+BAAC;CAAA;AAnDoC;;;;;;;;;;;;ACbrC,kCAAkC,4BAA4B,sBAAsB,KAAK,mDAAmD,+gB;;;;;;;;;;;ACA5I,6tBAA6tB,mBAAmB,uRAAuR,gBAAgB,sQAAsQ,gBAAgB,0QAA0Q,kBAAkB,kQAAkQ,cAAc,4QAA4Q,gBAAgB,0DAA0D,kBAAkB,kNAAkN,sBAAsB,4jDAA4jD,2BAA2B,iGAAiG,2GAA2G,kGAAkG,mDAAmD,0GAA0G,8GAA8G,gL;;;;;;;;;;;;;;;;;;;;;;;;ACA9+I;AACN;AACQ;AACS;AACiB;AACd;AAEpB;AACkB;AAOvF;IAWE,kCACS,kBAAsC,EACtC,cAA8B,EAC7B,MAAiB;QAFlB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,mBAAc,GAAd,cAAc,CAAgB;QAC7B,WAAM,GAAN,MAAM,CAAW;QACzB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAIC,gDAAa,GAAb,UAAc,KAAM;QACd,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;QACrC,IAAI,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YAC1B,IAAI,CAAC,gBAAgB,GAAG,CAAC,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;SACpF;aAAM;YACL,IAAI,CAAC,gBAAgB,GAAG,CAAC,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;SAChH;IACP,CAAC;IAEH,2CAAQ,GAAR;IACA,CAAC;IAED,uDAAoB,GAApB;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kGAAuB,EAAE;YACxC,UAAU,EAAE,mBAAmB;SAChC,CAAC,CAAC;IACL,CAAC;IAED,gDAAa,GAAb;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oGAAoB,EAAE;YACrC,UAAU,EAAE,mBAAmB;SAChC,CAAC,CAAC;IACL,CAAC;IAED,iDAAc,GAAd;QACE,OAAO,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,EAAR,CAAQ,CAAC,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,KAAK,IAAK,UAAG,GAAG,KAAK,EAAX,CAAW,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACnH,CAAC;IAED,0DAAuB,GAAvB,UAAwB,EAAU,EAAE,GAAW;QAC7C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oHAAsB,EAAE;YACvC,IAAI,EAAE,EAAE,EAAE,MAAE,GAAG,OAAE;SAClB,CAAC,CAAC;IACL,CAAC;IAED,0DAAuB,GAAvB,UAAwB,KAAkB;QACxC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qGAAwB,EAAE;YACzC,UAAU,EAAE,mBAAmB;YAC/B,IAAI,EAAE,EAAE,KAAK,EAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE;SAC3C,CAAC,CAAC;IACL,CAAC;IAED,yCAAM,GAAN;QACE,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IACvF,CAAC;IAED,8CAAW,GAAX;QACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IA9DmB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;0DAAC;IACT;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;+DAAC;IAY/C;QADD,kEAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;iEASvC;IA5BQ,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,6KAAgD;;SAEjD,CAAC;+EAa6B,0FAAkB;YACtB,kFAAc;YACrB,2DAAS;OAdhB,wBAAwB,CAuEpC;IAAD,+BAAC;CAAA;AAvEoC;;;;;;;;;;;;ACfrC,+DAA+D,uR;;;;;;;;;;;ACA/D,0pE;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACY;AACb;AACyB;AACK;AAEV;AAOrE;IAKE,sCAAoB,SAAqD,EACrD,gBAAkC,EAClC,YAAiC,EACjC,cAA8B;QAH9B,cAAS,GAAT,SAAS,CAA4C;QACrD,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,iBAAY,GAAZ,YAAY,CAAqB;QACjC,mBAAc,GAAd,cAAc,CAAgB;QAChD,IAAI,CAAC,SAAS,GAAG,IAAI,2EAAS,EAAE,CAAC;QACjC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,+CAAQ,GAAR;QACE,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;QACD,IAAM,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;QAC5B,IAAM,IAAI,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACjD,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC;IAC7B,CAAC;IAED,8CAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,8CAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,mDAAY,GAAZ;QAAA,iBAYC;QAXC,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;QACpF,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QAC/D,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,aAAG;YAC9D,KAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;YAClF,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,gCAAgC,CAAC,CAAC;QAC9D,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IA1CU,4BAA4B;QALxC,+DAAS,CAAC;YACT,QAAQ,EAAE,4BAA4B;YACtC,+NAAsD;;SAEvD,CAAC;+EAM+B,8DAAY;YACL,uFAAgB;YACpB,4FAAmB;YACjB,kFAAc;OARvC,4BAA4B,CA2CxC;IAAD,mCAAC;CAAA;AA3CwC;;;;;;;;;;;;ACbzC,+DAA+D,2R;;;;;;;;;;;ACA/D,iqD;;;;;;;;;;;;;;;;;;;;;ACA0D;AAEQ;AACQ;AACK;AAEV;AAOrE;IAKE,uCAAmB,SAAsD,EAC7B,IAAS,EACjC,gBAAkC,EAClC,YAAiC,EACjC,cAA8B;QAJ/B,cAAS,GAAT,SAAS,CAA6C;QAC7B,SAAI,GAAJ,IAAI,CAAK;QACjC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,iBAAY,GAAZ,YAAY,CAAqB;QACjC,mBAAc,GAAd,cAAc,CAAgB;QAChD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,gDAAQ,GAAR;QACE,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;IACH,CAAC;IAED,+CAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,+CAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,uDAAe,GAAf;QAAA,iBAUC;QATC,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;QACpF,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,aAAG;YACrF,KAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;YAClF,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,gCAAgC,CAAC,CAAC;QAC9D,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAtCU,6BAA6B;QALzC,+DAAS,CAAC;YACT,QAAQ,EAAE,6BAA6B;YACvC,kOAAuD;;SAExD,CAAC;QAOa,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY,UAEJ,uFAAgB;YACpB,4FAAmB;YACjB,kFAAc;OATvC,6BAA6B,CAwCzC;IAAD,oCAAC;CAAA;AAxCyC;;;;;;;;;;;;ACb1C,+DAA+D,mP;;;;;;;;;;;ACA/D,szBAAszB,mBAAmB,8SAA8S,uBAAuB,qRAAqR,cAAc,uRAAuR,oBAAoB,wDAAwD,kBAAkB,+pCAA+pC,2BAA2B,6FAA6F,mGAAmG,8FAA8F,+CAA+C,oGAAoG,sGAAsG,qK;;;;;;;;;;;;;;;;;;;;;;;ACA17G;AACQ;AACK;AAC+B;AACb;AAEgB;AACvC;AAOrE;IAQE,mCAAmB,gBAAkC,EACjC,MAAiB,EACjB,cAA8B;QAF/B,qBAAgB,GAAhB,gBAAgB,CAAkB;QACjC,WAAM,GAAN,MAAM,CAAW;QACjB,mBAAc,GAAd,cAAc,CAAgB;QAChD,IAAI,CAAC,gBAAgB,GAAG,CAAC,WAAW,EAAE,eAAe,EAAE,MAAM,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC;IAC1F,CAAC;IAED,4CAAQ,GAAR;QACE,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAC/G,CAAC;IAED,kDAAc,GAAd;QACE,OAAO,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,CAAC;IAChD,CAAC;IAED,sDAAkB,GAAlB;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qHAA4B,EAAE;YAC7C,UAAU,EAAE,mBAAmB;SAChC,CAAC,CAAC;IACL,CAAC;IAED,yDAAqB,GAArB,UAAsB,EAAU,EAAE,GAAW;QAC3C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yGAAsB,EAAE;YACvC,IAAI,EAAE,EAAE,EAAE,MAAE,GAAG,OAAE;SAClB,CAAC,CAAC;IACL,CAAC;IAED,yDAAqB,GAArB,UAAsB,SAAoB;QACxC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wHAA6B,EAAE;YAC9C,UAAU,EAAE,mBAAmB;YAC/B,IAAI,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE;SAClD,CAAC,CAAC;IACL,CAAC;IAED,0CAAM,GAAN;QACE,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IACnF,CAAC;IAED,+CAAW,GAAX;QACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IA3CmB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;2DAAC;IACT;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;gEAAC;IANtC,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;YAClC,gMAAkD;;SAEnD,CAAC;+EASqC,uFAAgB;YACzB,2DAAS;YACD,kFAAc;OAVvC,yBAAyB,CAkDrC;IAAD,gCAAC;CAAA;AAlDqC;;;;;;;;;;;;ACdtC,+DAA+D,mR;;;;;;;;;;;ACA/D,4zBAA4zB,YAAY,8eAA8e,OAAO,ohC;;;;;;;;;;;;;;;;;;;;;;;;ACA7vC;AACJ;AACX;AACuB;AACS;AACC;AACH;AAEV;AAOrE;IAQE,qCAAoB,SAAoD,EACpD,eAAgC,EACjC,mBAAwC,EACxC,oBAA0C,EACzC,YAAiC,EACjC,cAA8B;QAL9B,cAAS,GAAT,SAAS,CAA2C;QACpD,oBAAe,GAAf,eAAe,CAAiB;QACjC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,yBAAoB,GAApB,oBAAoB,CAAsB;QACzC,iBAAY,GAAZ,YAAY,CAAqB;QACjC,mBAAc,GAAd,cAAc,CAAgB;QAChD,IAAI,CAAC,QAAQ,GAAG,IAAI,yEAAQ,EAAE,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACnB,CAAC;IAGD,mDAAa,GAAb,UAAc,KAAM;QAClB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;QACrC,IAAI,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YAC1B,IAAI,CAAC,KAAK,GAAI,CAAC,CAAC;SACjB;aAAM;YACL,IAAI,CAAC,KAAK,GAAI,CAAC,CAAC;SACjB;IACH,CAAC;IAED,8CAAQ,GAAR;QACE,IAAM,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;QAC5B,IAAM,IAAI,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACjD,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,CAAC;QAC5C,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,EAAE,CAAC;QAC7C,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,wDAAkB,GAAlB,UAAmB,QAAgB;QACjC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAM,cAAc,GAAG,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,KAAK,QAAQ,EAAvB,CAAuB,CAAC,CAAC;QAC/F,IAAM,SAAS,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC;QAClD,IAAM,QAAQ,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC;QAClD,IAAM,eAAe,GAAG,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,SAAS,KAAK,SAAS,EAAzB,CAAyB,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACpH,IAAI,KAAa,CAAC;QAClB,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;YAC7B,IAAI;gBACF,KAAK,GAAG,UAAU,CAAC,CAAC,QAAQ,GAAG,eAAe,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aACtE;YAAC,OAAO,GAAG,EAAE;gBACZ,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,4CAA4C,CAAC,CAAC;gBACrE,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,SAAS,CAAC;gBACnC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;aACrC;YACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACzB;IACH,CAAC;IAED,6CAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,6CAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,iDAAW,GAAX;QAAA,iBAYC;QAXC,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QAC9D,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,UAAU,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1G,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,aAAG;YAC3D,KAAI,CAAC,eAAe,CAAC,oBAAoB,CAAC,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;YAChF,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,+BAA+B,CAAC,CAAC;QAC7D,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IA1DD;QADC,kEAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;oEASzC;IA3BU,2BAA2B;QALvC,+DAAS,CAAC;YACT,QAAQ,EAAE,2BAA2B;YACrC,2NAAqD;;SAEtD,CAAC;+EAS+B,8DAAY;YACN,qFAAe;YACZ,8FAAmB;YAClB,+FAAoB;YAC3B,4FAAmB;YACjB,kFAAc;OAbvC,2BAA2B,CA+EvC;IAAD,kCAAC;CAAA;AA/EuC;;;;;;;;;;;;ACfxC,+DAA+D,uR;;;;;;;;;;;ACA/D,wvBAAwvB,YAAY,k7C;;;;;;;;;;;;;;;;;;;;;;ACA1sB;AACQ;AAEM;AACS;AACF;AAEV;AAOrE;IAKE,sCAAmB,SAAqD,EAC5B,IAAS,EACjC,eAAgC,EACjC,mBAAwC,EACvC,YAAiC,EACjC,cAA8B;QAL/B,cAAS,GAAT,SAAS,CAA4C;QAC5B,SAAI,GAAJ,IAAI,CAAK;QACjC,oBAAe,GAAf,eAAe,CAAiB;QACjC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACvC,iBAAY,GAAZ,YAAY,CAAqB;QACjC,mBAAc,GAAd,cAAc,CAAgB;QAChD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,+CAAQ,GAAR;QACE,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;QACD,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,CAAC;IAC9C,CAAC;IAED,8CAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,8CAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,qDAAc,GAAd;QAAA,iBAUC;QATC,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,UAAU,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1G,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,aAAG;YACjF,KAAI,CAAC,eAAe,CAAC,oBAAoB,CAAC,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;YAChF,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,+BAA+B,CAAC,CAAC;QAC7D,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAxCU,4BAA4B;QALxC,+DAAS,CAAC;YACT,QAAQ,EAAE,4BAA4B;YACtC,8NAAsD;;SAEvD,CAAC;QAOa,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY,UAEL,qFAAe;YACZ,8FAAmB;YACzB,4FAAmB;YACjB,kFAAc;OAVvC,4BAA4B,CA0CxC;IAAD,mCAAC;CAAA;AA1CwC;;;;;;;;;;;;ACdzC,+DAA+D,2S;;;;;;;;;;;ACA/D,0HAA0H,QAAQ,mBAAmB,kHAAkH,QAAQ,oBAAoB,mHAAmH,QAAQ,wBAAwB,kHAAkH,QAAQ,qBAAqB,sHAAsH,QAAQ,eAAe,4S;;;;;;;;;;;;;;;;;;ACAxpB;AAEQ;AAOlE;IAIE,6CAAmB,SAA4D,EACnC,IAAS;QADlC,cAAS,GAAT,SAAS,CAAmD;QACnC,SAAI,GAAJ,IAAI,CAAK;QACjD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC/B,CAAC;IAEJ,sDAAQ,GAAR;IACA,CAAC;IAED,uDAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAdU,mCAAmC;QAL/C,+DAAS,CAAC;YACT,QAAQ,EAAE,oCAAoC;YAC9C,sPAA8D;;SAE/D,CAAC;QAMa,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY;OAJ/B,mCAAmC,CAgB/C;IAAD,0CAAC;CAAA;AAhB+C;;;;;;;;;;;;ACThD,+DAA+D,mP;;;;;;;;;;;ACA/D,2zBAA2zB,kBAAkB,0SAA0S,mBAAmB,8RAA8R,uBAAuB,0RAA0R,oBAAoB,wDAAwD,kBAAkB,4zCAA4zC,2BAA2B,6FAA6F,+FAA+F,8FAA8F,6CAA6C,oGAAoG,kGAAkG,yK;;;;;;;;;;;;;;;;;;;;;;;;ACA9lH;AAC+B;AAEU;AACG;AAEuB;AAC3D;AACG;AACH;AAOrE;IAQE,kCAAmB,eAAgC,EAC/B,MAAiB,EACjB,cAA8B;QAF/B,oBAAe,GAAf,eAAe,CAAiB;QAC/B,WAAM,GAAN,MAAM,CAAW;QACjB,mBAAc,GAAd,cAAc,CAAgB;QAChD,IAAI,CAAC,gBAAgB,GAAG,CAAC,UAAU,EAAE,WAAW,EAAE,eAAe,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC;IAC9F,CAAC;IAED,2CAAQ,GAAR;QACE,IAAI,CAAC,eAAe,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAC7G,CAAC;IAED,iDAAc,GAAd;QACE,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC;IAC/C,CAAC;IAED,gDAAa,GAAb,UAAc,QAAQ;QACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4IAAmC,EAAE;YACpD,UAAU,EAAE,mBAAmB;YAC/B,MAAM,EAAE,OAAO;YACf,IAAI,EAAE,EAAE,QAAQ,YAAE;SACnB,CAAC,CAAC;IAEL,CAAC;IAED,oDAAiB,GAAjB;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kHAA2B,EAAE;YAC5C,UAAU,EAAE,mBAAmB;SAChC,CAAC,CAAC;IACL,CAAC;IAED,uDAAoB,GAApB,UAAqB,EAAU,EAAE,GAAW;QAC1C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yGAAsB,EAAE;YACvC,IAAI,EAAE,EAAE,EAAE,MAAE,GAAG,OAAE;SAClB,CAAC,CAAC;IACL,CAAC;IAED,uDAAoB,GAApB,UAAqB,QAAkB;QACrC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qHAA4B,EAAE;YAC7C,UAAU,EAAE,mBAAmB;YAC/B,IAAI,EAAE,EAAE,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE;SAChD,CAAC,CAAC;IACL,CAAC;IAED,yCAAM,GAAN;QACE,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IACjF,CAAC;IAED,8CAAW,GAAX;QACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IApDmB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;0DAAC;IACT;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;+DAAC;IANtC,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,6LAAiD;;SAElD,CAAC;+EASoC,qFAAe;YACvB,2DAAS;YACD,kFAAc;OAVvC,wBAAwB,CA0DpC;IAAD,+BAAC;CAAA;AA1DoC;;;;;;;;;;;;AChBrC,+DAA+D,uQ;;;;;;;;;;;ACA/D,+5F;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACM;AACP;AACkB;AACY;AAEV;AACN;AAO/D;IAKE,mCAAoB,SAAkD,EAClD,aAA4B,EAC5B,cAA8B,EAC9B,YAAiC,EACjC,WAAwB;QAJxB,cAAS,GAAT,SAAS,CAAyC;QAClD,kBAAa,GAAb,aAAa,CAAe;QAC5B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAqB;QACjC,gBAAW,GAAX,WAAW,CAAa;QAC1C,IAAI,CAAC,MAAM,GAAG,IAAI,qEAAM,EAAE,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,iDAAa,GAAb,UAAc,GAAW;QACvB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAM,QAAQ,GAAG,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC7C,IAAM,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC/C,IAAM,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,KAAK,QAAQ,EAAvB,CAAuB,CAAC,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,UAAU,KAAK,UAAU,EAA3B,CAA2B,CAAC,CAAC;QACjH,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;YAClB,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YACvC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;SACxC;IACH,CAAC;IAED,4CAAQ,GAAR;QACE,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;QACD,IAAM,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;QAC5B,IAAM,IAAI,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACjD,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;IAClC,CAAC;IAED,2CAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,2CAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,6CAAS,GAAT;QAAA,iBAWC;QAVC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QAC5D,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;YACrD,KAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;YAC5E,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC;QAC1D,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAtDU,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;YAClC,+MAAkD;;SAEnD,CAAC;+EAM+B,8DAAY;YACR,gFAAa;YACZ,kFAAc;YAChB,4FAAmB;YACpB,4EAAW;OATjC,yBAAyB,CAwDrC;IAAD,gCAAC;CAAA;AAxDqC;;;;;;;;;;;;ACdtC,+DAA+D,2Q;;;;;;;;;;;ACA/D,qiG;;;;;;;;;;;;;;;;;;;;;;ACA0D;AAEQ;AACC;AACY;AAEV;AACN;AAO/D;IAKE,oCAAmB,SAAmD,EAC1B,IAAS,EACjC,aAA4B,EAC5B,YAAiC,EACjC,cAA8B,EAC9B,WAAwB;QALzB,cAAS,GAAT,SAAS,CAA0C;QAC1B,SAAI,GAAJ,IAAI,CAAK;QACjC,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAqB;QACjC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QAC1C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,kDAAa,GAAb,UAAc,GAAW;QACvB,IAAM,QAAQ,GAAG,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC7C,IAAM,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC/C,IAAM,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,KAAK,QAAQ,EAAvB,CAAuB,CAAC,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,UAAU,KAAK,UAAU,EAA3B,CAA2B,CAAC,CAAC;QACjH,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;QACvC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;IACzC,CAAC;IAED,6CAAQ,GAAR;QACE,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;QACD,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;IAClC,CAAC;IAED,4CAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,4CAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,iDAAY,GAAZ;QAAA,iBASC;QARC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;YACzE,KAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;YAC5E,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC;QAC1D,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IA/CU,0BAA0B;QALtC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;YACnC,kNAAmD;;SAEpD,CAAC;QAOa,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY,UAEP,gFAAa;YACd,4FAAmB;YACjB,kFAAc;YACjB,4EAAW;OAVjC,0BAA0B,CAgDtC;IAAD,iCAAC;CAAA;AAhDsC;;;;;;;;;;;;ACdvC,+DAA+D,+R;;;;;;;;;;;ACA/D,+HAA+H,QAAQ,kBAAkB,6HAA6H,QAAQ,qBAAqB,wHAAwH,QAAQ,iBAAiB,gHAAgH,QAAQ,YAAY,4HAA4H,QAAQ,eAAe,8HAA8H,QAAQ,oBAAoB,gIAAgI,QAAQ,aAAa,oHAAoH,QAAQ,cAAc,4T;;;;;;;;;;;;;;;;;;ACA1lC;AAEQ;AAOlE;IAIE,2CAAmB,SAA0D,EACjC,IAAS;QADlC,cAAS,GAAT,SAAS,CAAiD;QACjC,SAAI,GAAJ,IAAI,CAAK;QACjD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IAC3B,CAAC;IAEJ,oDAAQ,GAAR;IACA,CAAC;IAED,qDAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAdU,iCAAiC;QAL7C,+DAAS,CAAC;YACT,QAAQ,EAAE,iCAAiC;YAC3C,0OAA2D;;SAE5D,CAAC;QAMa,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY;OAJ/B,iCAAiC,CAgB7C;IAAD,wCAAC;CAAA;AAhB6C;;;;;;;;;;;;ACT9C,+DAA+D,2O;;;;;;;;;;;ACA/D,mzBAAmzB,mBAAmB,kSAAkS,kBAAkB,uRAAuR,cAAc,4RAA4R,qBAAqB,wDAAwD,kBAAkB,0zCAA0zC,2BAA2B,6FAA6F,uFAAuF,8FAA8F,yCAAyC,oGAAoG,0FAA0F,qK;;;;;;;;;;;;;;;;;;;;;;;;ACA7hH;AACN;AACF;AAC2B;AACF;AACK;AAE5B;AACmD;AAOxH;IAUE,gCAAmB,aAA4B,EAC3B,MAAiB,EACjB,cAA8B;QAF/B,kBAAa,GAAb,aAAa,CAAe;QAC3B,WAAM,GAAN,MAAM,CAAW;QACjB,mBAAc,GAAd,cAAc,CAAgB;QAChD,IAAI,CAAC,gBAAgB,GAAG,CAAC,WAAW,EAAE,UAAU,EAAE,MAAM,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC;IACtF,CAAC;IAGD,8CAAa,GAAb,UAAc,KAAM;QAClB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;QACrC,IAAI,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YAC1B,IAAI,CAAC,gBAAgB,GAAG,CAAC,WAAW,EAAE,UAAU,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC;SAC7E;aAAM;YACL,IAAI,CAAC,gBAAgB,GAAG,CAAC,WAAW,EAAE,UAAU,EAAE,MAAM,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC;SACrF;IACH,CAAC;IAED,+CAAc,GAAd;QACE,OAAO,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;IAC7C,CAAC;IAED,yCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACzG,CAAC;IAED,gDAAe,GAAf;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0GAAyB,EAAE;YAC1C,UAAU,EAAE,mBAAmB;SAChC,CAAC,CAAC;IACL,CAAC;IAED,8CAAa,GAAb,UAAc,MAAM;QAClB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oIAAiC,EAAE;YAClD,UAAU,EAAE,mBAAmB;YAC/B,MAAM,EAAE,OAAO;YACf,IAAI,EAAE,EAAE,MAAM,UAAE;SACjB,CAAC,CAAC;IAEL,CAAC;IAED,mDAAkB,GAAlB,UAAmB,EAAU,EAAE,GAAW;QACxC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yGAAsB,EAAE;YACvC,IAAI,EAAE,EAAE,EAAE,MAAE,GAAG,OAAE;SAClB,CAAC,CAAC;IACL,CAAC;IAED,mDAAkB,GAAlB,UAAmB,MAAc;QAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6GAA0B,EAAE;YAC3C,UAAU,EAAE,mBAAmB;YAC/B,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE;SAC5C,CAAC,CAAC;IACL,CAAC;IAED,uCAAM,GAAN;QACE,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC7E,CAAC;IAED,4CAAW,GAAX;QACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IA/DmB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;wDAAC;IACT;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;6DAAC;IASjD;QADC,kEAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;+DASzC;IAzBU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,oLAA8C;;SAE/C,CAAC;+EAWkC,gFAAa;YACnB,2DAAS;YACD,kFAAc;OAZvC,sBAAsB,CAyElC;IAAD,6BAAC;CAAA;AAzEkC;;;;;;;;;;;;ACfnC,qEAAqE,2Q;;;;;;;;;;;ACArE,+9DAA+9D,cAAc,6Z;;;;;;;;;;;;;;;;;;;;;;;;ACA37D;AACsB;AACvB;AACkB;AACY;AACK;AAEf;AACF;AAOnE;IAOE,oCACU,SAAmD,EACnD,qBAA4C,EAC5C,aAA4B,EAC5B,YAAiC,EACjC,aAA4B,EAC5B,cAA8B;QAL9B,cAAS,GAAT,SAAS,CAA0C;QACnD,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAqB;QACjC,kBAAa,GAAb,aAAa,CAAe;QAC5B,mBAAc,GAAd,cAAc,CAAgB;QACtC,IAAI,CAAC,cAAc,GAAG,IAAI,qFAAc,EAAE,CAAC;QAC3C,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IACzB,CAAC;IAED,6CAAQ,GAAR;QACE,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;QACD,IAAM,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;QAC5B,IAAM,IAAI,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACjD,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;QACpC,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;IACtC,CAAC;IAED,4CAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,8CAAS,GAAT,UAAU,YAAoB;QAC5B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;YAC7B,IAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,KAAK,YAAY,EAAzB,CAAyB,CAAC,CAAC;YAC9E,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;gBACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,YAAY,GAAG,4DAA4D,CAAC;gBACjF,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,SAAS,CAAC;aAC5C;iBAAM;gBACL,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;aAC9C;SACF;aAAM;YACL,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,YAAY,GAAG,0CAA0C,CAAC;YAC/D,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,SAAS,CAAC;SAC5C;IAEH,CAAC;IAED,4CAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,sDAAiB,GAAjB;QAAA,iBA4BC;QA3BC,IAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,YAAY,KAAK,KAAI,CAAC,cAAc,CAAC,YAAY,EAAnD,CAAmD,CAAC,CAAC;QAC3G,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE;YACjE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,YAAY,GAAG,uDAAuD,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,GAAG,CAAC;YAC9G,IAAI,CAAC,cAAc,CAAC,aAAa,GAAG,SAAS,CAAC;SAC/C;aAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YAC5B,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC;YACrE,IAAM,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC;YACjF,MAAM,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,UAAU,CAAC;YACvC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,aAAG;gBACrE,KAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,qBAAW;oBACrF,KAAI,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;oBACxF,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;oBACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC;gBACnE,CAAC,EACC,aAAG;oBACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACnB,CAAC,CAAC,CAAC;YACP,CAAC,EACC,aAAG;gBACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC;SACN;aAAM;YACL,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,YAAY,GAAG,oCAAoC,CAAC;YACzD,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,SAAS,CAAC;SAC5C;IACH,CAAC;IAtFU,0BAA0B;QALtC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;YACnC,mNAAmD;;SAEpD,CAAC;+EASqB,8DAAY;YACA,iGAAqB;YAC7B,gFAAa;YACd,4FAAmB;YAClB,gFAAa;YACZ,kFAAc;OAb7B,0BAA0B,CAuFtC;IAAD,iCAAC;CAAA;AAvFsC;;;;;;;;;;;;ACfvC,+DAA+D,+Q;;;;;;;;;;;ACA/D,0iE;;;;;;;;;;;;;;;;;;;;;ACA0D;AACQ;AACkB;AACL;AAGV;AAOrE;IAKE,qCAAmB,SAAoD,EAC3B,IAAS,EACjC,qBAA4C,EAC5C,YAAiC,EACjC,cAA8B;QAJ/B,cAAS,GAAT,SAAS,CAA2C;QAC3B,SAAI,GAAJ,IAAI,CAAK;QACjC,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,iBAAY,GAAZ,YAAY,CAAqB;QACjC,mBAAc,GAAd,cAAc,CAAgB;QAChD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QAC1C,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,8CAAQ,GAAR;QACE,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;IACH,CAAC;IAED,6CAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,6CAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,0DAAoB,GAApB;QAAA,iBASC;QARC,IAAI,CAAC,qBAAqB,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,aAAG;YACzG,KAAI,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;YACxF,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC;QACnE,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IArCU,2BAA2B;QALvC,+DAAS,CAAC;YACT,QAAQ,EAAE,0BAA0B;YACpC,sNAAoD;;SAErD,CAAC;QAOa,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY,UAEC,iGAAqB;YAC9B,4FAAmB;YACjB,kFAAc;OATvC,2BAA2B,CAuCvC;IAAD,kCAAC;CAAA;AAvCuC;;;;;;;;;;;;ACbxC,+DAA+D,2O;;;;;;;;;;;ACA/D,20BAA20B,sBAAsB,sSAAsS,oBAAoB,+RAA+R,uBAAuB,wDAAwD,kBAAkB,8NAA8N,cAAc,ktCAAktC,2BAA2B,6FAA6F,uHAAuH,8FAA8F,yDAAyD,oGAAoG,0HAA0H,uK;;;;;;;;;;;;;;;;;;;;;;;ACAl/G;AACN;AACe;AACa;AACL;AACQ;AAE/B;AAOrE;IAUE,iCAAmB,qBAA4C,EAC3C,MAAiB,EACjB,cAA8B;QAF/B,0BAAqB,GAArB,qBAAqB,CAAuB;QAC3C,WAAM,GAAN,MAAM,CAAW;QACjB,mBAAc,GAAd,cAAc,CAAgB;QAChD,IAAI,CAAC,gBAAgB,GAAG,CAAC,cAAc,EAAE,YAAY,EAAE,eAAe,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;IAC7F,CAAC;IAED,gDAAc,GAAd;QACE,OAAO,IAAI,CAAC,qBAAqB,CAAC,cAAc,EAAE,CAAC;IACrD,CAAC;IAED,0CAAQ,GAAR;QACE,IAAI,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrH,CAAC;IAED,yDAAuB,GAAvB;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6GAA0B,EAAE;YAC3C,UAAU,EAAE,mBAAmB;SAChC,CAAC,CAAC;IACL,CAAC;IAED,4DAA0B,GAA1B,UAA2B,EAAU,EAAE,GAAW;QAChD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yGAAsB,EAAE;YACvC,IAAI,EAAE,EAAE,EAAE,MAAE,GAAG,OAAE;SAClB,CAAC,CAAC;IACL,CAAC;IAED,4DAA0B,GAA1B,UAA2B,cAA8B;QACvD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gHAA2B,EAAE;YAC5C,UAAU,EAAE,mBAAmB;YAC/B,IAAI,EAAE,EAAE,cAAc,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,cAAc,CAAC,EAAE;SAC5D,CAAC,CAAC;IACL,CAAC;IAED,wCAAM,GAAN;QACE,IAAI,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC7F,CAAC;IAED,6CAAW,GAAX;QACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IA3CmB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;yDAAC;IACT;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;8DAAC;IARtC,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,uLAA+C;;SAEhD,CAAC;+EAW0C,iGAAqB;YACnC,2DAAS;YACD,kFAAc;OAZvC,uBAAuB,CAoDnC;IAAD,8BAAC;CAAA;AApDmC;;;;;;;;;;;;ACdpC,+DAA+D,uQ;;;;;;;;;;;ACA/D,66D;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACA;AACD;AACkB;AACY;AACV;AAQrE;IAKE,mCAAoB,SAAkD,EAClD,aAA4B,EAC5B,YAAiC,EACjC,cAA8B;QAH9B,cAAS,GAAT,SAAS,CAAyC;QAClD,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAqB;QACjC,mBAAc,GAAd,cAAc,CAAgB;QAChD,IAAI,CAAC,MAAM,GAAG,IAAI,+DAAM,EAAE,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,4CAAQ,GAAR;QACE,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;IACH,CAAC;IAED,2CAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,2CAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,6CAAS,GAAT;QAAA,iBA0BC;QAzBC,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;QACjE,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QAC5D,IAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,IAAI,KAAK,KAAI,CAAC,MAAM,CAAC,IAAI,EAA3B,CAA2B,CAAC,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,SAAS,KAAK,KAAI,CAAC,MAAM,CAAC,SAAS,EAArC,CAAqC,CAAC,CAAC;QACtI,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YACrB,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;YAC3C,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YAC3D,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,aAAG;gBACrE,KAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;gBAC5E,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,oCAAoC,CAAC,CAAC;YAClE,CAAC,EACC,aAAG;gBACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC;SACN;aAAM;YACL,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;gBACrD,KAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;gBAC5E,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,oCAAoC,CAAC,CAAC;YAClE,CAAC,EACC,aAAG;gBACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IArDU,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;YAClC,+MAAkD;;SAEnD,CAAC;+EAM+B,8DAAY;YACR,gFAAa;YACd,4FAAmB;YACjB,kFAAc;OARvC,yBAAyB,CAuDrC;IAAD,gCAAC;CAAA;AAvDqC;;;;;;;;;;;;ACbtC,+DAA+D,2Q;;;;;;;;;;;ACA/D,k7D;;;;;;;;;;;;;;;;;;;;;ACA0D;AAEQ;AACC;AACY;AACV;AAQrE;IAKE,oCAAmB,SAAmD,EAC1B,IAAS,EACjC,aAA4B,EAC5B,YAAiC,EACjC,cAA8B;QAJ/B,cAAS,GAAT,SAAS,CAA0C;QAC1B,SAAI,GAAJ,IAAI,CAAK;QACjC,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAqB;QACjC,mBAAc,GAAd,cAAc,CAAgB;QAChD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,6CAAQ,GAAR;QACE,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;IACH,CAAC;IAED,4CAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,4CAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,iDAAY,GAAZ;QAAA,iBAUC;QATC,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;QACjE,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;YACzE,KAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;YAC5E,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,oCAAoC,CAAC,CAAC;QAClE,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAtCU,0BAA0B;QALtC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;YACnC,kNAAmD;;SAEpD,CAAC;QAOa,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY,UAEP,gFAAa;YACd,4FAAmB;YACjB,kFAAc;OATvC,0BAA0B,CAwCtC;IAAD,iCAAC;CAAA;AAxCsC;;;;;;;;;;;;ACbvC,+DAA+D,2O;;;;;;;;;;;ACA/D,wyBAAwyB,cAAc,6RAA6R,kBAAkB,sRAAsR,oBAAoB,wDAAwD,kBAAkB,spCAAspC,2BAA2B,6FAA6F,uFAAuF,8FAA8F,yCAAyC,oGAAoG,0FAA0F,qK;;;;;;;;;;;;;;;;;;;;;;;ACAtkG;AACQ;AACF;AACE;AACyB;AACF;AACK;AAQjG;IAQE,gCAAmB,aAA4B,EAC3B,MAAiB,EACjB,cAA8B;QAF/B,kBAAa,GAAb,aAAa,CAAe;QAC3B,WAAM,GAAN,MAAM,CAAW;QACjB,mBAAc,GAAd,cAAc,CAAgB;QAChD,IAAI,CAAC,gBAAgB,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC;IACxE,CAAC;IAED,yCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACzG,CAAC;IAED,+CAAc,GAAd;QACE,OAAO,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;IAC7C,CAAC;IAED,gDAAe,GAAf;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0GAAyB,EAAE;YAC1C,UAAU,EAAE,mBAAmB;SAChC,CAAC,CAAC;IACL,CAAC;IAED,mDAAkB,GAAlB,UAAmB,EAAU,EAAE,GAAW;QACxC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yGAAsB,EAAE;YACvC,IAAI,EAAE,EAAE,EAAE,MAAE,GAAG,OAAE;SAClB,CAAC,CAAC;IACL,CAAC;IAED,mDAAkB,GAAlB,UAAmB,MAAc;QAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6GAA0B,EAAE;YAC3C,UAAU,EAAE,mBAAmB;YAC/B,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE;SAC5C,CAAC,CAAC;IACL,CAAC;IAED,uCAAM,GAAN;QACE,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC7E,CAAC;IAED,4CAAW,GAAX;QACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IA3CmB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;wDAAC;IACT;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;6DAAC;IANtC,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,oLAA8C;;SAE/C,CAAC;+EASkC,gFAAa;YACnB,2DAAS;YACD,kFAAc;OAVvC,sBAAsB,CAkDlC;IAAD,6BAAC;CAAA;AAlDkC;;;;;;;;;;;;ACdnC,+DAA+D,uS;;;;;;;;;;;ACA/D,umEAAumE,OAAO,8wBAA8wB,GAAG,q4BAAq4B,cAAc,sV;;;;;;;;;;;;;;;;;;;;;;;;;ACAhuH;AACgB;AACjB;AACgC;AACZ;AACU;AAEN;AACN;AACe;AAOlF;IASE,yCAAoB,SAAwD,EACxD,kBAAuC,EACvC,cAA8B,EAC9B,aAA4B,EAC5B,YAAiC,EAClC,gBAAkC,EACjC,oBAA0C;QAN1C,cAAS,GAAT,SAAS,CAA+C;QACxD,uBAAkB,GAAlB,kBAAkB,CAAqB;QACvC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAqB;QAClC,qBAAgB,GAAhB,gBAAgB,CAAkB;QACjC,yBAAoB,GAApB,oBAAoB,CAAsB;QAC5D,IAAI,CAAC,WAAW,GAAG,IAAI,+EAAW,EAAE,CAAC;QACrC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACnB,CAAC;IAED,mDAAS,GAAT,UAAU,YAAoB;QAC5B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;YAC7B,IAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,KAAK,YAAY,EAAzB,CAAyB,CAAC,CAAC;YAC9E,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;gBACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,YAAY,GAAG,4DAA4D,CAAC;gBACjF,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,SAAS,CAAC;aACzC;iBAAM;gBACL,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;aAC3C;SACF;aAAM;YACL,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,YAAY,GAAG,0CAA0C,CAAC;YAC/D,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,SAAS,CAAC;SACzC;IAEH,CAAC;IAED,4DAAkB,GAAlB,UAAmB,SAAiB;QAClC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAM,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,GAAG,KAAK,SAAS,EAAnB,CAAmB,CAAC,CAAC;QAC1F,IAAM,WAAW,GAAG,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,SAAS,KAAK,eAAe,CAAC,CAAC,CAAC,CAAC,GAAG,EAAtC,CAAsC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7H,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzB,IAAI,KAAa,CAAC;QAClB,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;YAC7B,IAAI;gBACF,KAAK,GAAG,UAAU,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aACrD;YAAC,OAAO,GAAG,EAAE;gBACZ,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,4CAA4C,CAAC,CAAC;gBACrE,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,SAAS,CAAC;gBACvC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;aAClB;YACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACzB;IACH,CAAC;IAED,kDAAQ,GAAR;QACE,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;QACD,IAAM,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;QAC5B,IAAM,IAAI,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACjD,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC;QAC1C,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,EAAE,CAAC;QAC7C,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;IACtC,CAAC;IAED,iDAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,iDAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,wDAAc,GAAd;QAAA,iBAYC;QAXC,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC;QAClE,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,UAAU,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QACpH,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,UAAU,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QACnH,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,aAAG;YACpE,KAAI,CAAC,kBAAkB,CAAC,uBAAuB,CAAC,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;YACtF,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;QACvD,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IA1FU,+BAA+B;QAL3C,+DAAS,CAAC;YACT,QAAQ,EAAE,gCAAgC;YAC1C,+OAA0D;;SAE3D,CAAC;+EAU+B,8DAAY;YACH,8FAAmB;YACvB,kFAAc;YACf,gFAAa;YACd,4FAAmB;YAChB,sFAAgB;YACX,+FAAoB;OAfnD,+BAA+B,CA2F3C;IAAD,sCAAC;CAAA;AA3F2C;;;;;;;;;;;;AChB5C,+DAA+D,2S;;;;;;;;;;;ACA/D,o4H;;;;;;;;;;;;;;;;;;;;;ACA0D;AAEQ;AACe;AACF;AAEV;AAOrE;IAKE,0CAAmB,SAAyD,EAChC,IAAS,EACjC,kBAAuC,EACvC,cAA8B,EAC9B,YAAiC;QAJlC,cAAS,GAAT,SAAS,CAAgD;QAChC,SAAI,GAAJ,IAAI,CAAK;QACjC,uBAAkB,GAAlB,kBAAkB,CAAqB;QACvC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAqB;QACnD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACpC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,mDAAQ,GAAR;QACE,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;IACH,CAAC;IAED,kDAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,kDAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,4DAAiB,GAAjB;QAAA,iBASC;QARC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,aAAG;YAC7F,KAAI,CAAC,kBAAkB,CAAC,uBAAuB,CAAC,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;YACtF,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;QACvD,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IArCU,gCAAgC;QAL5C,+DAAS,CAAC;YACT,QAAQ,EAAE,iCAAiC;YAC3C,kPAA2D;;SAE5D,CAAC;QAOa,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY,UAEF,8FAAmB;YACvB,kFAAc;YAChB,4FAAmB;OAT1C,gCAAgC,CAuC5C;IAAD,uCAAC;CAAA;AAvC4C;;;;;;;;;;;;ACb7C,+DAA+D,+T;;;;;;;;;;;ACA/D,gHAAgH,QAAQ,wBAAwB,gHAAgH,QAAQ,0BAA0B,+GAA+G,QAAQ,wBAAwB,8GAA8G,QAAQ,uBAAuB,8GAA8G,QAAQ,uBAAuB,qHAAqH,QAAQ,4BAA4B,mHAAmH,QAAQ,wBAAwB,qHAAqH,QAAQ,2BAA2B,oHAAoH,QAAQ,uBAAuB,iHAAiH,QAAQ,wBAAwB,sHAAsH,QAAQ,kBAAkB,0S;;;;;;;;;;;;;;;;;;ACAzgD;AAEQ;AAOlE;IAIE,iDAAmB,SAAgE,EACvC,IAAS;QADlC,cAAS,GAAT,SAAS,CAAuD;QACvC,SAAI,GAAJ,IAAI,CAAK;QACjD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;IACrC,CAAC;IAEJ,0DAAQ,GAAR;IACA,CAAC;IAED,2DAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAdU,uCAAuC;QALnD,+DAAS,CAAC;YACT,QAAQ,EAAE,yCAAyC;YACnD,0QAAmE;;SAEpE,CAAC;QAMa,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY;OAJ/B,uCAAuC,CAgBnD;IAAD,8CAAC;CAAA;AAhBmD;;;;;;;;;;;;ACTpD,qEAAqE,+P;;;;;;;;;;;ACArE,6zBAA6zB,oBAAoB,6SAA6S,mBAAmB,4RAA4R,uBAAuB,oRAAoR,oBAAoB,wDAAwD,kBAAkB,o1CAAo1C,2BAA2B,6FAA6F,2GAA2G,8FAA8F,mDAAmD,oGAAoG,8GAA8G,qK;;;;;;;;;;;;;;;;;;;;;;;;ACAroH;AACyC;AACxB;AAE2B;AACtC;AACZ;AACD;AACC;AAOrE;IAUE,sCAAmB,kBAAuC,EACtC,MAAiB,EACjB,cAA8B;QAF/B,uBAAkB,GAAlB,kBAAkB,CAAqB;QACtC,WAAM,GAAN,MAAM,CAAW;QACjB,mBAAc,GAAd,cAAc,CAAgB;QAChD,IAAI,CAAC,gBAAgB,GAAG,CAAC,YAAY,EAAE,WAAW,EAAE,eAAe,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC;IAChG,CAAC;IAGD,oDAAa,GAAb,UAAc,KAAM;QAClB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;QACrC,IAAI,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YAC1B,IAAI,CAAC,gBAAgB,GAAG,CAAC,YAAY,EAAE,WAAW,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC;SAC9E;aAAM;YACL,IAAI,CAAC,gBAAgB,GAAG,CAAC,YAAY,EAAE,WAAW,EAAE,eAAe,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC;SAC/F;IACH,CAAC;IAED,qDAAc,GAAd;QACE,OAAO,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,CAAC;IAClD,CAAC;IAED,+CAAQ,GAAR;QACE,IAAI,CAAC,kBAAkB,CAAC,uBAAuB,CAAC,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACnH,CAAC;IAED,2DAAoB,GAApB;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gIAA+B,EAAE;YAChD,UAAU,EAAE,mBAAmB;SAChC,CAAC,CAAC;IACL,CAAC;IAED,8DAAuB,GAAvB,UAAwB,EAAU,EAAE,GAAW;QAC7C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yGAAsB,EAAE;YACvC,IAAI,EAAE,EAAE,EAAE,MAAE,GAAG,OAAE;SAClB,CAAC,CAAC;IACL,CAAC;IAED,oDAAa,GAAb,UAAc,WAAW;QACvB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iFAAuC,EAAE;YACxD,UAAU,EAAE,mBAAmB;YAC/B,IAAI,EAAE,EAAE,WAAW,eAAE;SACtB,CAAC,CAAC;IAEL,CAAC;IAED,8DAAuB,GAAvB,UAAwB,WAAwB;QAC9C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mIAAgC,EAAE;YACjD,UAAU,EAAE,mBAAmB;YAC/B,IAAI,EAAE,EAAE,WAAW,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,WAAW,CAAC,EAAE;SACtD,CAAC,CAAC;IACL,CAAC;IAED,6CAAM,GAAN;QACE,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IACvF,CAAC;IAED,kDAAW,GAAX;QACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IA9DmB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;8DAAC;IACT;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;mEAAC;IASjD;QADC,kEAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;qEASzC;IAzBU,4BAA4B;QALxC,+DAAS,CAAC;YACT,QAAQ,EAAE,4BAA4B;YACtC,4MAAsD;;SAEvD,CAAC;+EAWuC,8FAAmB;YAC9B,2DAAS;YACD,kFAAc;OAZvC,4BAA4B,CAuExC;IAAD,mCAAC;CAAA;AAvEwC;;;;;;;;;;;;ACfzC,+DAA+D,+S;;;;;;;;;;;ACA/D,qyG;;;;;;;;;;;;;;;;;;;;;;ACAgE;AAEK;AACU;AACX;AACkB;AACrC;AAOjD;IAOE,4CAAoB,SAA2D,EAC3D,sBAA8C,EAC9C,YAAiC,EACjC,cAA8B;QAH9B,cAAS,GAAT,SAAS,CAAkD;QAC3D,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,iBAAY,GAAZ,YAAY,CAAqB;QACjC,mBAAc,GAAd,cAAc,CAAgB;QAChD,IAAI,CAAC,eAAe,GAAG,IAAI,iFAAe,EAAE,CAAC;QAC7C,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAGD,0DAAa,GAAb,UAAc,KAAM;QAClB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;QACrC,IAAI,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YAC1B,IAAI,CAAC,KAAK,GAAI,CAAC,CAAC;SACjB;aAAM;YACL,IAAI,CAAC,KAAK,GAAI,CAAC,CAAC;SACjB;IACH,CAAC;IAED,qDAAQ,GAAR;QACE,IAAM,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;QAC5B,IAAM,IAAI,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACjD,IAAI,CAAC,eAAe,CAAC,IAAI,GAAG,IAAI,CAAC;IACnC,CAAC;IAED,oDAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,oDAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,+DAAkB,GAAlB;QAAA,iBAWC;QAVC,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,KAAK,CAAC;QACnC,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QACrE,IAAI,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,aAAG;YAChF,KAAI,CAAC,sBAAsB,CAAC,2BAA2B,CAAC,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;YAC9F,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,0CAA0C,CAAC,CAAC;QACxE,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAnCD;QADC,kEAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;2EASzC;IAxBU,kCAAkC;QAL9C,+DAAS,CAAC;YACT,QAAQ,EAAE,kCAAkC;YAC5C,uPAA4D;;SAE7D,CAAC;+EAQ+B,8DAAY;YACC,mGAAsB;YAChC,4FAAmB;YACjB,kFAAc;OAVvC,kCAAkC,CAqD9C;IAAD,yCAAC;CAAA;AArD8C;;;;;;;;;;;;ACb/C,+DAA+D,mT;;;;;;;;;;;ACA/D,syG;;;;;;;;;;;;;;;;;;;;;ACA0D;AAEQ;AACoB;AACP;AACV;AAQrE;IAKE,6CAAmB,SAA4D,EACnC,IAAS,EACjC,sBAA8C,EAC9C,YAAiC,EACjC,cAA8B;QAJ/B,cAAS,GAAT,SAAS,CAAmD;QACnC,SAAI,GAAJ,IAAI,CAAK;QACjC,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,iBAAY,GAAZ,YAAY,CAAqB;QACjC,mBAAc,GAAd,cAAc,CAAgB;QAChD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QAC5C,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,sDAAQ,GAAR;QACE,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;IACH,CAAC;IAED,qDAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,qDAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,mEAAqB,GAArB;QAAA,iBASC;QARC,IAAI,CAAC,sBAAsB,CAAC,qBAAqB,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,aAAG;YAC7G,KAAI,CAAC,sBAAsB,CAAC,2BAA2B,CAAC,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;YAC9F,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,0CAA0C,CAAC,CAAC;QACxE,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IArCU,mCAAmC;QAL/C,+DAAS,CAAC;YACT,QAAQ,EAAE,mCAAmC;YAC7C,0PAA6D;;SAE9D,CAAC;QAOa,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY,UAEE,mGAAsB;YAChC,4FAAmB;YACjB,kFAAc;OATvC,mCAAmC,CAsC/C;IAAD,0CAAC;CAAA;AAtC+C;;;;;;;;;;;;ACbhD,+DAA+D,uU;;;;;;;;;;;ACA/D,mHAAmH,QAAQ,4BAA4B,wHAAwH,QAAQ,2BAA2B,wHAAwH,QAAQ,4BAA4B,kHAAkH,QAAQ,0BAA0B,qHAAqH,QAAQ,gCAAgC,4GAA4G,QAAQ,uBAAuB,kHAAkH,QAAQ,2BAA2B,6GAA6G,QAAQ,4BAA4B,sHAAsH,QAAQ,sBAAsB,8S;;;;;;;;;;;;;;;;;;ACA1wC;AAEQ;AAOlE;IAIE,oDAAmB,SAAmE,EAC1C,IAAS;QADlC,cAAS,GAAT,SAAS,CAA0D;QAC1C,SAAI,GAAJ,IAAI,CAAK;QACjD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;IAC7C,CAAC;IAEJ,6DAAQ,GAAR;IACA,CAAC;IAED,8DAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAdU,0CAA0C;QALtD,+DAAS,CAAC;YACT,QAAQ,EAAE,2CAA2C;YACrD,kRAAqE;;SAEtE,CAAC;QAMa,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY;OAJ/B,0CAA0C,CAgBtD;IAAD,iDAAC;CAAA;AAhBsD;;;;;;;;;;;;ACTvD,+DAA+D,mQ;;;;;;;;;;;ACA/D,20BAA20B,oBAAoB,sTAAsT,mBAAmB,wRAAwR,mBAAmB,wDAAwD,kBAAkB,iOAAiO,cAAc,u4CAAu4C,2BAA2B,6FAA6F,2HAA2H,8FAA8F,2DAA2D,oGAAoG,8HAA8H,yK;;;;;;;;;;;;;;;;;;;;;;;;ACApsH;AACQ;AACiB;AACjB;AAC0D;AACJ;AAC/B;AACkC;AAQ9H;IAQE,yCAAmB,sBAA8C,EAC7C,MAAiB,EACjB,cAA8B;QAF/B,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC7C,WAAM,GAAN,MAAM,CAAW;QACjB,mBAAc,GAAd,cAAc,CAAgB;QAChD,IAAI,CAAC,gBAAgB,GAAG,CAAC,YAAY,EAAE,WAAW,EAAE,WAAW,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;IACtF,CAAC;IAED,kDAAQ,GAAR;QACE,IAAI,CAAC,sBAAsB,CAAC,2BAA2B,CAAC,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAC3H,CAAC;IAED,wDAAc,GAAd;QACE,OAAO,IAAI,CAAC,sBAAsB,CAAC,cAAc,EAAE,CAAC;IACtD,CAAC;IAED,uDAAa,GAAb,UAAc,eAAe;QAC3B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4IAA0C,EAAE;YAC3D,UAAU,EAAE,mBAAmB;YAC/B,MAAM,EAAE,OAAO;YACf,IAAI,EAAE,EAAE,eAAe,mBAAE;SAC1B,CAAC,CAAC;IAEL,CAAC;IAED,kEAAwB,GAAxB;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uIAAkC,EAAE;YACnD,UAAU,EAAE,mBAAmB;SAChC,CAAC,CAAC;IACL,CAAC;IAED,qEAA2B,GAA3B,UAA4B,EAAU,EAAE,GAAW;QACjD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yGAAsB,EAAE;YACvC,IAAI,EAAE,EAAE,EAAE,MAAE,GAAG,OAAE;SAClB,CAAC,CAAC;IACL,CAAC;IAED,qEAA2B,GAA3B,UAA4B,eAAgC;QAC1D,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0IAAmC,EAAE;YACpD,UAAU,EAAE,mBAAmB;YAC/B,IAAI,EAAE,EAAE,eAAe,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,eAAe,CAAC,EAAE;SAC9D,CAAC,CAAC;IACL,CAAC;IAED,gDAAM,GAAN;QACE,IAAI,CAAC,sBAAsB,CAAC,sBAAsB,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC/F,CAAC;IAED,qDAAW,GAAX;QACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IApDmB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;iEAAC;IACT;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;sEAAC;IANtC,+BAA+B;QAL3C,+DAAS,CAAC;YACT,QAAQ,EAAE,8BAA8B;YACxC,kNAAwD;;SAEzD,CAAC;+EAS2C,mGAAsB;YACrC,2DAAS;YACD,kFAAc;OAVvC,+BAA+B,CA2D3C;IAAD,sCAAC;CAAA;AA3D2C;;;;;;;;;;;;ACf5C,+DAA+D,mN;;;;;;;;;;;ACA/D,skBAAskB,iCAAiC,mcAAmc,mCAAmC,icAAic,gCAAgC,ybAAyb,wCAAwC,mcAAmc,qCAAqC,odAAod,gCAAgC,ydAAyd,yCAAyC,2VAA2V,kBAAkB,kD;;;;;;;;;;;;;;;;;;;;;;;;;ACAxyH;AACD;AACuB;AACE;AACP;AACiB;AACH;AACd;AACmB;AAOtF;IAEE,8BACU,SAA6C,EAC9C,cAA+B,EAC/B,gBAAkC,EAClC,qBAA4C,EAC5C,kBAAuC,EACvC,aAA4B,EAC5B,aAA4B,EAC5B,sBAA8C;QAP7C,cAAS,GAAT,SAAS,CAAoC;QAC9C,mBAAc,GAAd,cAAc,CAAiB;QAC/B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,uBAAkB,GAAlB,kBAAkB,CAAqB;QACvC,kBAAa,GAAb,aAAa,CAAe;QAC5B,kBAAa,GAAb,aAAa,CAAe;QAC5B,2BAAsB,GAAtB,sBAAsB,CAAwB;IAAI,CAAC;IAE5D,uCAAQ,GAAR;IACA,CAAC;IAED,6CAAc,GAAd;QACE,OAAO,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,CAAC;YACjD,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;YAChD,UAAU,CAAC,IAAI,CAAC,qBAAqB,CAAC,cAAc,EAAE,CAAC;YACvD,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;YAC/C,UAAU,CAAC,IAAI,CAAC,sBAAsB,CAAC,cAAc,EAAE,CAAC;YACxD,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC,CAAC;IAC1D,CAAC;IAED,sCAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IA1BU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,iKAA4C;;SAE7C,CAAC;+EAIqB,8DAAY;YACR,qFAAe;YACb,uFAAgB;YACX,iGAAqB;YACxB,8FAAmB;YACxB,gFAAa;YACb,gFAAa;YACJ,mGAAsB;OAV5C,oBAAoB,CA4BhC;IAAD,2BAAC;CAAA;AA5BgC;;;;;;;;;;;;ACfjC,+DAA+D,mM;;;;;;;;;;;ACA/D,mnBAAmnB,cAAc,6MAA6M,eAAe,yNAAyN,qBAAqB,6MAA6M,eAAe,4lDAA4lD,2BAA2B,qFAAqF,0CAA0C,gHAAgH,4FAA4F,4R;;;;;;;;;;;;;;;;;;;;;;;;ACAzqG;AACK;AACX;AAE0D;AAClD;AACiB;AACoB;AAC1B;AAQ7E;IAME,sCAAmB,cAA8B,EAC7B,SAAoB;QADrB,mBAAc,GAAd,cAAc,CAAgB;QAC7B,cAAS,GAAT,SAAS,CAAW;QACtC,IAAI,CAAC,gBAAgB,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,aAAa,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;QAC7E,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAGD,oDAAa,GAAb,UAAc,KAAM;QAClB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;QACrC,IAAI,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YAC1B,IAAI,CAAC,gBAAgB,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;SAC/D;aAAM;YACL,IAAI,CAAC,gBAAgB,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,aAAa,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;SAC9E;IACH,CAAC;IAED,+CAAQ,GAAR;QACE,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAC;IAC1C,CAAC;IAED,oDAAa,GAAb,UAAc,OAAgB;QAC5B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,+FAAsB,EAAE;YAC1C,UAAU,EAAE,mBAAmB;YAC/B,IAAI,EAAE,EAAE,OAAO,EAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE;SAC/C,CAAC,CAAC;IACL,CAAC;IAED,6DAAsB,GAAtB,UAAuB,OAAgB;QACrC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,mHAA4B,EAAE;YAChD,UAAU,EAAE,mBAAmB;YAC/B,IAAI,EAAE,EAAE,OAAO,WAAE;SAClB,CAAC,CAAC;IACL,CAAC;IAED,uDAAgB,GAAhB;QACE,IAAM,OAAO,GAAG,IAAI,uEAAO,EAAE,CAAC;QAC9B,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC;QACvB,IAAM,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;QAC5B,IAAM,IAAI,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACjD,IAAM,IAAI,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACjC,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE;YAC9B,KAAK,GAAG,MAAM,CAAC;YACf,WAAW,GAAG,WAAW,GAAG,IAAI,GAAG,SAAS,CAAC;SAC9C;aAAM,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE;YACtC,KAAK,GAAG,MAAM,CAAC;YACf,WAAW,GAAG,WAAW,GAAG,IAAI,GAAG,SAAS,CAAC;SAC9C;aAAM,IAAI,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE;YACxE,KAAK,GAAG,MAAM,CAAC;YACf,WAAW,GAAG,WAAW,GAAG,IAAI,GAAG,iBAAiB,CAAC;SACtD;QACD,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;QACpB,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;QACtB,OAAO,CAAC,WAAW,GAAG,WAAW,CAAC;QAClC,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,2DAAoB,GAApB;QACE,IAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,yFAAoB,EAAE;YACxC,UAAU,EAAE,mBAAmB;YAC/B,IAAI,EAAE,EAAC,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,EAAC;SAC5C,CAAC,CAAC;IACL,CAAC;IAED,mDAAY,GAAZ;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,iIAA6B,CAAC,CAAC;IACrD,CAAC;IA/DD;QADC,kEAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;qEASzC;IArBU,4BAA4B;QALxC,+DAAS,CAAC;YACT,QAAQ,EAAE,2BAA2B;YACrC,8JAAqD;;SAEtD,CAAC;+EAOmC,kFAAc;YAClB,2DAAS;OAP7B,4BAA4B,CA6ExC;IAAD,mCAAC;CAAA;AA7EwC;;;;;;;;;;;;AChBzC,+DAA+D,mO;;;;;;;;;;;ACA/D,uS;;;;;;;;;;;;;;;;;;;;;ACA0D;AACT;AAC8B;AACV;AACQ;AAO7E;IAGE,uCAAmB,SAAsD,EACrD,YAAiC,EACjC,cAA8B,EAC9B,kBAAsC;QAHvC,cAAS,GAAT,SAAS,CAA6C;QACrD,iBAAY,GAAZ,YAAY,CAAqB;QACjC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,uBAAkB,GAAlB,kBAAkB,CAAoB;IAC1D,CAAC;IAED,+CAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,oDAAY,GAAZ;QAAA,iBAUC;QATC,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,aAAG;YAC9C,KAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAC;YACxC,KAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;YAChC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,iCAA4B,CAAC,CAAC;QAC1D,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gDAAQ,GAAR;IACA,CAAC;IA1BU,6BAA6B;QALzC,+DAAS,CAAC;YACT,QAAQ,EAAE,4BAA4B;YACtC,uLAAsD;;SAEvD,CAAC;+EAI8B,8DAAY;YACR,4FAAmB;YACjB,kFAAc;YACV,0FAAkB;OAN/C,6BAA6B,CA4BzC;IAAD,oCAAC;CAAA;AA5ByC;;;;;;;;;;;;ACX1C,+DAA+D,+M;;;;;;;;;;;ACA/D,krD;;;;;;;;;;;;;;;;;;;;ACA0D;AACQ;AACG;AACU;AAS/E;IAIE,gCACS,SAA+C,EACtB,IAAS,EAClC,cAA8B,EAC7B,YAAiC;QAHlC,cAAS,GAAT,SAAS,CAAsC;QACtB,SAAI,GAAJ,IAAI,CAAK;QAClC,mBAAc,GAAd,cAAc,CAAgB;QAC7B,iBAAY,GAAZ,YAAY,CAAqB;QACzC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;IAC9B,CAAC;IAED,8CAAa,GAAb;QAAA,iBAWC;QAVC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;aAC1E,SAAS,CAAC,aAAG;YACZ,KAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAC;YACxC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;QAC3D,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACT,CAAC;IAED,wCAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,wCAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,yCAAQ,GAAR;IACA,CAAC;IAlCU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,+JAA8C;;SAE/C,CAAC;QAOG,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY,UAEP,kFAAc;YACf,4FAAmB;OARhC,sBAAsB,CAoClC;IAAD,6BAAC;CAAA;AApCkC;;;;;;;;;;;;ACZnC,+DAA+D,uM;;;;;;;;;;;ACA/D,ilD;;;;;;;;;;;;;;;;;;;;ACA0D;AAEQ;AACG;AACU;AAQ/E;IAIE,8BACU,SAA6C,EACrB,IAAS,EACjC,cAA8B,EAC9B,YAAiC;QAHjC,cAAS,GAAT,SAAS,CAAoC;QACrB,SAAI,GAAJ,IAAI,CAAK;QACjC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAqB;QACzC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;IAC9B,CAAC;IAED,6CAAc,GAAd;QAAA,iBAUC;QATC,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC;aAC7C,SAAS,CACR,aAAG;YACD,KAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAC;YACxC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;QAC3D,CAAC,EACD,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CACxB,CAAC;IACN,CAAC;IAED,sCAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,sCAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,uCAAQ,GAAR;IACA,CAAC;IAjCU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,yJAA4C;;SAE7C,CAAC;QAOG,6GAAM,CAAC,iEAAe,CAAC;+EADL,8DAAY,UAEP,kFAAc;YAChB,4FAAmB;OARhC,oBAAoB,CAkChC;IAAD,2BAAC;CAAA;AAlCgC;;;;;;;;;;;;ACZjC,+DAA+D,+N;;;;;;;;;;;ACA/D,w1BAAw1B,eAAe,8tBAA8tB,aAAa,uEAAuE,OAAO,kpBAAkpB,sBAAsB,yNAAyN,qBAAqB,uOAAuO,gBAAgB,89BAA89B,2BAA2B,qFAAqF,+BAA+B,gHAAgH,iEAAiE,6E;;;;;;;;;;;;;;;;;;;;;;;;ACAngI;AACN;AACG;AACU;AAER;AAEN;AACY;AACK;AAOlF;IAYE,sCAAmB,YAAwD,EAC/B,IAAS,EACjC,cAA8B,EAC9B,YAAiC,EAClC,eAAgC,EAChC,YAA0B,EAC1B,kBAAsC,EACtC,oBAA0C;QAP1C,iBAAY,GAAZ,YAAY,CAA4C;QAC/B,SAAI,GAAJ,IAAI,CAAK;QACjC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAqB;QAClC,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,yBAAoB,GAApB,oBAAoB,CAAsB;QAC3D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,gBAAgB,GAAG,CAAC,KAAK,EAAE,aAAa,EAAE,kBAAkB,EAAE,SAAS,CAAC,CAAC;QAC9E,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC;QACxC,IAAI,CAAC,KAAK,GAAI,CAAC,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAClB,CAAC;IAGD,oDAAa,GAAb,UAAc,KAAM;QAClB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;QACrC,IAAI,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YAC1B,IAAI,CAAC,KAAK,GAAI,CAAC,CAAC;SACjB;aAAM;YACL,IAAI,CAAC,KAAK,GAAI,CAAC,CAAC;SACjB;IACH,CAAC;IAED,+CAAQ,GAAR;QACE,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;QACjC,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,EAAE,CAAC;IAC/C,CAAC;IAED,8CAAO,GAAP;QACE,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;IAC5B,CAAC;IAED,gEAAyB,GAAzB,UAA0B,UAAkB;QAA5C,iBAWC;QAVC,IAAI,CAAC,cAAc,CAAC,yBAAyB,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,aAAG;YACvF,IAAM,GAAG,GAAG,SAAS,CAAC;YACtB,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YACxB,KAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAC;YACxC,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;QACjD,CAAC,EACD,aAAG;YACD,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEnC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qDAAc,GAAd,UAAe,QAAkB;QAC/B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC9C,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;IAC9B,CAAC;IAED,2DAAoB,GAApB;QAAA,iBA2CC;QA1CC,IAAI,YAAY,GAAG,KAAK,CAAC;QACzB,IAAI,SAAS,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,WAAC;YAC9B,IAAI,CAAC,CAAC,WAAW,KAAK,KAAI,CAAC,QAAQ,CAAC,GAAG,EAAE;gBACvC,YAAY,GAAG,IAAI,CAAC;aACrB;YACD,KAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,WAAC;gBAC9B,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;oBACxB,SAAS,GAAG,IAAI,CAAC;oBACjB,KAAI,CAAC,KAAK,GAAG,CAAC,GAAG,mBAAmB,CAAC;iBACtC;YACH,CAAC,CAAC,CAAC;QAEL,CAAC,CAAC,CAAC;QAEH,IAAI,YAAY,EAAE;YAChB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;SAChD;aAAM,IAAI,SAAS,EAAE;YACpB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;SAC9C;aAAM;YACL,IAAM,UAAU,GAAG;gBACjB,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG;gBAC9B,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI;gBAChC,WAAW,EAAE,IAAI,CAAC,MAAM;gBACxB,MAAM,EAAE,IAAI,CAAC,iBAAiB;aAC/B,CAAC;YACF,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,aAAG;gBAClF,IAAM,GAAG,GAAG,SAAS,CAAC;gBACtB,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;gBACxB,KAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAC;gBACxC,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;YAC/C,CAAC,EACC,aAAG;gBACD,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;YAEL,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAE,UAAU,EACV,IAAI,CAAC,OAAO,CAAC,GAAG,EAChB,IAAI,CAAC,YAAY,CAAC,MAAM,EACxB,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC;SAEjF;IACH,CAAC;IAjFD;QADC,kEAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;qEASzC;IArCU,4BAA4B;QALxC,+DAAS,CAAC;YACT,QAAQ,EAAE,2BAA2B;YACrC,oLAAqD;;SAEtD,CAAC;QAca,6GAAM,CAAC,iEAAe,CAAC;+EADH,8DAAY,UAET,kFAAc;YAChB,4FAAmB;YACjB,oFAAe;YAClB,8EAAY;YACN,0FAAkB;YAChB,+FAAoB;OAnBlD,4BAA4B,CAiHxC;IAAD,mCAAC;CAAA;AAjHwC;;;;;;;;;;;;AChBzC,2BAA2B,qBAAqB,sBAAsB,KAAK,6BAA6B,mBAAmB,KAAK,+CAA+C,ue;;;;;;;;;;;ACA/K,qEAAqE,kBAAkB,ib;;;;;;;;;;;;;;;;;;;ACA1B;AACb;AACiB;AAOjE;IAKE,2BAAmB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAAI,CAAC;IAElD,oCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;IAChC,CAAC;IAED,qCAAS,GAAT,UAAU,CAAC;QACT,IAAM,IAAI,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAC5D,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;IAZsB;QAAtB,+DAAS,CAAC,UAAU,CAAC;wEAAW,6DAAW;uDAAM;IAFvC,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,4HAAwC;;SAEzC,CAAC;+EAMiC,8EAAY;OALlC,iBAAiB,CAgB7B;IAAD,wBAAC;CAAA;AAhB6B;;;;;;;;;;;;ACT9B,+DAA+D,2L;;;;;;;;;;;ACA/D,2lBAA2lB,MAAM,6OAA6O,MAAM,ycAAyc,cAAc,iNAAiN,qBAAqB,+kCAA+kC,2BAA2B,mFAAmF,iCAAiC,0GAA0G,qEAAqE,6D;;;;;;;;;;;;;;;;;;;;;;ACA52F;AACe;AACnB;AAC8C;AACtC;AACuB;AAO7E;IAME,6BAAmB,YAA0B,EAC1B,SAAoB;QADpB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,cAAS,GAAT,SAAS,CAAW;QACrC,IAAI,CAAC,gBAAgB,GAAG,CAAC,MAAM,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC;QAC3D,IAAI,CAAC,KAAK,GAAG,IAAI,mEAAK,EAAE,CAAC;IAC1B,CAAC;IAEF,sCAAQ,GAAR;IACA,CAAC;IAED,+CAAiB,GAAjB,UAAkB,KAAY;QAC5B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,yGAAsB,EAAE;YAC1C,IAAI,EAAE,EAAE,KAAK,SAAE,GAAG,EAAE,WAAW,EAAE;SAClC,CAAC,CAAC;IACL,CAAC;IAED,sCAAQ,GAAR;QACE,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAC/E,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACzC,CAAC;IAED,+CAAiB,GAAjB,UAAkB,KAAY;QAC5B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,yFAAoB,EAAE;YACxC,UAAU,EAAE,mBAAmB;YAC/B,IAAI,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE;SAC1C,CAAC,CAAC;IACL,CAAC;IA/BU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,8IAA2C;;SAE5C,CAAC;+EAOiC,8EAAY;YACf,2DAAS;OAP5B,mBAAmB,CAiC/B;IAAD,0BAAC;CAAA;AAjC+B;;;;;;;;;;;;ACZhC,+DAA+D,+M;;;;;;;;;;;ACA/D,gnC;;;;;;;;;;;;;;;;;;;;ACA0D;AACQ;AACD;AACc;AAS/E;IAIE,8BAAmB,SAA6C,EACpB,IAAS,EACjC,YAA0B,EAC1B,YAAiC;QAHlC,cAAS,GAAT,SAAS,CAAoC;QACpB,SAAI,GAAJ,IAAI,CAAK;QACjC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,iBAAY,GAAZ,YAAY,CAAqB;QACnD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IAC1B,CAAC;IAED,uCAAQ,GAAR;IACA,CAAC;IAED,sCAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,sCAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,0CAAW,GAAX;QAAA,iBAUC;QATC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,aAAG;YACrD,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC7C,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;YAC/C,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACzB,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC;IAhCU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,6JAA4C;;SAE7C,CAAC;QAMa,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY,UAER,8EAAY;YACZ,4FAAmB;OAP1C,oBAAoB,CAkChC;IAAD,2BAAC;CAAA;AAlCgC;;;;;;;;;;;;ACZjC,0BAA0B,2BAA2B,eAAe,gBAAgB,iBAAiB,qBAAqB,kBAAkB,mBAAmB,KAAK,YAAY,2BAA2B,wCAAwC,qCAAqC,mCAAmC,sCAAsC,+BAA+B,oBAAoB,qBAAqB,kBAAkB,mBAAmB,KAAK,eAAe,sBAAsB,0BAA0B,6BAA6B,oBAAoB,KAAK,oBAAoB,mEAAmE,2BAA2B,KAAK,iBAAiB,oBAAoB,sBAAsB,kBAAkB,mBAAmB,KAAK,qBAAqB,kCAAkC,oBAAoB,qBAAqB,2BAA2B,0BAA0B,uBAAuB,KAAK,aAAa,qBAAqB,sBAAsB,aAAa,yBAAyB,oBAAoB,qBAAqB,2BAA2B,KAAK,6BAA6B,yBAAyB,KAAK,iBAAiB,0BAA0B,qBAAqB,kCAAkC,KAAK,gBAAgB,4BAA4B,KAAK,kBAAkB,wBAAwB,uBAAuB,0BAA0B,6BAA6B,2BAA2B,sBAAsB,KAAK,cAAc,0BAA0B,kCAAkC,uBAAuB,0BAA0B,6BAA6B,KAAK,sBAAsB,2BAA2B,wBAAwB,KAAK,eAAe,uBAAuB,wBAAwB,KAAK,yBAAyB,qBAAqB,sBAAsB,KAAK,iBAAiB,wBAAwB,KAAK,kBAAkB,kCAAkC,uBAAuB,2BAA2B,yBAAyB,KAAK,+CAA+C,2rI;;;;;;;;;;;ACArlE,0tCAA0tC,MAAM,4mBAA4mB,cAAc,gNAAgN,OAAO,qdAAqd,mBAAmB,mNAAmN,OAAO,wmBAAwmB,cAAc,8eAA8e,eAAe,IAAI,sBAAsB,qNAAqN,MAAM,qCAAqC,UAAU,2CAA2C,SAAS,2CAA2C,QAAQ,oF;;;;;;;;;;;;;;;;;;;;;ACAjrI;AACK;AAEQ;AACN;AACF;AAOrE;IAaE,uBAAmB,cAA8B,EAC9B,kBAAsC,EACtC,eAAgC,EAChC,WAA2B;QAH3B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,oBAAe,GAAf,eAAe,CAAiB;QAChC,gBAAW,GAAX,WAAW,CAAgB;QAbvC,WAAM,GAAG,EAAE,CAAC;QAGZ,YAAO,GAAG,EAAE,CAAC;QACb,WAAM,GAAG,EAAE,CAAC;QACZ,iBAAY,GAAG,CAAC,CAAC;QACjB,sBAAiB,GAAG,CAAC,CAAC;QACtB,SAAI,GAAG,CAAC,CAAC;IAOhB,CAAC;IAGD,gCAAQ,GAAR;QAAA,iBA+CC;QA9CC,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC;QACnC,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,aAAG;YAC5C,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC;YACnB,KAAI,CAAC,MAAM,GAAG,iDAAiD,GAAG,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC;YACxG,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;YACrD,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;YAC3C,IAAM,WAAW,GAAG,IAAI,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;YAC9D,IAAM,UAAU,GAAG,IAAI,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;YAC5D,KAAI,CAAC,OAAO,GAAG,WAAW,CAAC,QAAQ,EAAE,GAAG,GAAG,GAAG,WAAW,CAAC,UAAU,EAAE,CAAC;YACvE,KAAI,CAAC,MAAM,GAAG,UAAU,CAAC,QAAQ,EAAE,GAAG,GAAG,GAAG,UAAU,CAAC,UAAU,EAAE,CAAC;YAEpE,KAAI,CAAC,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC/C,oBAAoB;YACpB,KAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,CAAC,SAAS,CACjD,gBAAM;gBACJ,IAAM,GAAG,GAAG,OAAO,CAAC;gBACpB,KAAI,CAAC,YAAY,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;YAClC,CAAC,EACD,aAAG;gBACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC,CACF,CAAC;YACF,yBAAyB;YACzB,KAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,gBAAM;gBAC7D,IAAM,GAAG,GAAG,UAAU,CAAC;gBACvB,KAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;YACvC,CAAC,EACD,aAAG;gBACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC;QACL,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;QAEH,qBAAqB;QACrB,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,aAAG;YACnD,IAAM,GAAG,GAAG,OAAO,CAAC;YACpB,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;QACvB,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;QAEH,uCAAuC;QACvC,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,EAAE,CAAC;IAC/C,CAAC;IAnEU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,2GAAoC;;SAErC,CAAC;+EAcmC,kFAAc;YACV,0FAAkB;YACrB,oFAAe;YACnB,kFAAc;OAhBnC,aAAa,CAqEzB;IAAD,oBAAC;CAAA;AArEyB;;;;;;;;;;;;ACZ1B,kCAAkC,uCAAuC,wBAAwB,yBAAyB,mBAAmB,kCAAkC,mCAAmC,oCAAoC,iCAAiC,0BAA0B,wBAAwB,yBAAyB,2BAA2B,uBAAuB,KAAK,uBAAuB,8CAA8C,KAAK,gBAAgB,6CAA6C,6BAA6B,iCAAiC,0BAA0B,mBAAmB,oBAAoB,yBAAyB,KAAK,gBAAgB,sBAAsB,yBAAyB,mBAAmB,mBAAmB,KAAK,gBAAgB,gCAAgC,qCAAqC,yBAAyB,kBAAkB,mBAAmB,kCAAkC,0BAA0B,KAAK,uBAAuB,wBAAwB,KAAK,mBAAmB,wBAAwB,KAAK,gBAAgB,qBAAqB,qBAAqB,mBAAmB,gCAAgC,KAAK,oBAAoB,qBAAqB,gCAAgC,uBAAuB,wBAAwB,mBAAmB,KAAK,sBAAsB,uBAAuB,oBAAoB,4BAA4B,KAAK,mDAAmD,+6G;;;;;;;;;;;ACAt/C,6NAA6N,cAAc,yBAAyB,oBAAoB,uNAAuN,iBAAiB,0F;;;;;;;;;;;;;;;;;;ACA1a;AACjB;AAMrE;IAcE,wBAAoB,WAA2B;QAA3B,gBAAW,GAAX,WAAW,CAAgB;QAC7C,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,EAAE,EAAE,aAAa,EAAE,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;QAC5F,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAClB,CAAC;IAED,mCAAU,GAAV;QACE,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;YAC7B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC5B;IACH,CAAC;IAGD,sCAAa,GAAb,UAAc,KAAM;QAClB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;QACrC,IAAI,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YAC1B,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;SACf;aAAM,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,EAAE;YAClC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;SACf;aAAM,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,EAAE;YAClC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;SACf;aAAM;YACL,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;SACf;IACH,CAAC;IAED,gCAAO,GAAP;QAAA,iBAqBC;QApBC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,YAAqB,CAAC;QAC1B,IAAI,KAAa,CAAC;QAClB,IAAI,MAAc,CAAC;QACnB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAO;YACvC,KAAK,GAAG,CAAC,OAAO,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC;YACjD,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC1B,MAAM,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;YACtD,IAAI,MAAM,GAAG,EAAE,EAAE;gBACf,YAAY,GAAG,IAAI,CAAC;aACrB;iBAAM;gBACL,YAAY,GAAG,KAAK,CAAC;aACtB;YACD,KAAI,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,OAAO,CAAC,OAAO;gBACxB,aAAa,EAAE,OAAO,CAAC,SAAS;gBAChC,SAAS,EAAE,KAAK;gBAChB,UAAU,EAAE,MAAM;gBAClB,OAAO,EAAE,YAAY,EAAC,CAAC;YACrC,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC;QACnC,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAlEQ;QAAR,2DAAK,EAAE;;iDAAmB;IA0B3B;QADC,kEAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;uDAazC;IAxCU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,mHAAqC;;SAEtC,CAAC;+EAeiC,kFAAc;OAdpC,cAAc,CAqE1B;IAAD,qBAAC;CAAA;AArE0B;;;;;;;;;;;;ACP3B,+DAA+D,uO;;;;;;;;;;;ACA/D,iqD;;;;;;;;;;;;;;;;;;;;ACA0D;AAEQ;AACQ;AACK;AAQ/E;IAKE,gCAAmB,SAA+C,EACtB,IAAS,EACjC,gBAAkC,EAClC,YAAiC;QAHlC,cAAS,GAAT,SAAS,CAAsC;QACtB,SAAI,GAAJ,IAAI,CAAK;QACjC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,iBAAY,GAAZ,YAAY,CAAqB;QACnD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,yCAAQ,GAAR;QACE,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;IACH,CAAC;IAED,wCAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,wCAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,gDAAe,GAAf;QAAA,iBAUC;QATC,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;QACpF,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,aAAG;YACrF,KAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC;YAC1C,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,gCAAgC,CAAC,CAAC;QAC9D,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IArCU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,kLAA+C;;SAEhD,CAAC;QAOa,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY,UAEJ,uFAAgB;YACpB,4FAAmB;OAR1C,sBAAsB,CAuClC;IAAD,6BAAC;CAAA;AAvCkC;;;;;;;;;;;;ACZnC,+DAA+D,+M;;;;;;;;;;;ACA/D,qsBAAqsB,mBAAmB,8SAA8S,uBAAuB,qRAAqR,cAAc,gRAAgR,eAAe,uRAAuR,oBAAoB,wDAAwD,kBAAkB,upCAAupC,2BAA2B,6FAA6F,mGAAmG,8FAA8F,+CAA+C,oGAAoG,sGAAsG,qK;;;;;;;;;;;;;;;;;;;;;ACAhmH;AACQ;AACK;AACkB;AAEP;AAOrF;IAQE,gCAAmB,gBAAkC,EACjC,MAAiB;QADlB,qBAAgB,GAAhB,gBAAgB,CAAkB;QACjC,WAAM,GAAN,MAAM,CAAW;QACnC,IAAI,CAAC,gBAAgB,GAAG,CAAC,WAAW,EAAE,eAAe,EAAE,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC;IACnG,CAAC;IAED,yCAAQ,GAAR;QACE,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IAED,+CAAc,GAAd;QACE,OAAO,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,CAAC;IAChD,CAAC;IAED,sDAAqB,GAArB,UAAsB,EAAU,EAAE,GAAW;QAC3C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yGAAsB,EAAE;YACvC,IAAI,EAAE,EAAE,EAAE,MAAE,GAAG,OAAE;SAClB,CAAC,CAAC;IACL,CAAC;IAED,sDAAqB,GAArB,UAAsB,SAAoB;QACxC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iGAAsB,EAAE;YACvC,UAAU,EAAE,mBAAmB;YAC/B,IAAI,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE;SAClD,CAAC,CAAC;IACL,CAAC;IAED,uCAAM,GAAN;QACE,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IACnF,CAAC;IAED,4CAAW,GAAX;QACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IApCmB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;wDAAC;IACT;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;6DAAC;IANtC,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,kKAA+C;;SAEhD,CAAC;+EASqC,uFAAgB;YACzB,2DAAS;OAT1B,sBAAsB,CA2ClC;IAAD,6BAAC;CAAA;AA3CkC;;;;;;;;;;;;ACZnC,+DAA+D,2N;;;;;;;;;;;ACA/D,wvBAAwvB,YAAY,k7C;;;;;;;;;;;;;;;;;;;;;ACA1sB;AAEQ;AACM;AACO;AAEE;AAOjF;IAKE,8BAAmB,SAA6C,EACpB,IAAS,EACjC,eAAgC,EACjC,mBAAwC,EACvC,YAAiC;QAJlC,cAAS,GAAT,SAAS,CAAoC;QACpB,SAAI,GAAJ,IAAI,CAAK;QACjC,oBAAe,GAAf,eAAe,CAAiB;QACjC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACvC,iBAAY,GAAZ,YAAY,CAAqB;QACnD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,uCAAQ,GAAR;QACE,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;QACD,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,CAAC;IAC9C,CAAC;IAED,sCAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,sCAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,6CAAc,GAAd;QAAA,iBAUC;QATC,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,UAAU,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1G,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,aAAG;YACjF,KAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC;YACxC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,+BAA+B,CAAC,CAAC;QAC7D,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAvCU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,yKAA6C;;SAE9C,CAAC;QAOa,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY,UAEL,qFAAe;YACZ,8FAAmB;YACzB,4FAAmB;OAT1C,oBAAoB,CAwChC;IAAD,2BAAC;CAAA;AAxCgC;;;;;;;;;;;;ACbjC,+DAA+D,2M;;;;;;;;;;;ACA/D,2sBAA2sB,kBAAkB,0SAA0S,mBAAmB,6RAA6R,uBAAuB,kRAAkR,eAAe,0RAA0R,oBAAoB,wDAAwD,kBAAkB,ozCAAozC,2BAA2B,6FAA6F,+FAA+F,8FAA8F,6CAA6C,oGAAoG,kGAAkG,uK;;;;;;;;;;;;;;;;;;;;;;ACAtwH;AACQ;AACG;AACyC;AACrB;AACb;AAQ/E;IAQE,8BAAmB,eAAgC,EAC/B,MAAiB;QADlB,oBAAe,GAAf,eAAe,CAAiB;QAC/B,WAAM,GAAN,MAAM,CAAW;QACnC,IAAI,CAAC,gBAAgB,GAAG,CAAC,UAAU,EAAE,WAAW,EAAE,eAAe,EAAE,OAAO,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC;IACvG,CAAC;IAED,uCAAQ,GAAR;QACE,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACnE,CAAC;IAED,6CAAc,GAAd;QACE,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC;IAC/C,CAAC;IAED,4CAAa,GAAb,UAAc,QAAQ;QACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,8HAA2B,EAAE;YAC5C,UAAU,EAAE,mBAAmB;YAC/B,MAAM,EAAE,OAAO;YACf,IAAI,EAAE,EAAE,QAAQ,YAAE;SACnB,CAAC,CAAC;IAEL,CAAC;IAED,mDAAoB,GAApB,UAAqB,EAAU,EAAE,GAAW;QAC1C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yGAAsB,EAAE;YACvC,IAAI,EAAE,EAAE,EAAE,MAAE,GAAG,OAAE;SAClB,CAAC,CAAC;IACL,CAAC;IAED,mDAAoB,GAApB,UAAqB,QAAkB;QACrC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2FAAoB,EAAE;YACrC,UAAU,EAAE,mBAAmB;YAC/B,IAAI,EAAE,EAAE,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE;SAChD,CAAC,CAAC;IACL,CAAC;IAED,qCAAM,GAAN;QACE,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IACjF,CAAC;IAED,0CAAW,GAAX;QACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IA7CmB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;sDAAC;IACT;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;2DAAC;IANtC,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,2JAA6C;;SAE9C,CAAC;+EASoC,qFAAe;YACvB,2DAAS;OAT1B,oBAAoB,CAoDhC;IAAD,2BAAC;CAAA;AApDgC;;;;;;;;;;;;ACbjC,+DAA+D,mP;;;;;;;;;;;ACA/D,0HAA0H,QAAQ,mBAAmB,kHAAkH,QAAQ,oBAAoB,mHAAmH,QAAQ,wBAAwB,kHAAkH,QAAQ,qBAAqB,sHAAsH,QAAQ,eAAe,0S;;;;;;;;;;;;;;;;;;ACAxpB;AAEQ;AAOlE;IAIE,qCAAmB,SAAoD,EAC3B,IAAS;QADlC,cAAS,GAAT,SAAS,CAA2C;QAC3B,SAAI,GAAJ,IAAI,CAAK;QACjD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC/B,CAAC;IAEJ,8CAAQ,GAAR;IACA,CAAC;IAED,+CAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAdU,2BAA2B;QALvC,+DAAS,CAAC;YACT,QAAQ,EAAE,2BAA2B;YACrC,iMAAqD;;SAEtD,CAAC;QAMa,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY;OAJ/B,2BAA2B,CAevC;IAAD,kCAAC;CAAA;AAfuC;;;;;;;;;;;;ACTxC,+DAA+D,+M;;;;;;;;;;;ACA/D,w+E;;;;;;;;;;;;;;;;;;;;ACA0D;AAEQ;AACC;AACY;AAQ/E;IAKE,6BAAmB,SAA4C,EACnB,IAAS,EACjC,aAA4B,EAC5B,YAAiC;QAHlC,cAAS,GAAT,SAAS,CAAmC;QACnB,SAAI,GAAJ,IAAI,CAAK;QACjC,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAqB;QACnD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,sCAAQ,GAAR;QACE,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;IACH,CAAC;IAED,qCAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,qCAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,0CAAY,GAAZ;QAAA,iBASC;QARC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;YACzE,KAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;YACpC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC;QAC1D,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IApCU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,8JAA2C;;SAE5C,CAAC;QAOa,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY,UAEP,gFAAa;YACd,4FAAmB;OAR1C,mBAAmB,CAsC/B;IAAD,0BAAC;CAAA;AAtC+B;;;;;;;;;;;;ACZhC,+DAA+D,+L;;;;;;;;;;;ACA/D,qsBAAqsB,mBAAmB,2SAA2S,sBAAsB,mRAAmR,kBAAkB,uRAAuR,cAAc,gRAAgR,eAAe,4RAA4R,qBAAqB,wDAAwD,kBAAkB,moCAAmoC,2BAA2B,6FAA6F,uFAAuF,8FAA8F,yCAAyC,oGAAoG,0FAA0F,qK;;;;;;;;;;;;;;;;;;;;;ACAz0H;AACR;AACP;AAChB;AACgD;AAElB;AAO1E;IAUE,6BAAmB,aAA4B,EAC3B,MAAiB;QADlB,kBAAa,GAAb,aAAa,CAAe;QAC3B,WAAM,GAAN,MAAM,CAAW;QACnC,IAAI,CAAC,gBAAgB,GAAG,CAAC,WAAW,EAAE,cAAc,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC;IAC/G,CAAC;IAGD,2CAAa,GAAb,UAAc,KAAM;QAClB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;QACrC,IAAI,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YAC1B,IAAI,CAAC,gBAAgB,GAAG,CAAC,WAAW,EAAE,UAAU,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC;SAC7E;aAAM;YACL,IAAI,CAAC,gBAAgB,GAAG,CAAC,WAAW,EAAE,cAAc,EAAE,UAAU,EAAE,MAAM,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC;SACrG;IACH,CAAC;IAED,4CAAc,GAAd;QACE,OAAO,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;IAC7C,CAAC;IAED,sCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAC/D,CAAC;IAED,gDAAkB,GAAlB,UAAmB,EAAU,EAAE,GAAW;QACxC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yGAAsB,EAAE;YACvC,IAAI,EAAE,EAAE,EAAE,MAAE,GAAG,OAAE;SAClB,CAAC,CAAC;IACL,CAAC;IAED,gDAAkB,GAAlB,UAAmB,MAAc;QAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sFAAmB,EAAE;YACpC,UAAU,EAAE,mBAAmB;YAC/B,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE;SAC5C,CAAC,CAAC;IACL,CAAC;IAED,oCAAM,GAAN;QACE,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC7E,CAAC;IAED,yCAAW,GAAX;QACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IA/CmB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;qDAAC;IACT;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;0DAAC;IAQjD;QADC,kEAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;4DASzC;IAxBU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,kJAA2C;;SAE5C,CAAC;+EAWkC,gFAAa;YACnB,2DAAS;OAX1B,mBAAmB,CAwD/B;IAAD,0BAAC;CAAA;AAxD+B;;;;;;;;;;;;ACbhC,+DAA+D,+M;;;;;;;;;;;ACA/D,0xE;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACM;AACP;AACkB;AACY;AAEZ;AAOnE;IAOE,4BAAoB,SAA2C,EAC3C,aAA4B,EAC5B,YAAiC,EACjC,aAA4B;QAH5B,cAAS,GAAT,SAAS,CAAkC;QAC3C,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAqB;QACjC,kBAAa,GAAb,aAAa,CAAe;QAC9C,IAAI,CAAC,MAAM,GAAG,IAAI,qEAAM,EAAE,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC7B,CAAC;IAED,qCAAQ,GAAR;QACE,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;QACD,IAAM,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;QAC5B,IAAM,IAAI,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACjD,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;IACtC,CAAC;IAED,oCAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,sCAAS,GAAT,UAAU,YAAoB;QAC5B,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;YAC7B,IAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,KAAK,YAAY,EAAzB,CAAyB,CAAC,CAAC;YAC9E,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;gBACpB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC;gBAC5D,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,SAAS,CAAC;aACpC;iBAAM;gBACL,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;aACtC;SACF;aAAM;YACL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,qDAAqD,CAAC,CAAC;YAC9E,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,SAAS,CAAC;SACpC;IAEH,CAAC;IAED,oCAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,sCAAS,GAAT;QAAA,iBAUC;QATC,IAAI,CAAC,MAAM,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC;QAC9D,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;YACrD,KAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;YACpC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC;QAC1D,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IA/DU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,2JAA0C;;SAE3C,CAAC;+EAQ+B,8DAAY;YACR,gFAAa;YACd,4FAAmB;YAClB,gFAAa;OAVrC,kBAAkB,CAiE9B;IAAD,yBAAC;CAAA;AAjE8B;;;;;;;;;;;;ACb/B,+DAA+D,+M;;;;;;;;;;;ACA/D,m3E;;;;;;;;;;;;;;;;;;;;ACA0D;AAEqB;AACb;AACC;AAQnE;IAKE,6BAAmB,SAA4C,EACnB,IAAS,EACjC,aAA4B,EAC5B,YAAiC;QAHlC,cAAS,GAAT,SAAS,CAAmC;QACnB,SAAI,GAAJ,IAAI,CAAK;QACjC,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAqB;QACnD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,sCAAQ,GAAR;QACE,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;IACH,CAAC;IAED,qCAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,qCAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,0CAAY,GAAZ;QAAA,iBASC;QARC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;YACzE,KAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;YACpC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC;QAC1D,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IApCU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,8JAA2C;;SAE5C,CAAC;QAOa,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY,UAEP,gFAAa;YACd,4FAAmB;OAR1C,mBAAmB,CAsC/B;IAAD,0BAAC;CAAA;AAtC+B;;;;;;;;;;;;ACZhC,+DAA+D,+L;;;;;;;;;;;ACA/D,mzBAAmzB,sBAAsB,sSAAsS,oBAAoB,sRAAsR,cAAc,2SAA2S,6BAA6B,wSAAwS,yBAAyB,wDAAwD,kBAAkB,moCAAmoC,2BAA2B,6FAA6F,uFAAuF,8FAA8F,yCAAyC,oGAAoG,0FAA0F,qK;;;;;;;;;;;;;;;;;;;;;;ACAtsH;AACN;AACF;AACyB;AAClB;AAEH;AAOvE;IAUE,6BAAmB,aAA4B,EAC3B,MAAiB;QADlB,kBAAa,GAAb,aAAa,CAAe;QAC3B,WAAM,GAAN,MAAM,CAAW;QACnC,IAAI,CAAC,gBAAgB,GAAG,CAAC,cAAc,EAAE,YAAY,EAAE,MAAM,EAAE,qBAAqB,EAAE,iBAAiB,EAAE,SAAS,CAAC,CAAC;IACtH,CAAC;IAGD,2CAAa,GAAb,UAAc,KAAM;QAClB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;QACrC,IAAI,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YAC1B,IAAI,CAAC,gBAAgB,GAAG,CAAC,YAAY,EAAE,MAAM,EAAE,iBAAiB,EAAE,SAAS,CAAC,CAAC;SAC9E;aAAM;YACL,IAAI,CAAC,gBAAgB,GAAG,CAAC,cAAc,EAAE,YAAY,EAAE,MAAM,EAAE,qBAAqB,EAAE,iBAAiB,EAAE,SAAS,CAAC,CAAC;SACrH;IACH,CAAC;IAED,4CAAc,GAAd;QACE,OAAO,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;IAC7C,CAAC;IAED,sCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAC/D,CAAC;IAED,6CAAe,GAAf;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mFAAkB,EAAE;YACnC,UAAU,EAAE,mBAAmB;SAChC,CAAC,CAAC;IACL,CAAC;IAED,gDAAkB,GAAlB,UAAmB,EAAU,EAAE,GAAW;QACxC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yGAAsB,EAAE;YACvC,IAAI,EAAE,EAAE,EAAE,MAAE,GAAG,OAAE;SAClB,CAAC,CAAC;IACL,CAAC;IAED,gDAAkB,GAAlB,UAAmB,MAAc;QAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sFAAmB,EAAE;YACpC,UAAU,EAAE,mBAAmB;YAC/B,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE;SAC5C,CAAC,CAAC;IACL,CAAC;IAED,oCAAM,GAAN;QACE,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC7E,CAAC;IAED,yCAAW,GAAX;QACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IArDmB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;qDAAC;IACT;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;0DAAC;IAQjD;QADC,kEAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;4DASzC;IAxBU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,kJAA2C;;SAE5C,CAAC;+EAWkC,gFAAa;YACnB,2DAAS;OAX1B,mBAAmB,CA8D/B;IAAD,0BAAC;CAAA;AA9D+B;;;;;;;;;;;;ACbhC,+DAA+D,+M;;;;;;;;;;;ACA/D,k7D;;;;;;;;;;;;;;;;;;;;ACA0D;AAEQ;AACC;AACY;AAS/E;IAKE,6BAAmB,SAA4C,EACnB,IAAS,EACjC,aAA4B,EAC5B,YAAiC;QAHlC,cAAS,GAAT,SAAS,CAAmC;QACnB,SAAI,GAAJ,IAAI,CAAK;QACjC,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAqB;QACnD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,sCAAQ,GAAR;QACE,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;IACH,CAAC;IAED,qCAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,qCAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,0CAAY,GAAZ;QAAA,iBAUC;QATC,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;QACjE,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;YACzE,KAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;YACpC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,oCAAoC,CAAC,CAAC;QAClE,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IArCU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,8JAA2C;;SAE5C,CAAC;QAOa,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY,UAEP,gFAAa;YACd,4FAAmB;OAR1C,mBAAmB,CAuC/B;IAAD,0BAAC;CAAA;AAvC+B;;;;;;;;;;;;ACbhC,+DAA+D,+L;;;;;;;;;;;ACA/D,0rBAA0rB,cAAc,6RAA6R,kBAAkB,sRAAsR,oBAAoB,wDAAwD,kBAAkB,0NAA0N,eAAe,isCAAisC,2BAA2B,6FAA6F,uFAAuF,8FAA8F,yCAAyC,oGAAoG,0FAA0F,qK;;;;;;;;;;;;;;;;;;;;;ACA5uG;AAEa;AACkB;AAEzB;AACE;AAOrE;IAQE,6BAAmB,aAA4B,EAC3B,MAAiB;QADlB,kBAAa,GAAb,aAAa,CAAe;QAC3B,WAAM,GAAN,MAAM,CAAW;QACnC,IAAI,CAAC,gBAAgB,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE,YAAY,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;IACjF,CAAC;IAED,sCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAC/D,CAAC;IAED,4CAAc,GAAd;QACE,OAAO,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;IAC7C,CAAC;IAED,gDAAkB,GAAlB,UAAmB,EAAU,EAAE,GAAW;QACxC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yGAAsB,EAAE;YACvC,IAAI,EAAE,EAAE,EAAE,MAAE,GAAG,OAAE;SAClB,CAAC,CAAC;IACL,CAAC;IAED,gDAAkB,GAAlB,UAAmB,MAAc;QAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sFAAmB,EAAE;YACpC,UAAU,EAAE,mBAAmB;YAC/B,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE;SAC5C,CAAC,CAAC;IACL,CAAC;IAED,oCAAM,GAAN;QACE,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC7E,CAAC;IAED,yCAAW,GAAX;QACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IApCmB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;qDAAC;IACT;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;0DAAC;IANtC,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,kJAA2C;;SAE5C,CAAC;+EASkC,gFAAa;YACnB,2DAAS;OAT1B,mBAAmB,CA2C/B;IAAD,0BAAC;CAAA;AA3C+B;;;;;;;;;;;;ACbhC,+DAA+D,2P;;;;;;;;;;;ACA/D,qkH;;;;;;;;;;;;;;;;;;;;ACA0D;AAGuB;AACF;AACb;AAOlE;IAKE,mCAAmB,SAAkD,EACzB,IAAS,EACjC,kBAAuC,EACvC,YAAiC;QAHlC,cAAS,GAAT,SAAS,CAAyC;QACzB,SAAI,GAAJ,IAAI,CAAK;QACjC,uBAAkB,GAAlB,kBAAkB,CAAqB;QACvC,iBAAY,GAAZ,YAAY,CAAqB;QACnD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACpC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,4CAAQ,GAAR;QACE,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;IACH,CAAC;IAED,2CAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,2CAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,qDAAiB,GAAjB;QAAA,iBASC;QARC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,aAAG;YAC7F,KAAI,CAAC,kBAAkB,CAAC,mBAAmB,EAAE,CAAC;YAC9C,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,iCAAiC,CAAC,CAAC;QAC/D,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IApCU,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;YACnC,sMAAmD;;SAEpD,CAAC;QAOa,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY,UAEF,8FAAmB;YACzB,4FAAmB;OAR1C,yBAAyB,CAuCrC;IAAD,gCAAC;CAAA;AAvCqC;;;;;;;;;;;;ACZtC,+DAA+D,+N;;;;;;;;;;;ACA/D,+sBAA+sB,sBAAsB,sSAAsS,oBAAoB,uRAAuR,mBAAmB,4RAA4R,uBAAuB,oRAAoR,oBAAoB,sEAAsE,kBAAkB,u1CAAu1C,2BAA2B,6FAA6F,2GAA2G,8FAA8F,mDAAmD,oGAAoG,8GAA8G,qK;;;;;;;;;;;;;;;;;;;;;;ACA90H;AACN;AACY;AACe;AAEJ;AAC2B;AAOvH;IAUE,mCAAmB,kBAAuC,EACtC,MAAiB;QADlB,uBAAkB,GAAlB,kBAAkB,CAAqB;QACtC,WAAM,GAAN,MAAM,CAAW;QACnC,IAAI,CAAC,gBAAgB,GAAG,CAAC,cAAc,EAAE,YAAY,EAAE,WAAW,EAAE,eAAe,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC;IAChH,CAAC;IAGD,iDAAa,GAAb,UAAc,KAAM;QAClB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;QACrC,IAAI,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YAC1B,IAAI,CAAC,gBAAgB,GAAG,CAAC,YAAY,EAAE,WAAW,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC;SAC9E;aAAM;YACL,IAAI,CAAC,gBAAgB,GAAG,CAAC,cAAc,EAAE,YAAY,EAAE,WAAW,EAAE,eAAe,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC;SAC/G;IACH,CAAC;IAED,kDAAc,GAAd;QACE,OAAO,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,CAAC;IAClD,CAAC;IAED,4CAAQ,GAAR;QACE,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACzE,CAAC;IAED,2DAAuB,GAAvB,UAAwB,EAAU,EAAE,GAAW;QAC7C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yGAAsB,EAAE;YACvC,IAAI,EAAE,EAAE,EAAE,MAAE,GAAG,OAAE;SAClB,CAAC,CAAC;IACL,CAAC;IAED,iDAAa,GAAb,UAAc,WAAW;QACvB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mIAAgC,EAAE;YACjD,UAAU,EAAE,mBAAmB;YAC/B,IAAI,EAAE,EAAE,WAAW,eAAE;SACtB,CAAC,CAAC;IAEL,CAAC;IAED,2DAAuB,GAAvB,UAAwB,WAAwB;QAC9C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4GAAyB,EAAE;YAC1C,UAAU,EAAE,mBAAmB;YAC/B,IAAI,EAAE,EAAE,WAAW,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,WAAW,CAAC,EAAE;SACtD,CAAC,CAAC;IACL,CAAC;IAED,0CAAM,GAAN;QACE,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IACvF,CAAC;IAED,+CAAW,GAAX;QACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAvDmB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;2DAAC;IACT;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;gEAAC;IAQjD;QADC,kEAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;kEASzC;IAxBU,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;YACnC,kLAAmD;;SAEpD,CAAC;+EAWuC,8FAAmB;YAC9B,2DAAS;OAX1B,yBAAyB,CAiErC;IAAD,gCAAC;CAAA;AAjEqC;;;;;;;;;;;;ACbtC,+DAA+D,+Q;;;;;;;;;;;ACA/D,iHAAiH,QAAQ,0BAA0B,+GAA+G,QAAQ,wBAAwB,8GAA8G,QAAQ,uBAAuB,8GAA8G,QAAQ,uBAAuB,qHAAqH,QAAQ,4BAA4B,mHAAmH,QAAQ,wBAAwB,qHAAqH,QAAQ,2BAA2B,oHAAoH,QAAQ,uBAAuB,iHAAiH,QAAQ,wBAAwB,sHAAsH,QAAQ,kBAAkB,0S;;;;;;;;;;;;;;;;;;ACA13C;AAEQ;AAOlE;IAIE,0CAAmB,SAAyD,EAChC,IAAS;QADlC,cAAS,GAAT,SAAS,CAAgD;QAChC,SAAI,GAAJ,IAAI,CAAK;QACjD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;IACrC,CAAC;IAEJ,mDAAQ,GAAR;IACA,CAAC;IAED,oDAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAdU,gCAAgC;QAL5C,+DAAS,CAAC;YACT,QAAQ,EAAE,iCAAiC;YAC3C,8NAA2D;;SAE5D,CAAC;QAMa,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY;OAJ/B,gCAAgC,CAgB5C;IAAD,uCAAC;CAAA;AAhB4C;;;;;;;;;;;;ACT7C,+DAA+D,uQ;;;;;;;;;;;ACA/D,wyG;;;;;;;;;;;;;;;;;;;;;ACA0D;AACQ;AAEoB;AACP;AACV;AAQrE;IAKE,sCAAmB,SAAqD,EAC5B,IAAS,EACjC,sBAA8C,EAC9C,YAAiC,EACjC,cAA8B;QAJ/B,cAAS,GAAT,SAAS,CAA4C;QAC5B,SAAI,GAAJ,IAAI,CAAK;QACjC,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,iBAAY,GAAZ,YAAY,CAAqB;QACjC,mBAAc,GAAd,cAAc,CAAgB;QAChD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QAC5C,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,+CAAQ,GAAR;QACE,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;IACH,CAAC;IAED,8CAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,8CAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,4DAAqB,GAArB;QAAA,iBASC;QARC,IAAI,CAAC,sBAAsB,CAAC,qBAAqB,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,aAAG;YAC7G,KAAI,CAAC,sBAAsB,CAAC,2BAA2B,CAAC,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;YAC9F,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,0CAA0C,CAAC,CAAC;QACxE,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IArCU,4BAA4B;QALxC,+DAAS,CAAC;YACT,QAAQ,EAAE,2BAA2B;YACrC,gNAAqD;;SAEtD,CAAC;QAOa,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY,UAEE,mGAAsB;YAChC,4FAAmB;YACjB,kFAAc;OATvC,4BAA4B,CAsCxC;IAAD,mCAAC;CAAA;AAtCwC;;;;;;;;;;;;ACbzC,+DAA+D,uO;;;;;;;;;;;ACA/D,otBAAotB,oBAAoB,sTAAsT,mBAAmB,wRAAwR,mBAAmB,wDAAwD,kBAAkB,iOAAiO,cAAc,u4CAAu4C,2BAA2B,6FAA6F,2HAA2H,8FAA8F,2DAA2D,oGAAoG,8HAA8H,yK;;;;;;;;;;;;;;;;;;;;;;;ACA7kH;AACQ;AACyD;AAClC;AACN;AACjB;AACkC;AAQvG;IAQE,sCAAmB,sBAA8C,EAC7C,MAAiB,EACjB,cAA8B;QAF/B,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC7C,WAAM,GAAN,MAAM,CAAW;QACjB,mBAAc,GAAd,cAAc,CAAgB;QAChD,IAAI,CAAC,gBAAgB,GAAG,CAAC,YAAY,EAAE,WAAW,EAAE,WAAW,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;IACtF,CAAC;IAED,+CAAQ,GAAR;QACE,IAAI,CAAC,sBAAsB,CAAC,2BAA2B,CAAC,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAC3H,CAAC;IAED,qDAAc,GAAd;QACE,OAAO,IAAI,CAAC,sBAAsB,CAAC,cAAc,EAAE,CAAC;IACtD,CAAC;IAED,oDAAa,GAAb,UAAc,eAAe;QAC3B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0IAAmC,EAAE;YACpD,UAAU,EAAE,mBAAmB;YAC/B,MAAM,EAAE,OAAO;YACf,IAAI,EAAE,EAAE,eAAe,mBAAE;SAC1B,CAAC,CAAC;IAEL,CAAC;IAED,kEAA2B,GAA3B,UAA4B,EAAU,EAAE,GAAW;QACjD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yGAAsB,EAAE;YACvC,IAAI,EAAE,EAAE,EAAE,MAAE,GAAG,OAAE;SAClB,CAAC,CAAC;IACL,CAAC;IAED,kEAA2B,GAA3B,UAA4B,eAAgC;QAC1D,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mHAA4B,EAAE;YAC7C,UAAU,EAAE,mBAAmB;YAC/B,IAAI,EAAE,EAAE,eAAe,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,eAAe,CAAC,EAAE;SAC9D,CAAC,CAAC;IACL,CAAC;IAED,6CAAM,GAAN;QACE,IAAI,CAAC,sBAAsB,CAAC,sBAAsB,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC/F,CAAC;IAED,kDAAW,GAAX;QACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IA9CmB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;8DAAC;IACT;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;mEAAC;IANtC,4BAA4B;QALxC,+DAAS,CAAC;YACT,QAAQ,EAAE,2BAA2B;YACrC,0LAAqD;;SAEtD,CAAC;+EAS2C,mGAAsB;YACrC,2DAAS;YACD,kFAAc;OAVvC,4BAA4B,CAoDxC;IAAD,mCAAC;CAAA;AApDwC;;;;;;;;;;;;ACdzC,+DAA+D,2R;;;;;;;;;;;ACA/D,mHAAmH,QAAQ,4BAA4B,wHAAwH,QAAQ,2BAA2B,wHAAwH,QAAQ,4BAA4B,kHAAkH,QAAQ,0BAA0B,qHAAqH,QAAQ,iCAAiC,4GAA4G,QAAQ,uBAAuB,kHAAkH,QAAQ,2BAA2B,6GAA6G,QAAQ,4BAA4B,sHAAsH,QAAQ,sBAAsB,gT;;;;;;;;;;;;;;;;;;ACA3wC;AAEN;AACH;AAQjD;IAIE,6CAAmB,SAA4D,EACnC,IAAS;QADlC,cAAS,GAAT,SAAS,CAAmD;QACnC,SAAI,GAAJ,IAAI,CAAK;QACnD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;IAC9C,CAAC;IAED,sDAAQ,GAAR;IACA,CAAC;IAED,uDAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAdU,mCAAmC;QAL/C,+DAAS,CAAC;YACT,QAAQ,EAAE,mCAAmC;YAC7C,wOAA6D;;SAE9D,CAAC;QAMa,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY;OAJ/B,mCAAmC,CAgB/C;IAAD,0CAAC;CAAA;AAhB+C;;;;;;;;;;;;ACXhD,+DAA+D,uK;;;;;;;;;;;ACA/D,koE;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,sCAAQ,GAAR;IACA,CAAC;IALU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,6HAA0C;;SAE3C,CAAC;;OACW,mBAAmB,CAO/B;IAAD,0BAAC;CAAA;AAP+B;;;;;;;;;;;;ACPhC,+DAA+D,+N;;;;;;;;;;;ACA/D,uiCAAuiC,OAAO,uqC;;;;;;;;;;;;;;;;;;;;;;ACA9+B;AAEiB;AAChC;AACW;AACmB;AACN;AAOzE;IAOE,8BACU,SAA6C,EAC7C,eAAoC,EACpC,YAAiC,EAClC,gBAAkC;QAHjC,cAAS,GAAT,SAAS,CAAoC;QAC7C,oBAAe,GAAf,eAAe,CAAqB;QACpC,iBAAY,GAAZ,YAAY,CAAqB;QAClC,qBAAgB,GAAhB,gBAAgB,CAAkB;QACzC,IAAI,CAAC,QAAQ,GAAG,IAAI,yEAAQ,EAAE,CAAC;IACjC,CAAC;IAGD,4CAAa,GAAb,UAAc,KAAM;QAClB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;QACrC,IAAI,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YAC1B,IAAI,CAAC,KAAK,GAAI,CAAC,CAAC;SACjB;aAAM;YACL,IAAI,CAAC,KAAK,GAAI,CAAC,CAAC;SACjB;IACH,CAAC;IAED,0CAAW,GAAX;QAAA,iBAaC;QAZC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC;aAC5C,SAAS,CACR,aAAG;YACD,KAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC;YACxC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,oCAAoC,CAAC,CAAC;QAClE,CAAC,EACD,aAAG;YACD,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAChC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF,CAAC;IACN,CAAC;IAED,sCAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,sCAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,uCAAQ,GAAR;QACE,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC;QAC1C,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IApCD;QADC,kEAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;6DASzC;IAxBU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,0KAA6C;;SAE9C,CAAC;+EASqB,8DAAY;YACN,8FAAmB;YACtB,4FAAmB;YAChB,sFAAgB;OAXhC,oBAAoB,CAsDhC;IAAD,2BAAC;CAAA;AAtDgC;;;;;;;;;;;;ACbjC,+DAA+D,+N;;;;;;;;;;;ACA/D,ukCAAukC,OAAO,sqC;;;;;;;;;;;;;;;;;;;;;ACAtgC;AAGoB;AAC1B;AAEa;AACN;AAQzE;IAOE,+BACS,SAA8C,EACrB,IAAS,EACjC,eAAoC,EACpC,YAAiC,EAClC,gBAAkC;QAJlC,cAAS,GAAT,SAAS,CAAqC;QACrB,SAAI,GAAJ,IAAI,CAAK;QACjC,oBAAe,GAAf,eAAe,CAAqB;QACpC,iBAAY,GAAZ,YAAY,CAAqB;QAClC,qBAAgB,GAAhB,gBAAgB,CAAkB;QACzC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IAChC,CAAC;IAGD,6CAAa,GAAb,UAAc,KAAM;QAClB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;QACrC,IAAI,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YAC1B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;aAAM;YACL,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;IACH,CAAC;IAED,8CAAc,GAAd;QAAA,iBAUC;QATC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC;aAClE,SAAS,CAAC,aAAG;YACZ,KAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC;YACxC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,oCAAoC,CAAC,CAAC;QAClE,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACT,CAAC;IAED,uCAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,uCAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,wCAAQ,GAAR;QACE,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC;QAC1C,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAjCD;QADC,kEAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;8DASzC;IAzBU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,6KAA8C;;SAE/C,CAAC;QAUG,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY,UAEL,2FAAmB;YACtB,4FAAmB;YAChB,sFAAgB;OAZhC,qBAAqB,CAoDjC;IAAD,4BAAC;CAAA;AApDiC;;;;;;;;;;;;ACflC,+DAA+D,2M;;;;;;;;;;;ACA/D,yyBAAyyB,kBAAkB,yNAAyN,uBAAuB,iOAAiO,wBAAwB,6MAA6M,yBAAyB,m+BAAm+B,2BAA2B,iFAAiF,6CAA6C,oGAAoG,kGAAkG,qK;;;;;;;;;;;;;;;;;;;;;;ACA/wF;AACoB;AACZ;AACU;AACkB;AAEf;AAOlF;IAQE,+BAAmB,eAAoC,EACnC,MAAiB;QADlB,oBAAe,GAAf,eAAe,CAAqB;QACnC,WAAM,GAAN,MAAM,CAAW;QACnC,IAAI,CAAC,gBAAgB,GAAG,CAAC,UAAU,EAAE,eAAe,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,SAAS,CAAC,CAAC;IACxG,CAAC;IAED,wCAAQ,GAAR;QACE,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACnE,CAAC;IAED,iDAAiB,GAAjB;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2FAAoB,EAAE;YACrC,UAAU,EAAE,mBAAmB;SAChC,CAAC,CAAC;IACL,CAAC;IAED,oDAAoB,GAApB,UAAqB,EAAU,EAAE,GAAW;QAE1C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sGAAsB,EAAE;YACvC,IAAI,EAAE,EAAE,EAAE,MAAE,GAAG,OAAE;SAClB,CAAC,CAAC;IACL,CAAC;IAED,oDAAoB,GAApB,UAAqB,QAAkB;QACrC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,8FAAqB,EAAE;YACtC,UAAU,EAAE,mBAAmB;YAC/B,IAAI,EAAE,EAAE,QAAQ,EAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE;SACjD,CAAC,CAAC;IACL,CAAC;IAED,sCAAM,GAAN;QACE,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IACjF,CAAC;IAED,2CAAW,GAAX;QACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAvCmB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;uDAAC;IACT;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;4DAAC;IANtC,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,8JAA8C;;SAE/C,CAAC;+EASoC,8FAAmB;YAC3B,2DAAS;OAT1B,qBAAqB,CA8CjC;IAAD,4BAAC;CAAA;AA9CiC;;;;;;;;;;;;ACblC,+DAA+D,mM;;;;;;;;;;;ACA/D,wiHAAwiH,cAAc,+U;;;;;;;;;;;;;;;;;;;;;ACApgH;AACJ;AACG;AACc;AACgB;AAQ/E;IASE,0BAAoB,SAAyC,EACzC,WAAwB,EACxB,YAAiC;QAFjC,cAAS,GAAT,SAAS,CAAgC;QACzC,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAqB;QACnD,IAAI,CAAC,IAAI,GAAG,IAAI,2DAAI,EAAE,CAAC;QACvB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACnB,CAAC;IAED,mCAAQ,GAAR;QACE,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;IACH,CAAC;IAED,kCAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,kCAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,kCAAO,GAAP;QAAA,iBASC;QARC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,aAAG;YAC/C,KAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;YAChC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;QACxD,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAxCU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,iJAAwC;;SAEzC,CAAC;+EAU+B,8DAAY;YACV,4EAAW;YACV,4FAAmB;OAX1C,gBAAgB,CA0C5B;IAAD,uBAAC;CAAA;AA1C4B;;;;;;;;;;;;ACZ7B,+DAA+D,uM;;;;;;;;;;;ACA/D,s5H;;;;;;;;;;;;;;;;;;;;;ACA0D;AAEQ;AACH;AACM;AACU;AAQ/E;IAKE,2BAAmB,SAA0C,EACjB,IAAS,EACjC,WAAwB,EACxB,cAA8B,EAC9B,YAAiC;QAJlC,cAAS,GAAT,SAAS,CAAiC;QACjB,SAAI,GAAJ,IAAI,CAAK;QACjC,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAqB;QACnD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,oCAAQ,GAAR;QACE,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;IACH,CAAC;IAED,mCAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,mCAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,sCAAU,GAAV;QAAA,iBASC;QARC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,aAAG;YACjE,KAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;YAChC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;QACxD,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IArCU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,oJAAyC;;SAE1C,CAAC;QAOa,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY,UAET,4EAAW;YACR,kFAAc;YAChB,4FAAmB;OAT1C,iBAAiB,CAuC7B;IAAD,wBAAC;CAAA;AAvC6B;;;;;;;;;;;;ACb9B,+DAA+D,uL;;;;;;;;;;;ACA/D,o0BAAo0B,kBAAkB,iOAAiO,kBAAkB,qOAAqO,oBAAoB,oOAAoO,oBAAoB,82CAA82C,2BAA2B,mFAAmF,qCAAqC,0GAA0G,kFAAkF,6K;;;;;;;;;;;;;;;;;;;;;;;ACA1rG;AACQ;AACN;AAEE;AAC2B;AACD;AAEvB;AAOpE;IAUE,2BAAmB,WAAwB,EACvB,MAAiB;QADlB,gBAAW,GAAX,WAAW,CAAa;QACvB,WAAM,GAAN,MAAM,CAAW;QACnC,IAAI,CAAC,gBAAgB,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,YAAY,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC;IAC1F,CAAC;IAED,oCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAC3D,CAAC;IAED,yCAAa,GAAb;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6EAAgB,EAAE;YACjC,UAAU,EAAE,mBAAmB;SAChC,CAAC,CAAC;IACL,CAAC;IAED,4CAAgB,GAAhB,UAAiB,EAAU,EAAE,GAAW;QACtC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yGAAsB,EAAE;YACvC,IAAI,EAAE,EAAE,EAAE,MAAE,GAAG,OAAE;SAClB,CAAC,CAAC;IACL,CAAC;IAED,yCAAa,GAAb,UAAc,IAAI;QAChB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uGAAwB,EAAE;YACzC,UAAU,EAAE,mBAAmB;YAC/B,IAAI,EAAE,EAAE,IAAI,QAAE;SACf,CAAC,CAAC;IAEL,CAAC;IAED,4CAAgB,GAAhB,UAAiB,IAAU;QACzB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gFAAiB,EAAE;YAClC,UAAU,EAAE,mBAAmB;YAC/B,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE;SACxC,CAAC,CAAC;IACL,CAAC;IAED,kCAAM,GAAN;QACE,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IACzE,CAAC;IAED,uCAAW,GAAX;QACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IA9CmB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;mDAAC;IACT;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;wDAAC;IARtC,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,0IAAyC;;SAE1C,CAAC;+EAWgC,4EAAW;YACf,2DAAS;OAX1B,iBAAiB,CAuD7B;IAAD,wBAAC;CAAA;AAvD6B;;;;;;;;;;;;ACf9B,+DAA+D,2N;;;;;;;;;;;ACA/D,iHAAiH,QAAQ,eAAe,8GAA8G,QAAQ,eAAe,gHAAgH,QAAQ,iBAAiB,+GAA+G,QAAQ,iBAAiB,6GAA6G,QAAQ,eAAe,2GAA2G,QAAQ,aAAa,wGAAwG,QAAQ,UAAU,uHAAuH,QAAQ,sBAAsB,6GAA6G,QAAQ,aAAa,2GAA2G,QAAQ,WAAW,4GAA4G,QAAQ,YAAY,4S;;;;;;;;;;;;;;;;;;ACAv3C;AAEQ;AAOlE;IAIE,kCAAmB,SAAiD,EACxB,IAAS;QADlC,cAAS,GAAT,SAAS,CAAwC;QACxB,SAAI,GAAJ,IAAI,CAAK;QACjD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACvB,CAAC;IAEJ,2CAAQ,GAAR;IACA,CAAC;IAED,4CAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAdU,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,4KAAiD;;SAElD,CAAC;QAMa,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY;OAJ/B,wBAAwB,CAgBpC;IAAD,+BAAC;CAAA;AAhBoC;;;;;;;;;;;;ACTrC,+DAA+D,2M;;;;;;;;;;;ACA/D,+9C;;;;;;;;;;;;;;;;;;;;;ACA6D;AACL;AACgB;AACC;AACM;AAQ/E;IAOE,+BACU,SAA8C,EAC9C,gBAAkC,EAClC,YAAiC;QAFjC,cAAS,GAAT,SAAS,CAAqC;QAC9C,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,iBAAY,GAAZ,YAAY,CAAqB;QAEzC,IAAI,CAAC,SAAS,GAAG,IAAI,qEAAS,EAAE,CAAC;QACjC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IAChB,CAAC;IAEF,wCAAQ,GAAR;QACE,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;IACH,CAAC;IAED,uCAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,uCAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,4CAAY,GAAZ;QAAA,iBAUC;QATC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC5B,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,aAAG;YAC9D,KAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC;YAC1C,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,+BAA+B,CAAC,CAAC;QAC7D,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAnCmB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;uDAAC;IACT;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;4DAAC;IANtC,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,2JAA6C;;SAE9C,CAAC;+EASqB,8DAAY;YACL,sFAAgB;YACpB,4FAAmB;OAVhC,qBAAqB,CAyCjC;IAAD,4BAAC;CAAA;AAzCiC;;;;;;;;;;;;ACZlC,+DAA+D,mL;;;;;;;;;;;ACA/D,g1BAAg1B,aAAa,iOAAiO,qBAAqB,2NAA2N,wBAAwB,y7BAAy7B,2BAA2B,mFAAmF,+CAA+C,0GAA0G,sGAAsG,+K;;;;;;;;;;;;;;;;;;;;;;;;ACA/iF;AACQ;AACI;AACO;AACY;AAEH;AACA;AACf;AAQ1E;IAME,4BAAmB,gBAAkC,EACjC,MAAiB,EACjB,WAAiC,EACjC,aAAyC;QAH1C,qBAAgB,GAAhB,gBAAgB,CAAkB;QACjC,WAAM,GAAN,MAAM,CAAW;QACjB,gBAAW,GAAX,WAAW,CAAsB;QACjC,kBAAa,GAAb,aAAa,CAA4B;QAC3D,IAAI,CAAC,gBAAgB,GAAG,CAAC,WAAW,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC;IACjE,CAAC;IAEF,qCAAQ,GAAR;QACE,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IAED,+CAAkB,GAAlB;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4FAAqB,EAAE;YACtC,UAAU,EAAE,mBAAmB;SAChC,CAAC,CAAC;IACL,CAAC;IAED,kDAAqB,GAArB,UAAsB,EAAU,EAAE,GAAW;QAA7C,iBAQC;QAPC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC;YACnC,KAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;YAC5B,KAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;QAChC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yGAAsB,EAAE;YACvC,IAAI,EAAE,EAAE,EAAE,MAAE,GAAG,OAAE;SAClB,CAAC,CAAC;IACL,CAAC;IAED,kDAAqB,GAArB,UAAsB,SAAoB;QAA1C,iBASC;QARC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC;YACnC,KAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;YAC5B,KAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;QAChC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qGAAwB,EAAE;YACzC,UAAU,EAAE,mBAAmB;YAC/B,IAAI,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE;SAClD,CAAC,CAAC;IACL,CAAC;IAED,mCAAM,GAAN;QACE,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IACnF,CAAC;IAED,wCAAW,GAAX;QACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IA/CmB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;oDAAC;IACT;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;yDAAC;IALtC,kBAAkB;QAN9B,+DAAS,CAAC;YACT,SAAS,EAAE,CAAC,sGAA0B,EAAE,uFAAoB,CAAC;YAC7D,QAAQ,EAAE,eAAe;YACzB,qIAAyC;;SAE1C,CAAC;+EAOqC,sFAAgB;YACzB,2DAAS;YACJ,uFAAoB;YAClB,sGAA0B;OATlD,kBAAkB,CAqD9B;IAAD,yBAAC;CAAA;AArD8B;;;;;;;;;;;;AChB/B,+DAA+D,mN;;;;;;;;;;;ACA/D,09C;;;;;;;;;;;;;;;;;;;;;;ACA0D;AAEQ;AACO;AACM;AAEU;AACf;AAQ1E;IAIE,kCACS,SAAiD,EACxB,IAAS,EACjC,gBAAkC,EAClC,YAAiC,EACjC,IAAgC,EAChC,WAAiC;QALlC,cAAS,GAAT,SAAS,CAAwC;QACxB,SAAI,GAAJ,IAAI,CAAK;QACjC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,iBAAY,GAAZ,YAAY,CAAqB;QACjC,SAAI,GAAJ,IAAI,CAA4B;QAChC,gBAAW,GAAX,WAAW,CAAsB;QACzC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IAChB,CAAC;IAEF,2CAAQ,GAAR;QACE,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;IACH,CAAC;IAED,0CAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,0CAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,kDAAe,GAAf;QAAA,iBAWC;QAVC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,aAAG;YACrF,KAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC;YAC1C,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,+BAA+B,CAAC,CAAC;QAC7D,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IAC9B,CAAC;IAxCU,wBAAwB;QANpC,+DAAS,CAAC;YACT,SAAS,EAAE,CAAC,sGAA0B,EAAE,uFAAoB,CAAC;YAC7D,QAAQ,EAAE,sBAAsB;YAChC,oKAAgD;;SAEjD,CAAC;QAOG,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY,UAEJ,sFAAgB;YACpB,4FAAmB;YAC3B,sGAA0B;YACnB,uFAAoB;OAVhC,wBAAwB,CA0CpC;IAAD,+BAAC;CAAA;AA1CoC;;;;;;;;;;;;ACfrC,+DAA+D,mN;;;;;;;;;;;ACA/D,qsDAAqsD,OAAO,k3D;;;;;;;;;;;;;;;;;;;;;;ACA/oD;AACH;AACc;AAEO;AACV;AACI;AASzE;IAQE,6BACU,SAA4C,EAC5C,cAA8B,EAC9B,YAAiC,EAClC,gBAAkC;QAHjC,cAAS,GAAT,SAAS,CAAmC;QAC5C,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAqB;QAClC,qBAAgB,GAAhB,gBAAgB,CAAkB;QACzC,IAAI,CAAC,OAAO,GAAG,IAAI,uEAAO,EAAE,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,sCAAQ,GAAR;QACE,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;QACD,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC;IAC5C,CAAC;IACD,qCAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,qCAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,wCAAU,GAAV;QAAA,iBAUC;QATC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1B,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,aAAG;YACxD,KAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC;YACtC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;QAC3D,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAnCmB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;qDAAC;IACT;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;0DAAC;IAPtC,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,gKAA2C;;SAE5C,CAAC;+EAUqB,8DAAY;YACP,kFAAc;YAChB,4FAAmB;YAChB,sFAAgB;OAZhC,mBAAmB,CA4C/B;IAAD,0BAAC;CAAA;AA5C+B;;;;;;;;;;;;ACfhC,+DAA+D,mM;;;;;;;;;;;ACA/D,g0BAAg0B,cAAc,yNAAyN,iBAAiB,6NAA6N,mBAAmB,2NAA2N,kBAAkB,2yCAA2yC,2BAA2B,mFAAmF,2CAA2C,0GAA0G,8FAA8F,+K;;;;;;;;;;;;;;;;;;;;;;;;;;ACApmG;AACQ;AACK;AACuB;AACd;AAEd;AAC+B;AAC3B;AACL;AACH;AASjE;IAQE,8BAAmB,cAA8B,EAC7B,MAAiB,EACjB,gBAAkC,EAClC,YAA0B,EAC1B,IAAwB;QAJzB,mBAAc,GAAd,cAAc,CAAgB;QAC7B,WAAM,GAAN,MAAM,CAAW;QACjB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,SAAI,GAAJ,IAAI,CAAoB;QAC1C,IAAI,CAAC,gBAAgB,GAAG,CAAC,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;IAClF,CAAC;IAED,uCAAQ,GAAR;QACE,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACjE,CAAC;IAED,4CAAa,GAAb,UAAc,OAAO;QACnB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gHAA2B,EAAE;YAC5C,UAAU,EAAE,mBAAmB;YAC/B,MAAM,EAAE,OAAO;YACf,IAAI,EAAE,EAAE,OAAO,WAAE;SAClB,CAAC,CAAC;IAEL,CAAC;IAED,+CAAgB,GAAhB;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sFAAmB,EAAE;YACpC,UAAU,EAAE,mBAAmB;SAChC,CAAC,CAAC;IACL,CAAC;IAED,kDAAmB,GAAnB,UAAoB,EAAU,EAAE,GAAW;QAA3C,iBAOC;QANC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC;YACnC,KAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sGAAsB,EAAE;YACvC,IAAI,EAAE,EAAE,EAAE,MAAE,GAAG,OAAE;SAClB,CAAC,CAAC;IACL,CAAC;IAED,kDAAmB,GAAnB,UAAoB,OAAgB;QAApC,iBAWC;QAVC,IAAI,GAAW,CAAC;QAChB,GAAG,GAAG,OAAO,CAAC,SAAS,CAAC;QACxB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,aAAG;YAC/C,OAAO,CAAC,SAAS,GAAG,GAAG,CAAC,GAAG,CAAC;YAC5B,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+FAAsB,EAAE;gBACvC,UAAU,EAAE,mBAAmB;gBAC/B,IAAI,EAAE,EAAE,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE;aAC9C,CAAC,CAAC;YACH,OAAO,CAAC,SAAS,GAAG,GAAG,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAM,GAAN;QACE,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC/E,CAAC;IAED,0CAAW,GAAX;QACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IA3DmB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;sDAAC;IACT;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;2DAAC;IANtC,oBAAoB;QANhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,sJAA4C;YAE5C,SAAS,EAAE,CAAC,iFAAkB,CAAC;;SAChC,CAAC;+EASmC,kFAAc;YACrB,2DAAS;YACC,sFAAgB;YACpB,+EAAY;YACpB,iFAAkB;OAZjC,oBAAoB,CAiEhC;IAAD,2BAAC;CAAA;AAjEgC;;;;;;;;;;;;ACnBjC,+DAA+D,2O;;;;;;;;;;;ACA/D,8GAA8G,QAAQ,mBAAmB,qGAAqG,QAAQ,eAAe,qGAAqG,QAAQ,eAAe,oGAAoG,QAAQ,cAAc,0N;;;;;;;;;;;;;;;;;;ACAjc;AACQ;AAQlE;IAGE,qCAAmB,SAAoD,EAC3B,IAAS;QADlC,cAAS,GAAT,SAAS,CAA2C;QAC3B,SAAI,GAAJ,IAAI,CAAK;QACvC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;IAC9B,CAAC;IAEb,8CAAQ,GAAR;IACA,CAAC;IAED,+CAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAbU,2BAA2B;QALvC,+DAAS,CAAC;YACT,QAAQ,EAAE,0BAA0B;YACpC,2LAAoD;;SAErD,CAAC;QAKa,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY;OAH/B,2BAA2B,CAcvC;IAAD,kCAAC;CAAA;AAduC;;;;;;;;;;;;ACTxC,+DAA+D,2N;;;;;;;;;;;ACA/D,+sDAA+sD,OAAO,o2D;;;;;;;;;;;;;;;;;;;;;;;ACA5pD;AAEQ;AACG;AACU;AAEN;AACL;AACH;AASjE;IAKE,gCACS,SAA+C,EACtB,IAAS,EACjC,cAA8B,EAC9B,YAA0B,EAC1B,YAAiC,EAClC,gBAAkC,EACjC,IAAwB;QANzB,cAAS,GAAT,SAAS,CAAsC;QACtB,SAAI,GAAJ,IAAI,CAAK;QACjC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,iBAAY,GAAZ,YAAY,CAAqB;QAClC,qBAAgB,GAAhB,gBAAgB,CAAkB;QACjC,SAAI,GAAJ,IAAI,CAAoB;QAChC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,yCAAQ,GAAR;QACE,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;QACD,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC;IAC5C,CAAC;IACD,wCAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,wCAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,8CAAa,GAAb;QAAA,iBAoBC;QAnBC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YAC9E,KAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC;YACtC,KAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,aAAG;gBACjE,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;oBACpB,GAAG,CAAC,OAAO,CAAC,UAAC,OAAc;wBACzB,OAAO,CAAC,SAAS,GAAG,KAAI,CAAC,OAAO,CAAC,SAAS,CAAC;wBAC3C,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,gBAAM;4BACjE,KAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;wBACxB,CAAC,CAAC,CAAC;oBACL,CAAC,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;QAC3D,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IAEP,CAAC;IAnDU,sBAAsB;QANlC,+DAAS,CAAC;YACT,SAAS,EAAE,CAAC,iFAAkB,CAAC;YAC/B,QAAQ,EAAE,oBAAoB;YAC9B,yKAA8C;;SAE/C,CAAC;QAQG,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY,UAEN,kFAAc;YAChB,8EAAY;YACZ,4FAAmB;YAChB,sFAAgB;YAC3B,iFAAkB;OAZvB,sBAAsB,CAsDlC;IAAD,6BAAC;CAAA;AAtDkC;;;;;;;;;;;;ACjBnC,+DAA+D,+M;;;;;;;;;;;ACA/D,g0J;;;;;;;;;;;;;;;;;;;;;ACAkD;AACM;AACP;AAEkB;AACY;AAO/E;IAKE,4BAAoB,SAA2C,EAC3C,aAA4B,EAC5B,YAAiC;QAFjC,cAAS,GAAT,SAAS,CAAkC;QAC3C,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAqB;QACnD,IAAI,CAAC,MAAM,GAAG,IAAI,qEAAM,EAAE,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,qCAAQ,GAAR;QACE,IAAK,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,EAAG;YACrC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;IACH,CAAC;IAED,oCAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,oCAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,sCAAS,GAAT;QAAA,iBASC;QARC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;YACrD,KAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;YACpC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC;QAC1D,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAnCU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,2JAA0C;;SAE3C,CAAC;+EAM+B,8DAAY;YACR,gFAAa;YACd,4FAAmB;OAP1C,kBAAkB,CAsC9B;IAAD,yBAAC;CAAA;AAtC8B;;;;;;;;;;;;ACZ/B,2CAA2C,mBAAmB,oBAAoB,qBAAqB,sBAAsB,uBAAuB,SAAS,KAAK,mDAAmD,ulB;;;;;;;;;;;ACArN,m3BAAm3B,gBAAgB,kNAAkN,cAAc,mOAAmO,iBAAiB,oNAAoN,eAAe,wyCAAwyC,2BAA2B,mFAAmF,yCAAyC,0GAA0G,0FAA0F,+K;;;;;;;;;;;;;;;;;;;;;;;ACAhoG;AACM;AACE;AACQ;AACN;AAC0B;AAEjB;AAOhF;IAQE,6BAAmB,aAA4B,EAAU,MAAiB;QAAvD,kBAAa,GAAb,aAAa,CAAe;QAAU,WAAM,GAAN,MAAM,CAAW;QACxE,IAAI,CAAC,gBAAgB,GAAG,CAAC,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;IAC5E,CAAC;IAED,sCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAC/D,CAAC;IAED,2CAAa,GAAb,UAAc,MAAM;QAClB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yFAAoB,EAAE;YACrC,UAAU,EAAE,mBAAmB;YAC/B,IAAI,EAAE,EAAE,MAAM,UAAE;SACjB,CAAC,CAAC;IAEL,CAAC;IAED,6CAAe,GAAf;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mFAAkB,EAAE;YACnC,UAAU,EAAE,mBAAmB;SAChC,CAAC,CAAC;IACL,CAAC;IAED,gDAAkB,GAAlB,UAAmB,EAAU,EAAE,GAAW;QAExC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sGAAsB,EAAE;YACvC,IAAI,EAAE,EAAE,EAAE,MAAE,GAAG,OAAE;SAClB,CAAC,CAAC;IACL,CAAC;IAED,gDAAkB,GAAlB,UAAmB,MAAc;QAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4FAAqB,EAAE;YACtC,UAAU,EAAE,mBAAmB;YAC/B,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE;SAC5C,CAAC,CAAC;IACL,CAAC;IAED,oCAAM,GAAN;QACE,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC7E,CAAC;IAED,yCAAW,GAAX;QACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IA9CmB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;qDAAC;IACT;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;0DAAC;IANtC,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,kJAA2C;;SAE5C,CAAC;+EASkC,gFAAa,EAAkB,2DAAS;OAR/D,mBAAmB,CAqD/B;IAAD,0BAAC;CAAA;AArD+B;;;;;;;;;;;;ACdhC,+DAA+D,mN;;;;;;;;;;;ACA/D,6HAA6H,QAAQ,eAAe,iHAAiH,QAAQ,aAAa,mHAAmH,QAAQ,cAAc,kHAAkH,QAAQ,aAAa,mHAAmH,QAAQ,qBAAqB,oHAAoH,QAAQ,eAAe,yHAAyH,QAAQ,uBAAuB,uHAAuH,QAAQ,cAAc,iHAAiH,MAAM,MAAM,YAAY,iIAAiI,QAAQ,sBAAsB,8T;;;;;;;;;;;;;;;;;;ACAx1C;AACQ;AAQlE;IAIE,8BAAmB,SAA6C,EACpB,IAAS;QADlC,cAAS,GAAT,SAAS,CAAoC;QACpB,SAAI,GAAJ,IAAI,CAAK;QACjD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IAC3B,CAAC;IAEJ,uCAAQ,GAAR;IACA,CAAC;IAED,wCAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAdU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,iKAA4C;;SAE7C,CAAC;QAMa,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY;OAJ/B,oBAAoB,CAgBhC;IAAD,2BAAC;CAAA;AAhBgC;;;;;;;;;;;;ACTjC,+DAA+D,uN;;;;;;;;;;;ACA/D,y5J;;;;;;;;;;;;;;;;;;;;ACA0D;AACQ;AAGC;AACY;AAO/E;IAKE,+BAAmB,SAA8C,EACrB,IAAS,EACjC,aAA4B,EAC5B,YAAiC;QAHlC,cAAS,GAAT,SAAS,CAAqC;QACrB,SAAI,GAAJ,IAAI,CAAK;QACjC,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAqB;QACnD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,wCAAQ,GAAR;QACE,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;IACH,CAAC;IAED,uCAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,uCAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,4CAAY,GAAZ;QAAA,iBASC;QARC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;YACzE,KAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;YACpC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC;QAC1D,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IApCU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,oKAA6C;;SAE9C,CAAC;QAOa,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY,UAEP,gFAAa;YACd,4FAAmB;OAR1C,qBAAqB,CAqCjC;IAAD,4BAAC;CAAA;AArCiC;;;;;;;;;;;;ACZlC,+DAA+D,+O;;;;;;;;;;;ACA/D,64D;;;;;;;;;;;;;;;;;;;;;ACAgE;AACI;AACnB;AAC8B;AACA;AAQ/E;IAOE,kCACU,SAAiD,EACjD,mBAAwC,EACxC,YAAiC;QAFjC,cAAS,GAAT,SAAS,CAAwC;QACjD,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,iBAAY,GAAZ,YAAY,CAAqB;QACzC,IAAI,CAAC,YAAY,GAAG,IAAI,iFAAY,EAAE,CAAC;QACvC,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,kDAAe,GAAf;QAAA,iBAUC;QATC,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC;aACxD,SAAS,CACR,aAAG;YACD,KAAI,CAAC,mBAAmB,CAAC,oBAAoB,EAAE,CAAC;YAChD,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC;QAChE,CAAC,EACD,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CACxB,CAAC;IACN,CAAC;IAED,0CAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,0CAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAGC,gDAAa,GAAb,UAAc,KAAM;QACd,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;QACrC,IAAI,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YAC1B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;aAAM;YACL,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;IACP,CAAC;IAEH,2CAAQ,GAAR;IACA,CAAC;IAXC;QADD,kEAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;iEASvC;IA5CQ,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,yLAAgD;;SAEjD,CAAC;+EASqB,8DAAY;YACF,4FAAmB;YAC1B,4FAAmB;OAVhC,wBAAwB,CAiDpC;IAAD,+BAAC;CAAA;AAjDoC;;;;;;;;;;;;ACZrC,+DAA+D,+O;;;;;;;;;;;ACA/D,w7D;;;;;;;;;;;;;;;;;;;;;ACAwE;AAEO;AACb;AAEa;AACX;AAQpE;IAOE,mCACS,SAAkD,EACzB,IAAS,EACjC,mBAAwC,EACxC,YAAiC,EACjC,IAAwB;QAJzB,cAAS,GAAT,SAAS,CAAyC;QACzB,SAAI,GAAJ,IAAI,CAAK;QACjC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,iBAAY,GAAZ,YAAY,CAAqB;QACjC,SAAI,GAAJ,IAAI,CAAoB;QAChC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACtC,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,sDAAkB,GAAlB;QAAA,iBAWC;QAVC,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC;aAClF,SAAS,CAAC,aAAG;YACZ,KAAI,CAAC,mBAAmB,CAAC,oBAAoB,EAAE,CAAC;YAChD,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC;QAChE,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;QACP,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;IACvB,CAAC;IAGD,iDAAa,GAAb,UAAc,KAAM;QAClB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;QACrC,IAAI,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YAC1B,IAAI,CAAC,KAAK,GAAI,CAAC,CAAC;SACjB;aAAM;YACL,IAAI,CAAC,KAAK,GAAI,CAAC,CAAC;SACjB;IACH,CAAC;IAGD,2CAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,2CAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,4CAAQ,GAAR;IACA,CAAC;IApBD;QADC,kEAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;kEASzC;IAvCU,yBAAyB;QANrC,+DAAS,CAAC;YACT,SAAS,EAAE,CAAC,iFAAkB,CAAC;YAC/B,QAAQ,EAAE,uBAAuB;YACjC,4LAAiD;;SAElD,CAAC;QAUG,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY,UAED,4FAAmB;YAC1B,4FAAmB;YAC3B,iFAAkB;OAZvB,yBAAyB,CAqDrC;IAAD,gCAAC;CAAA;AArDqC;;;;;;;;;;;;ACdtC,+DAA+D,uN;;;;;;;;;;;ACA/D,y1BAAy1B,mBAAmB,qMAAqM,iBAAiB,0NAA0N,4BAA4B,wNAAwN,0BAA0B,2hCAA2hC,2BAA2B,iFAAiF,qDAAqD,uFAAuF,kHAAkH,6K;;;;;;;;;;;;;;;;;;;;;;;ACAp2F;AACI;AACV;AACoB;AACc;AAEX;AACxB;AAQpE;IAUE,mCACS,mBAAwC,EACvC,MAAiB,EACjB,IAAwB;QAFzB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACvC,WAAM,GAAN,MAAM,CAAW;QACjB,SAAI,GAAJ,IAAI,CAAoB;QAChC,IAAI,CAAC,aAAa,EAAE,CAAC;IACrB,CAAC;IAGH,iDAAa,GAAb,UAAc,KAAM;QAClB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;QACrC,IAAI,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YAC1B,IAAI,CAAC,gBAAgB,GAAI,CAAC,WAAW,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;SAC9D;aAAM;YACL,IAAI,CAAC,gBAAgB,GAAI,CAAC,WAAW,EAAE,SAAS,EAAE,oBAAoB,EAAE,kBAAkB,EAAE,SAAS,CAAC,CAAC;SACxG;IACH,CAAC;IAED,4CAAQ,GAAR;QACE,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAC3E,CAAC;IAED,yDAAqB,GAArB;QAAA,iBAOC;QANC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC;YACnC,KAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qGAAwB,EAAE;YACzC,UAAU,EAAE,mBAAmB;SAChC,CAAC,CAAC;IACL,CAAC;IAED,4DAAwB,GAAxB,UAAyB,EAAU,EAAE,GAAW;QAAhD,iBAQC;QANC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC;YACnC,KAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oHAAsB,EAAE;YACvC,IAAI,EAAE,EAAE,EAAE,MAAE,GAAG,OAAE;SAClB,CAAC,CAAC;IACL,CAAC;IAED,4DAAwB,GAAxB,UAAyB,YAA0B;QACjD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wGAAyB,EAAE;YAC1C,UAAU,EAAE,mBAAmB;YAC/B,IAAI,EAAE,EAAE,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,YAAY,CAAC,EAAE;SACxD,CAAC,CAAC;IACL,CAAC;IAED,0CAAM,GAAN;QACE,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IACzF,CAAC;IAED,+CAAW,GAAX;QACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IA1DmB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;2DAAC;IACT;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;gEAAC;IAUjD;QADC,kEAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;kEASzC;IA1BU,yBAAyB;QANrC,+DAAS,CAAC;YACT,SAAS,EAAE,CAAC,iFAAkB,CAAC;YAC/B,QAAQ,EAAE,uBAAuB;YACjC,0KAAiD;;SAElD,CAAC;+EAY8B,4FAAmB;YAC/B,2DAAS;YACX,iFAAkB;OAbvB,yBAAyB,CAmErC;IAAD,gCAAC;CAAA;AAnEqC;;;;;;;;;;;;ACftC,+DAA+D,uM;;;;;;;;;;;ACA/D,g6CAAg6C,QAAQ,yhBAAyhB,aAAa,giB;;;;;;;;;;;;;;;;;;;;;;;;ACA94D;AACV;AACL;AACgB;AACc;AAEV;AACU;AAEN;AAOzE;IAUE,2BACU,SAA0C,EAC1C,YAA0B,EAC3B,cAA8B,EAC9B,gBAAkC,EAClC,mBAAwC,EACvC,YAAiC;QALjC,cAAS,GAAT,SAAS,CAAiC;QAC1C,iBAAY,GAAZ,YAAY,CAAc;QAC3B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACvC,iBAAY,GAAZ,YAAY,CAAqB;QACzC,IAAI,CAAC,KAAK,GAAG,IAAI,mEAAK,EAAE,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAGD,yCAAa,GAAb,UAAc,KAAM;QAClB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;QACrC,IAAI,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YAC1B,IAAI,CAAC,KAAK,GAAI,CAAC,CAAC;SACjB;aAAM;YACL,IAAI,CAAC,KAAK,GAAI,CAAC,CAAC;SACjB;IACH,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAgBC;QAfC,IAAM,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;QAC5B,IAAM,IAAI,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACjD,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,aAAG;YAClE,KAAI,CAAC,KAAK,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC;YACrC,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAI,CAAC,KAAK,CAAC;iBACrC,SAAS,CACR,aAAG;gBACD,KAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;gBACjC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;YACzD,CAAC,EACD,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CACxB,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,mCAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,oCAAQ,GAAR;QACE,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YACnC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;QACD,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC;QACtC,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,EAAE,CAAC;IAClD,CAAC;IA1CD;QADC,kEAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;0DASzC;IAjCU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,sJAAyC;;SAE1C,CAAC;+EAYqB,8DAAY;YACT,8EAAY;YACX,kFAAc;YACZ,sFAAgB;YACb,4FAAmB;YACzB,4FAAmB;OAhBhC,iBAAiB,CAqE7B;IAAD,wBAAC;CAAA;AArE6B;;;;;;;;;;;;AChB9B,+DAA+D,2M;;;;;;;;;;;ACA/D,+6CAA+6C,OAAO,mgBAAmgB,QAAQ,yhBAAyhB,aAAa,giB;;;;;;;;;;;;;;;;;;;;;;;ACA/5E;AAEN;AACD;AACc;AAEN;AACJ;AACU;AAO/E;IAOE,4BACS,SAA2C,EAClB,IAAS,EACjC,YAA0B,EAC1B,YAAiC,EAClC,gBAAkC,EAClC,cAA8B,EAC9B,mBAAwC;QANxC,cAAS,GAAT,SAAS,CAAkC;QAClB,SAAI,GAAJ,IAAI,CAAK;QACjC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,iBAAY,GAAZ,YAAY,CAAqB;QAClC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,wBAAmB,GAAnB,mBAAmB,CAAqB;QAC/C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAGD,0CAAa,GAAb,UAAc,KAAM;QAClB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;QACrC,IAAI,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YAC1B,IAAI,CAAC,KAAK,GAAI,CAAC,CAAC;SACjB;aAAM;YACL,IAAI,CAAC,KAAK,GAAI,CAAC,CAAC;SACjB;IACH,CAAC;IAED,wCAAW,GAAX;QAAA,iBAeC;QAdC,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,aAAG;YAClE,KAAI,CAAC,KAAK,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC;YACrC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YAE3B,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAI,CAAC,KAAK,CAAC,GAAG,EAAE,KAAI,CAAC,KAAK,CAAC;iBACxD,SAAS,CAAC,aAAG;gBACZ,KAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;gBACjC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;YACzD,CAAC,EACC,aAAG;gBACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,oCAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,qCAAQ,GAAR;QACE,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC;QACtC,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,EAAE,CAAC;IAClD,CAAC;IAtCD;QADC,kEAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;2DASzC;IA5BU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,yJAA0C;;SAE3C,CAAC;QAUG,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY,UAER,8EAAY;YACZ,4FAAmB;YAChB,sFAAgB;YAClB,kFAAc;YACT,4FAAmB;OAdtC,kBAAkB,CA4D9B;IAAD,yBAAC;CAAA;AA5D8B;;;;;;;;;;;;ACf/B,+DAA+D,2L;;;;;;;;;;;ACA/D,syBAAsyB,mBAAmB,0MAA0M,qBAAqB,0MAA0M,qBAAqB,qMAAqM,mBAAmB,iMAAiM,iBAAiB,2MAA2M,sBAAsB,o9BAAo9B,2BAA2B,iFAAiF,uCAAuC,oGAAoG,sFAAsF,qK;;;;;;;;;;;;;;;;;;;;;;;;ACA5kG;AAClB;AACJ;AACG;AACmC;AAEhC;AACF;AACU;AAQ/E;IAUE,4BACS,YAA0B,EACzB,cAA8B,EAC9B,mBAAwC,EACxC,MAAiB;QAHlB,iBAAY,GAAZ,YAAY,CAAc;QACzB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,WAAM,GAAN,MAAM,CAAW;QACzB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAGD,0CAAa,GAAb,UAAc,KAAM;QAClB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;QACrC,IAAI,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE;YAC1B,IAAI,CAAC,gBAAgB,GAAI,CAAC,WAAW,EAAE,aAAa,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC;SAC/E;aAAM;YACL,IAAI,CAAC,gBAAgB,GAAI,CAAC,WAAW,EAAE,aAAa,EAAE,aAAa,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,EAAE,SAAS,CAAC,CAAC;SACzH;IACH,CAAC;IAED,qCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAC5D,CAAC;IAED,2CAAc,GAAd;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gFAAiB,EAAE;YAClC,UAAU,EAAE,mBAAmB;SAChC,CAAC,CAAC;IACL,CAAC;IAED,8CAAiB,GAAjB,UAAkB,EAAU,EAAE,GAAW;QACvC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oHAAsB,EAAE;YACvC,IAAI,EAAE,EAAE,EAAE,MAAE,GAAG,OAAE;SAClB,CAAC,CAAC;IACL,CAAC;IAED,8CAAiB,GAAjB,UAAkB,KAAY;QAA9B,iBAkBC;QAjBC,IAAI,IAAY,CAAC;QACjB,IAAI,GAAW,CAAC;QAChB,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC;QACrB,GAAG,GAAG,KAAK,CAAC,YAAY,CAAC;QACzB,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,aAAG;YAEtD,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC;YACxB,KAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,WAAC;gBAChD,KAAK,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC;gBAC3B,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mFAAkB,EAAE;oBACnC,UAAU,EAAE,mBAAmB;oBAC/B,IAAI,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE;iBAC1C,CAAC,CAAC;gBACH,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;gBACrB,KAAK,CAAC,YAAY,GAAG,GAAG,CAAC;YAC3B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAM,GAAN;QACE,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC3E,CAAC;IAED,wCAAW,GAAX;QACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAjEmB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;oDAAC;IACT;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;yDAAC;IAWjD;QADC,kEAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;2DASzC;IA3BU,kBAAkB;QAN9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,8IAA0C;;SAE3C,CAAC;+EAauB,8EAAY;YACT,kFAAc;YACT,4FAAmB;YAChC,2DAAS;OAdhB,kBAAkB,CAyE9B;IAAD,yBAAC;CAAA;AAzE8B;;;;;;;;;;;;AChB/B,yEAAyE,uK;;;;;;;;;;;ACAzE,24F;;;;;;;;;;;;;;;;;;ACAkD;AACe;AASjE;IAEE;IACA,CAAC;IAED,sCAAQ,GAAR;IACC,CAAC;IANS,mBAAmB;QAN/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,6HAA0C;YAE1C,aAAa,EAAE,CAAC,8EAAkB,CAAC;;SACpC,CAAC;;OACW,mBAAmB,CAQ/B;IAAD,0BAAC;CAAA;AAR+B;;;;;;;;;;;;ACVhC,+DAA+D,uN;;;;;;;;;;;ACA/D,0qD;;;;;;;;;;;;;;;;;;;;;ACAkD;AACU;AACX;AACsB;AACQ;AAQ/E;IAIE,8BAAoB,SAA6C,EAC7C,eAAgC,EAChC,YAAiC;QAFjC,cAAS,GAAT,SAAS,CAAoC;QAC7C,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAqB;QACnD,IAAI,CAAC,QAAQ,GAAG,IAAI,yEAAQ,EAAE,CAAC;IACjC,CAAC;IAED,uCAAQ,GAAR;IACA,CAAC;IAED,sCAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,sCAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,0CAAW,GAAX;QAAA,iBASC;QARC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,aAAG;YAC3D,KAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC;YACxC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC;QAC5D,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IA9BU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,qKAA4C;;SAE7C,CAAC;+EAK+B,8DAAY;YACN,oFAAe;YAClB,4FAAmB;OAN1C,oBAAoB,CAiChC;IAAD,2BAAC;CAAA;AAjCgC;;;;;;;;;;;;ACZjC,gCAAgC,2BAA2B,uBAAuB,KAAK,YAAY,oBAAoB,KAAK,+CAA+C,uiB;;;;;;;;;;;ACA3K,24BAA24B,cAAc,4OAA4O,eAAe,gPAAgP,eAAe,6mCAA6mC,2BAA2B,mFAAmF,6CAA6C,0GAA0G,kGAAkG,mL;;;;;;;;;;;;;;;;;;;;;;ACA1yF;AACQ;AACE;AACM;AACe;AAEN;AAOtF;IAQE,+BAAmB,eAAgC,EAAU,MAAiB;QAA3D,oBAAe,GAAf,eAAe,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAW;QAC5E,IAAI,CAAC,gBAAgB,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;IAChE,CAAC;IAED,wCAAQ,GAAR;QACE,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACnE,CAAC;IAGD,iDAAiB,GAAjB;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yFAAoB,EAAE;YACrC,UAAU,EAAE,mBAAmB;SAChC,CAAC,CAAC;IACL,CAAC;IAED,oDAAoB,GAApB,UAAqB,EAAU,EAAE,GAAW;QAE1C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yGAAsB,EAAE;YACvC,IAAI,EAAE,EAAE,EAAE,MAAE,GAAG,OAAE;SAClB,CAAC,CAAC;IACL,CAAC;IAED,oDAAoB,GAApB,UAAqB,QAAkB;QACrC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kGAAuB,EAAE;YACxC,UAAU,EAAE,mBAAmB;YAC/B,IAAI,EAAE,EAAE,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE;SAChD,CAAC,CAAC;IACL,CAAC;IAED,sCAAM,GAAN;QACE,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IACjF,CAAC;IAED,2CAAW,GAAX;QACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAvCmB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;uDAAC;IACT;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;4DAAC;IANtC,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,0JAA6C;;SAE9C,CAAC;+EASoC,oFAAe,EAAkB,2DAAS;OARnE,qBAAqB,CA+CjC;IAAD,4BAAC;CAAA;AA/CiC;;;;;;;;;;;;ACblC,+DAA+D,+N;;;;;;;;;;;ACA/D,6qD;;;;;;;;;;;;;;;;;;;;ACA0D;AAEQ;AACK;AACQ;AAQ/E;IAIE,iCAAmB,SAAgD,EACvB,IAAS,EACjC,eAAgC,EAChC,YAAiC;QAHlC,cAAS,GAAT,SAAS,CAAuC;QACvB,SAAI,GAAJ,IAAI,CAAK;QACjC,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAqB;QACnD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IAChC,CAAC;IAED,0CAAQ,GAAR;IACA,CAAC;IAED,yCAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,yCAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,gDAAc,GAAd;QAAA,iBASC;QARC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,aAAG;YACjF,KAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC;YACxC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC;QAC5D,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IA/BU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,8KAA+C;;SAEhD,CAAC;QAMa,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY,UAEL,oFAAe;YAClB,4FAAmB;OAP1C,uBAAuB,CAiCnC;IAAD,8BAAC;CAAA;AAjCmC;;;;;;;;;;;;ACZpC,+DAA+D,uP;;;;;;;;;;;ACA/D,+yBAA+yB,OAAO,mwB;;;;;;;;;;;;;;;;;;;;;;ACApwB;AACc;AACf;AACiC;AACH;AAEN;AAOzE;IAIE,mCACU,SAAkD,EAClD,oBAA0C,EAC3C,gBAAkC,EACjC,YAAiC;QAHjC,cAAS,GAAT,SAAS,CAAyC;QAClD,yBAAoB,GAApB,oBAAoB,CAAsB;QAC3C,qBAAgB,GAAhB,gBAAgB,CAAkB;QACjC,iBAAY,GAAZ,YAAY,CAAqB;QACzC,IAAI,CAAC,aAAa,GAAG,IAAI,6EAAa,EAAE,CAAC;IAC3C,CAAC;IAED,gDAAY,GAAZ;QAAA,iBAqBC;QApBC,IAAI,CAAC,aAAa,CAAC,eAAe,GAAG,IAAI,CAAC;QAC1C,IAAM,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;QAC5B,IAAM,IAAI,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACjD,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;aAC1E,SAAS,CACR,aAAG;YACD,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,iDAAiD,CAAC,CAAC;QAC/E,CAAC,EACD,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CACxB,CAAC;QACJ,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC;aACvD,SAAS,CACR,aAAG;YACD,KAAI,CAAC,oBAAoB,CAAC,gBAAgB,EAAE,CAAC;YAC7C,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,+BAA+B,CAAC,CAAC;QAC7D,CAAC,EACD,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CACxB,CAAC;IACN,CAAC;IAED,2CAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,2CAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,4CAAQ,GAAR;QACE,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC;IAC5C,CAAC;IA7CU,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;YAClC,kMAAkD;;SAEnD,CAAC;+EAMqB,8DAAY;YACD,+FAAoB;YACzB,sFAAgB;YACnB,4FAAmB;OARhC,yBAAyB,CA+CrC;IAAD,gCAAC;CAAA;AA/CqC;;;;;;;;;;;;ACbtC,+DAA+D,2P;;;;;;;;;;;ACA/D,i0BAAi0B,OAAO,8yB;;;;;;;;;;;;;;;;;;;;;ACA/wB;AAES;AACgB;AACH;AAEN;AAOzE;IAEE,oCACS,SAAmD,EAC1B,IAAS,EACjC,oBAA0C,EAC3C,gBAAkC,EACjC,YAAiC;QAJlC,cAAS,GAAT,SAAS,CAA0C;QAC1B,SAAI,GAAJ,IAAI,CAAK;QACjC,yBAAoB,GAApB,oBAAoB,CAAsB;QAC3C,qBAAgB,GAAhB,gBAAgB,CAAkB;QACjC,iBAAY,GAAZ,YAAY,CAAqB;QACzC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAClC,CAAC;IAKD,oDAAe,GAAf;QAAA,iBAUC;QATG,IAAI,CAAC,oBAAoB,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC;aAC5E,SAAS,CAAC,aAAG;YACZ,KAAI,CAAC,oBAAoB,CAAC,gBAAgB,EAAE,CAAC;YAC7C,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,oCAAoC,CAAC,CAAC;QAClE,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACT,CAAC;IAED,4CAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,4CAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,6CAAQ,GAAR;QACE,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC;IAC5C,CAAC;IApCU,0BAA0B;QALtC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;YACnC,qMAAmD;;SAEpD,CAAC;QAKG,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY,UAEA,+FAAoB;YACzB,sFAAgB;YACnB,4FAAmB;OAPhC,0BAA0B,CAsCtC;IAAD,iCAAC;CAAA;AAtCsC;;;;;;;;;;;;ACbvC,+DAA+D,+N;;;;;;;;;;;ACA/D,o1BAAo1B,mBAAmB,mMAAmM,cAAc,0NAA0N,yBAAyB,mMAAmM,cAAc,yhCAAyhC,2BAA2B,mFAAmF,mDAAmD,0GAA0G,8GAA8G,+K;;;;;;;;;;;;;;;;;;;;;;;ACAj1F;AACQ;AACa;AACY;AACF;AAEK;AACxB;AAOzE;IAQE,oCACS,oBAA0C,EACzC,gBAAkC,EAClC,MAAiB;QAFlB,yBAAoB,GAApB,oBAAoB,CAAsB;QACzC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,WAAM,GAAN,MAAM,CAAW;QACzB,IAAI,CAAC,gBAAgB,GAAG,CAAC,WAAW,EAAE,MAAM,EAAE,iBAAiB,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;IACtF,CAAC;IAED,6CAAQ,GAAR;QACE,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACxE,CAAC;IAED,0DAAqB,GAArB,UAAsB,SAAwB;QAA9C,iBAWC;QAVC,IAAI,GAAW,CAAC;QAChB,GAAG,GAAG,SAAS,CAAC,SAAS,CAAC;QAC1B,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,aAAG;YAC/C,SAAS,CAAC,SAAS,GAAG,GAAG,CAAC,GAAG,CAAC;YAC9B,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6GAA0B,EAAE;gBAC3C,UAAU,EAAE,mBAAmB;gBAC/B,IAAI,EAAE,EAAE,SAAS,EAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE;aACnD,CAAC,CAAC;YACH,SAAS,CAAC,SAAS,GAAG,GAAG,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uDAAkB,GAAlB;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0GAAyB,EAAE;YAC1C,UAAU,EAAE,mBAAmB;SAChC,CAAC,CAAC;IACL,CAAC;IAED,8DAAyB,GAAzB,UAA0B,EAAU,EAAE,GAAW;QAC/C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yGAAsB,EAAE;YACvC,IAAI,EAAE,EAAE,EAAE,MAAE,GAAG,OAAE;SAClB,CAAC,CAAC;IACL,CAAC;IAGD,2CAAM,GAAN;QACE,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IACvF,CAAC;IAED,gDAAW,GAAX;QACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IA/CmB;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;4DAAC;IACT;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;iEAAC;IANtC,0BAA0B;QALtC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;YACnC,iLAAmD;;SAEpD,CAAC;+EAU+B,+FAAoB;YACvB,sFAAgB;YAC1B,2DAAS;OAXhB,0BAA0B,CAsDtC;IAAD,iCAAC;CAAA;AAtDsC;;;;;;;;;;;;;;;;;;;;;;;;;;ACda;AACG;AAC4B;AACW;AACT;AACpB;AACV;AAC2D;AAC/B;AAEnF,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,UAAU,EAAG,QAAQ;QACrB,SAAS,EAAE,MAAM;KAClB;IACD;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,iGAAc;KAC1B;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,0GAAiB;KAC7B;IACD;QACE,IAAI,EAAE,YAAY;QAClB,SAAS,EAAE,+FAAmB;QAC9B,WAAW,EAAE,CAAC,mEAAS,CAAC;KACzB;IACD;QACE,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,6EAAa;QACxB,WAAW,EAAE,CAAC,mEAAS,CAAC;KACzB;IACD;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,8HAA4B;QACvC,WAAW,EAAE,CAAC,mEAAS,CAAC;KACzB;IACD;QACE,IAAI,EAAE,YAAY;QAClB,SAAS,EAAE,+FAAmB;QAC9B,WAAW,EAAE,CAAC,mEAAS,CAAC;KACzB;CACF,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;AClD7B,+DAA+D,+H;;;;;;;;;;;ACA/D,0kD;;;;;;;;;;;;;;;;;;;ACA0C;AACmB;AACb;AAOhD;IAGE,sBACS,WAAwB,EACvB,OAAe;QADhB,gBAAW,GAAX,WAAW,CAAa;QACvB,YAAO,GAAP,OAAO,CAAQ;QAJzB,UAAK,GAAG,KAAK,CAAC;QAKZ,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,KAAY;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IARU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;+EAKsB,yEAAW;YACd,sDAAM;OALd,YAAY,CASxB;IAAD,mBAAC;CAAA;AATwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTiC;AACjB;AACI;AACW;AACT;AACsC;AACV;AACmB;AACX;AAClB;AAClB;AACc;AACN;AAC+B;AACjC;AAC0B;AACW;AACG;AACd;AACnB;AACW;AACe;AACN;AACY;AACH;AACX;AACM;AACV;AACmB;AACiB;AACX;AACc;AACG;AAChD;AACQ;AACG;AACU;AACe;AACG;AAClB;AACiB;AACG;AACE;AACW;AACS;AACK;AACtB;AAChC;AACiB;AACe;AACvB;AACqB;AACS;AAClE;AACoF;AACvB;AACN;AACpC;AACE;AACc;AACuB;AAChC;AACgB;AACM;AACY;AACzC;AACS;AACkB;AACG;AACX;AAC0B;AACG;AACQ;AACG;AAClB;AACmB;AACG;AAC3B;AACd;AAC2B;AACG;AACvB;AACS;AACG;AACpB;AACkC;AACG;AAC1C;AACoB;AACuB;AACjE;AAC2B;AACO;AACG;AACuB;AACvD;AAC8B;AACY;AAC/B;AAC0B;AACG;AACd;AACsB;AACL;AACf;AACoC;AACG;AACb;AAoL/H;IAAA;IAAyB,CAAC;IAAb,SAAS;QAlLrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,iGAAc;gBACd,0GAAiB;gBACjB,+FAAmB;gBACnB,8EAAa;gBACb,wGAAoB;gBACpB,2GAAqB;gBACrB,qFAAmB;gBACnB,oGAAoB;gBACpB,8FAAkB;gBAClB,0GAAsB;gBACtB,uGAAqB;gBACrB,4FAAqB;gBACrB,kGAAmB;gBACnB,wFAAoB;gBACpB,2GAAsB;gBACtB,iHAAwB;gBACxB,+HAAuB;gBACvB,kIAAwB;gBACxB,kFAAkB;gBAClB,0FAAiB;gBACjB,6FAAkB;gBAClB,uGAAyB;gBACzB,sHAAwB;gBACxB,yHAAyB;gBACzB,uGAA0B;gBAC1B,wHAAyB;gBACzB,2HAA0B;gBAC1B,4HAAqB;gBACrB,uIAAoB;gBACpB,gJAAuB;gBACvB,qJAA4B;gBAC5B,+HAA4B;gBAC5B,+FAAiB;gBACjB,gHAAmB;gBACnB,+HAAoB;gBACpB,4HAA2B;gBAC3B,wGAAkB;gBAClB,6HAAqB;gBACrB,sIAAwB;gBACxB,wJAA6B;gBAC7B,iIAAsB;gBACtB,2HAAoB;gBACpB,wFAAoB;gBACpB,0FAAoB;gBACpB,wGAAoB;gBACpB,+HAA2B;gBAC3B,+FAAsB;gBACtB,+GAAsB;gBACtB,oHAAmB;gBACnB,gIAAmB;gBACnB,gGAAmB;gBACnB,mHAAwB;gBACxB,sHAAyB;gBACzB,2GAAsB;gBACtB,qIAAyB;gBACzB,wIAA0B;gBAC1B,gJAA2B;gBAC3B,mJAA4B;gBAC5B,iIAAmC;gBACnC,oJAA4B;gBAC5B,uJAA6B;gBAC7B,4HAAiC;gBACjC,8GAAuB;gBACvB,yIAA0B;gBAC1B,4IAA2B;gBAC3B,oHAAmB;gBACnB,6HAAkB;gBAClB,gIAAmB;gBACnB,6GAA4B;gBAC5B,+IAA+B;gBAC/B,kJAAgC;gBAChC,kFAAuC;gBACvC,4GAAiB;gBACjB,mHAAgB;gBAChB,sHAAiB;gBACjB,6IAAwB;gBACxB,sFAAc;gBACd,oHAAmB;gBACnB,gIAAmB;gBACnB,kGAAsB;gBACtB,4HAAyB;gBACzB,gIAA0B;gBAC1B,wGAAyB;gBACzB,4HAAyB;gBACzB,mJAAgC;gBAChC,kHAA4B;gBAC5B,wIAA4B;gBAC5B,mIAAmC;gBACnC,oHAA+B;gBAC/B,wJAAkC;gBAClC,2JAAmC;gBACnC,8IAA0C;aAC3C;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,qEAAgB;gBAChB,oEAAgB;gBAChB,6DAAY;gBACZ,kEAAmB;gBACnB,6FAAuB;gBACvB,yEAAc;gBACd,qEAAkB;gBAClB,iEAAgB;aACjB;YACD,eAAe,EAAE;gBACf,wGAAoB;gBACpB,2GAAqB;gBACrB,oGAAoB;gBACpB,8FAAkB;gBAClB,0GAAsB;gBACtB,uGAAqB;gBACrB,kGAAmB;gBACnB,2GAAsB;gBACtB,+HAAuB;gBACvB,kIAAwB;gBACxB,0FAAiB;gBACjB,6FAAkB;gBAClB,sHAAwB;gBACxB,yHAAyB;gBACzB,wHAAyB;gBACzB,2HAA0B;gBAC1B,uIAAoB;gBACpB,gJAAuB;gBACvB,qJAA4B;gBAC5B,+HAAoB;gBACpB,4HAA2B;gBAC3B,6HAAqB;gBACrB,sIAAwB;gBACxB,wJAA6B;gBAC7B,iIAAsB;gBACtB,2HAAoB;gBACpB,wFAAoB;gBACpB,wGAAoB;gBACpB,+HAA2B;gBAC3B,+GAAsB;gBACtB,gIAAmB;gBACnB,qIAAyB;gBACzB,wIAA0B;gBAC1B,gJAA2B;gBAC3B,mJAA4B;gBAC5B,iIAAmC;gBACnC,oJAA4B;gBAC5B,uJAA6B;gBAC7B,6HAAkB;gBAClB,gIAAmB;gBACnB,yIAA0B;gBAC1B,4IAA2B;gBAC3B,4HAAyB;gBACzB,mJAAgC;gBAChC,+IAA+B;gBAC/B,kJAAgC;gBAChC,kFAAuC;gBACvC,mHAAgB;gBAChB,sHAAiB;gBACjB,6IAAwB;gBACxB,4HAAyB;gBACzB,gIAA0B;gBAC1B,gIAAmB;gBACnB,wJAAkC;gBAClC,2JAAmC;gBACnC,8IAA0C;gBAC1C,wIAA4B;gBAC5B,mIAAmC;aACpC;YACD,SAAS,EAAE,CAAC,0EAAW,EAAE,oEAAS,EAAE,kFAAkB;gBACpD;oBACE,OAAO,EAAE,sEAAiB;oBAC1B,QAAQ,EAAE,mGAAuB;oBACjC,KAAK,EAAE,IAAI;iBACZ,EAAE,4FAAmB;gBACtB,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,sEAAqB,EAAE,KAAK,EAAE,IAAI,EAAE;aAC7E;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;AC/RmB;AACM;AACD;AAoD9C;IAAA;IAA8B,CAAC;IAAlB,cAAc;QAlD1B,8DAAQ,CAAC;YACR,YAAY,EAAE,EAAE;YAChB,OAAO,EAAE;gBACP,4DAAY;gBACZ,iEAAwB;gBACxB,mEAA0B;gBAC1B,gEAAuB;gBACvB,+DAAsB;gBACtB,oEAA2B;gBAC3B,+DAAsB;gBACtB,oEAA2B;gBAC3B,gEAAuB;gBACvB,iEAAwB;gBACxB,kEAAyB;gBACzB,mEAA0B;gBAC1B,mEAA0B;gBAC1B,kEAAyB;gBACzB,+DAAsB;gBACtB,iEAAwB;gBACxB,kEAAyB;gBACzB,+DAAsB;gBACtB,qEAA4B;gBAC5B,qEAA4B;gBAC5B,gEAAuB;gBACvB,gEAAuB;aACxB;YACD,OAAO,EAAE;gBACP,iEAAwB;gBACxB,mEAA0B;gBAC1B,gEAAuB;gBACvB,+DAAsB;gBACtB,oEAA2B;gBAC3B,+DAAsB;gBACtB,oEAA2B;gBAC3B,gEAAuB;gBACvB,iEAAwB;gBACxB,kEAAyB;gBACzB,mEAA0B;gBAC1B,mEAA0B;gBAC1B,kEAAyB;gBACzB,+DAAsB;gBACtB,iEAAwB;gBACxB,kEAAyB;gBACzB,+DAAsB;gBACtB,qEAA4B;gBAC5B,qEAA4B;gBAC5B,gEAAuB;gBACvB,gEAAuB;aACxB;SACF,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;ACtDgB;AACoB;AACR;AAKvD;IACE,mBACU,WAAwB,EACxB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IAExB,CAAC;IAED,+BAAW,GAAX;QACE,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE;YAC/B,OAAO,IAAI,CAAC;SACb;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjC,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAdU,SAAS;QAHrB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAGuB,kEAAW;YAChB,sDAAM;OAHb,SAAS,CAgBrB;IAAD,gBAAC;CAAA;AAhBqB;;;;;;;;;;;;;ACPtB;AAAA;AAAA;IAEE;QACE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAClB,CAAC;IAcH,aAAC;AAAD,CAAC;;;;;;;;;;;;;;ACtBD;AAAA;AAAA;IACE;QACE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IACzB,CAAC;IAQH,YAAC;AAAD,CAAC;;;;;;;;;;;;;;ACfD;AAAA;AAAA;IACE;QACE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,QAAQ,GAAG;YACd,GAAG,EAAE,EAAE;YACP,GAAG,EAAE,EAAE;SACR,CAAC;IACJ,CAAC;IAWH,kBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACtBD;AAAA;AAAA;IAEE;QACE,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;IACjB,CAAC;IAeH,kBAAC;AAAD,CAAC;;;;;;;;;;;;;;AC9BD;AAAA;AAAA;IAEE;QACE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QACb,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAClB,CAAC;IAeH,WAAC;AAAD,CAAC;;;;;;;;;;;;;;AC7BD;AAAA;AAAA;IAEE;QACE,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAClB,CAAC;IASH,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;AClBD;AAAA;AAAA;IAEI;QACE,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IACxB,CAAC;IAMH,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACXH;AAAA;AAAA;IAEE;QACE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;IAC1B,CAAC;IAOH,eAAC;AAAD,CAAC;;;;;;;;;;;;;;ACbD;AAAA;AAAA;IAEE;QACE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;IACjB,CAAC;IAUH,eAAC;AAAD,CAAC;;;;;;;;;;;;;;ACpBD;AAAA;AAAA;IACE;QACE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;IAEtB,CAAC;IAWH,cAAC;AAAD,CAAC;;;;;;;;;;;;;;ACtBD;AAAA;AAAA;IACI;QACI,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAG;YACX,IAAI,EAAE,EAAE;YACR,MAAM,EAAE,IAAI;SACf,CAAC;QACF,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACrB,CAAC;IAgBL,aAAC;AAAD,CAAC;;;;;;;;;;;;;;AChCD;AAAA;AAAA;IAEE;QACE,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;IACjB,CAAC;IAQH,aAAC;AAAD,CAAC;;;;;;;;;;;;;;AChBD;AAAA;AAAA;IACE;QACE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;IAC5B,CAAC;IAMH,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACZD;AAAA;AAAA;IACE;QACE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAClB,CAAC;IAOH,aAAC;AAAD,CAAC;;;;;;;;;;;;;;ACdD;AAAA;AAAA;IAAA;IAIA,CAAC;IAAD,YAAC;AAAD,CAAC;;;;;;;;;;;;;;ACJD;AAAA;AAAA;IAEE;QACE,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;IACjB,CAAC;IAQH,qBAAC;AAAD,CAAC;;;;;;;;;;;;;;AChBD;AAAA;AAAA;IACI;QACI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACtB,CAAC;IAML,eAAC;AAAD,CAAC;;;;;;;;;;;;;;ACZD;AAAA;AAAA;IAEE;QACE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;IACjB,CAAC;IAOH,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACdD;AAAA;AAAA;IACE;QACI,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;IACxB,CAAC;IAeH,cAAC;AAAD,CAAC;;;;;;;;;;;;;;ACrBD;AAAA;AAAA;IAEE;QACE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;IACjB,CAAC;IAYH,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;ACzB0C;AACO;AACT;AAKzC;IAIE,qBAAoB,IAAgB,EAAU,MAAc;QAAxC,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAFpD,iBAAY,GAAG,2CAA2C,CAAC;QAC3D,aAAQ,GAAG,wCAAwC,CAAC;IACI,CAAC;IAEjE,kCAAY,GAAZ,UAAa,IAAI;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;IACtD,CAAC;IAED,+BAAS,GAAT,UAAU,IAAI;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAClD,CAAC;IAED,8BAAQ,GAAR;QACE,OAAO,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACzC,CAAC;IAED,8BAAQ,GAAR;QACE,OAAO,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACvC,CAAC;IAED,gCAAU,GAAV;QACE,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IAzBU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAK0B,+DAAU,EAAkB,sDAAM;OAJjD,WAAW,CA0BvB;IAAD,kBAAC;CAAA;AA1BuB;;;;;;;;;;;;;;;;;;;;ACPmB;AAEmC;AAC5B;AAMlD;IAOE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,QAAG,GAAG,mCAAmC,CAAC;QAGhD,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,WAAW,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACxD,CAAC;IAED,iBAAiB;IACjB,kCAAY,GAAZ,UAAa,IAAc,EAAE,SAAwB;QAArD,iBAgBC;QAfC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,CAAC,GAAG,UAAO,CAAC,CAAC,SAAS,CAAC,aAAG;YACrD,IAAM,GAAG,GAAG,OAAO,CAAC;YACpB,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YACtB,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;YAClC,KAAI,CAAC,WAAW,CAAC,IAAI,GAAG,KAAI,CAAC,KAAK,CAAC;YACnC,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC;aAC9B;YACD,IAAI,SAAS,EAAE;gBACb,KAAI,CAAC,WAAW,CAAC,SAAS,GAAG,SAAS,CAAC;aACxC;QACH,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,eAAe;IACf,6BAAO,GAAP,UAAQ,IAAU;QAChB,IAAM,OAAO,GAAG,EAAE,IAAI,QAAE,CAAC;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,SAAM,EAAE,OAAO,CAAC,CAAC;IACpD,CAAC;IAED,cAAc;IACd,gCAAU,GAAV,UAAW,EAAU;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,CAAC,CAAC;IACtD,CAAC;IAED,cAAc;IACd,gCAAU,GAAV,UAAW,EAAU,EAAE,IAAU;QAC/B,IAAM,OAAO,GAAG;YACd,IAAI;SACL,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,EAAE,OAAO,CAAC,CAAC;IAE5D,CAAC;IAjDU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAQ0B,+DAAU;OAPzB,WAAW,CAkDvB;IAAD,kBAAC;CAAA;AAlDuB;;;;;;;;;;;;;;;;;;;;ACTmB;AAEmC;AAC5B;AAMlD;IAOE,0BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,QAAG,GAAG,wCAAwC,CAAC;QAGrD,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,gBAAgB,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAClE,CAAC;IAED,yCAAc,GAAd;QACE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,UAAU,EAAZ,CAAY,CAAC,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,KAAK,IAAK,UAAG,GAAG,KAAK,EAAX,CAAW,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAClG,CAAC;IAED,uBAAuB;IACvB,4CAAiB,GAAjB,UAAkB,IAAc,EAAE,SAAwB;QAA1D,iBAkBC;QAjBC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,IAAI,CAAC,GAAG,UAAO,CAAC,CAAC,SAAS,CAAC,aAAG;YAC1D,IAAM,GAAG,GAAG,YAAY,CAAC;YACzB,KAAI,CAAC,UAAU,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YAC3B,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;YAC5C,KAAI,CAAC,gBAAgB,CAAC,IAAI,GAAG,KAAI,CAAC,UAAU,CAAC;YAC7C,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,gBAAgB,CAAC,IAAI,GAAG,IAAI,CAAC;aACnC;YACD,IAAI,SAAS,EAAE;gBACb,KAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,SAAS,CAAC;aAC7C;QAGH,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qCAAqC;IACrC,gDAAqB,GAArB,UAAsB,SAAiB,EAAE,IAAc,EAAE,SAAwB;QAAjF,iBAmBC;QAlBC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,IAAI,CAAC,GAAG,UAAO,CAAC,CAAC,SAAS,CAAC,aAAG;YAC1D,IAAM,GAAG,GAAG,YAAY,CAAC;YACzB,KAAI,CAAC,UAAU,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YAC3B,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;YAC5C,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,SAAS,KAAK,SAAS,EAAzB,CAAyB,CAAC,CAAC;YACzE,KAAI,CAAC,gBAAgB,CAAC,IAAI,GAAG,KAAI,CAAC,UAAU,CAAC;YAC7C,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,gBAAgB,CAAC,IAAI,GAAG,IAAI,CAAC;aACnC;YACD,IAAI,SAAS,EAAE;gBACb,KAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,SAAS,CAAC;aAC7C;QAGH,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qBAAqB;IACrB,uCAAY,GAAZ,UAAa,SAAoB;QAC/B,IAAM,OAAO,GAAG,EAAE,SAAS,aAAE,CAAC;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,SAAM,EAAE,OAAO,CAAC,CAAC;IACpD,CAAC;IAED,oBAAoB;IACpB,0CAAe,GAAf,UAAgB,EAAU;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,CAAC,CAAC;IACtD,CAAC;IAED,oBAAoB;IACpB,0CAAe,GAAf,UAAgB,EAAU,EAAE,SAAoB;QAC9C,IAAM,OAAO,GAAG;YACd,SAAS;SACV,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,EAAE,OAAO,CAAC,CAAC;IAC5D,CAAC;IA5EU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAQ0B,+DAAU;OAPzB,gBAAgB,CA6E5B;IAAD,uBAAC;CAAA;AA7E4B;;;;;;;;;;;;;;;;;;;;ACTc;AAEmC;AAC5B;AAMlD;IAME,0BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,QAAG,GAAG,wCAAwC,CAAC;QAGrD,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,gBAAgB,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAClE,CAAC;IAED,sBAAsB;IACtB,4CAAiB,GAAjB,UAAkB,IAAc,EAAE,SAAwB;QAA1D,iBAeC;QAdC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,IAAI,CAAC,GAAG,UAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAAiB;YACzE,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;YAC5C,KAAI,CAAC,gBAAgB,CAAC,IAAI,GAAG,KAAI,CAAC,UAAU,CAAC;YAC7C,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,gBAAgB,CAAC,IAAI,GAAG,IAAI,CAAC;aACnC;YACD,IAAI,SAAS,EAAE;gBACb,KAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,SAAS,CAAC;aAC7C;QACH,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,oBAAoB;IACpB,uCAAY,GAAZ,UAAa,SAAoB;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,SAAM,EAAE,SAAS,CAAC,CAAC;IACtD,CAAC;IAED,mBAAmB;IACnB,0CAAe,GAAf,UAAgB,EAAU;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,CAAC,CAAC;IACtD,CAAC;IAED,mBAAmB;IACnB,0CAAe,GAAf,UAAgB,EAAU,EAAE,SAAoB;QAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,EAAE,SAAS,CAAC,CAAC;IAC9D,CAAC;IAED,YAAY;IACZ,kCAAO,GAAP,UAAQ,EAAU;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,IAAI,CAAC,GAAG,cAAS,EAAI,CAAC,CAAC;IAC5D,CAAC;IAED,mBAAmB;IACnB,mCAAQ,GAAR,UAAS,GAAW;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,IAAI,CAAC,GAAG,uBAAkB,GAAK,CAAC,CAAC;IACtE,CAAC;IApDU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAO0B,+DAAU;OANzB,gBAAgB,CAwD5B;IAAD,uBAAC;CAAA;AAxD4B;;;;;;;;;;;;;;;;;;;;;ACTc;AACO;AAC4B;AAEvB;AAMvD;IAOE,6BAAoB,IAAgB,EAChB,gBAAkC;QADlC,SAAI,GAAJ,IAAI,CAAY;QAChB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAH9C,QAAG,GAAG,uCAAuC,CAAC;QAIpD,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,eAAe,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC/D,CAAC;IAEF,yCAAW,GAAX,UAAY,QAAkB;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,IAAI,CAAC,GAAG,SAAM,EAAE,QAAQ,CAAC,CAAC;IAC1D,CAAC;IAED,8CAAgB,GAAhB,UAAiB,IAAc,EAAE,SAAwB;QAAzD,iBAyBC;QAxBC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,IAAI,CAAC,GAAG,UAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAAgB;YACvE,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YAEtB,IAAI,SAAoB,CAAC;YACzB,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAC,OAAiB;gBACvC,KAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,UAAC,GAAc;oBAC5E,SAAS,GAAG,GAAG,CAAC;oBAChB,OAAO,CAAC,aAAa,GAAG,SAAS,CAAC,GAAG,CAAC;gBACxC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;YAC1C,KAAI,CAAC,eAAe,CAAC,IAAI,GAAG,KAAI,CAAC,SAAS,CAAC;YAC3C,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,eAAe,CAAC,IAAI,GAAG,IAAI,CAAC;aAClC;YACD,IAAI,SAAS,EAAE;gBACb,KAAI,CAAC,eAAe,CAAC,SAAS,GAAG,SAAS,CAAC;aAC5C;QAGH,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,0CAAY,GAAZ,UAAa,EAAU;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,cAAS,EAAI,CAAC,CAAC;IACjD,CAAC;IAED,4CAAc,GAAd,UAAe,EAAU,EAAE,QAAkB;QAC3C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,EAAE,QAAQ,CAAC,CAAC;IAC7D,CAAC;IAED,4CAAc,GAAd,UAAe,EAAU;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,CAAC,CAAC;IACtD,CAAC;IAtDU,mBAAmB;QAH/B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAQ0B,+DAAU;YACE,mEAAgB;OAR3C,mBAAmB,CAuD/B;IAAD,0BAAC;CAAA;AAvD+B;;;;;;;;;;;;;;;;;;;;ACVW;AAEmC;AAC5B;AAMlD;IAOE,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,QAAG,GAAG,uCAAuC,CAAC;QAGpD,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,eAAe,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAChE,CAAC;IAED,wCAAc,GAAd;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,UAAU,EAAZ,CAAY,CAAC,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,KAAK,IAAK,UAAG,GAAG,KAAK,EAAX,CAAW,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACjG,CAAC;IAED,qBAAqB;IACrB,0CAAgB,GAAhB,UAAiB,IAAc,EAAE,SAAwB;QAAzD,iBAkBC;QAjBC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,IAAI,CAAC,GAAG,UAAO,CAAC,CAAC,SAAS,CAAC,aAAG;YACzD,IAAM,GAAG,GAAG,WAAW,CAAC;YACxB,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YAC1B,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;YAC1C,KAAI,CAAC,eAAe,CAAC,IAAI,GAAG,KAAI,CAAC,SAAS,CAAC;YAC3C,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,eAAe,CAAC,IAAI,GAAG,IAAI,CAAC;aAClC;YACD,IAAI,SAAS,EAAE;gBACb,KAAI,CAAC,eAAe,CAAC,SAAS,GAAG,SAAS,CAAC;aAC5C;QAGH,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mCAAmC;IACnC,8CAAoB,GAApB,UAAqB,SAAiB,EAAE,IAAc,EAAE,SAAwB;QAAhF,iBAmBC;QAlBC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,IAAI,CAAC,GAAG,UAAO,CAAC,CAAC,SAAS,CAAC,aAAG;YACzD,IAAM,GAAG,GAAG,WAAW,CAAC;YACxB,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YAC1B,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;YAC1C,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,SAAS,KAAK,SAAS,EAAzB,CAAyB,CAAC,CAAC;YACvE,KAAI,CAAC,eAAe,CAAC,IAAI,GAAG,KAAI,CAAC,SAAS,CAAC;YAC3C,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,eAAe,CAAC,IAAI,GAAG,IAAI,CAAC;aAClC;YACD,IAAI,SAAS,EAAE;gBACb,KAAI,CAAC,eAAe,CAAC,SAAS,GAAG,SAAS,CAAC;aAC5C;QAGH,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mBAAmB;IACnB,qCAAW,GAAX,UAAY,QAAkB;QAC5B,IAAM,OAAO,GAAG,EAAE,QAAQ,YAAE,CAAC;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,SAAM,EAAE,OAAO,CAAC,CAAC;IACpD,CAAC;IAED,kBAAkB;IAClB,wCAAc,GAAd,UAAe,EAAU;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,CAAC,CAAC;IACtD,CAAC;IAED,kBAAkB;IAClB,wCAAc,GAAd,UAAe,EAAU,EAAE,QAAkB;QAC3C,IAAM,OAAO,GAAG;YACd,QAAQ;SACT,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,EAAE,OAAO,CAAC,CAAC;IAC5D,CAAC;IA5EU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAQ0B,+DAAU;OAPzB,eAAe,CA6E3B;IAAD,sBAAC;CAAA;AA7E2B;;;;;;;;;;;;;;;;;;;;ACTe;AAEmC;AAC5B;AAMlD;IAOE,uBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,QAAG,GAAG,qCAAqC,CAAC;QAGlD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,aAAa,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5D,CAAC;IAED,sCAAc,GAAd;QACE,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,WAAW,EAAb,CAAa,CAAC,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,KAAK,IAAK,UAAG,GAAG,KAAK,EAAX,CAAW,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAChG,CAAC;IAED,mBAAmB;IACnB,sCAAc,GAAd,UAAe,IAAc,EAAE,SAAwB;QAAvD,iBAkBC;QAjBC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,IAAI,CAAC,GAAG,UAAO,CAAC,CAAC,SAAS,CAAC,aAAG;YACvD,IAAM,GAAG,GAAG,SAAS,CAAC;YACtB,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YACxB,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YACtC,KAAI,CAAC,aAAa,CAAC,IAAI,GAAG,KAAI,CAAC,OAAO,CAAC;YACvC,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC;aAChC;YACD,IAAI,SAAS,EAAE;gBACb,KAAI,CAAC,aAAa,CAAC,SAAS,GAAG,SAAS,CAAC;aAC1C;QAGH,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iCAAiC;IACjC,0CAAkB,GAAlB,UAAmB,SAAiB,EAAE,IAAc,EAAE,SAAwB;QAA9E,iBAmBC;QAlBC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,IAAI,CAAC,GAAG,UAAO,CAAC,CAAC,SAAS,CAAC,aAAG;YACvD,IAAM,GAAG,GAAG,SAAS,CAAC;YACtB,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YACxB,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YACtC,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,SAAS,KAAK,SAAS,EAAzB,CAAyB,CAAC,CAAC;YACnE,KAAI,CAAC,aAAa,CAAC,IAAI,GAAG,KAAI,CAAC,OAAO,CAAC;YACvC,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC;aAChC;YACD,IAAI,SAAS,EAAE;gBACb,KAAI,CAAC,aAAa,CAAC,SAAS,GAAG,SAAS,CAAC;aAC1C;QAGH,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iBAAiB;IACjB,iCAAS,GAAT,UAAU,MAAc;QACtB,IAAM,OAAO,GAAG,EAAE,MAAM,UAAE,CAAC;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,SAAM,EAAE,OAAO,CAAC,CAAC;IACpD,CAAC;IAED,gBAAgB;IAChB,oCAAY,GAAZ,UAAa,EAAU;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,CAAC,CAAC;IACtD,CAAC;IAED,gBAAgB;IAChB,oCAAY,GAAZ,UAAa,EAAU,EAAE,MAAc;QACrC,IAAM,OAAO,GAAG;YACd,MAAM;SACP,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,EAAE,OAAO,CAAC,CAAC;IAC5D,CAAC;IA5EU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAQ0B,+DAAU;OAPzB,aAAa,CA6EzB;IAAD,oBAAC;CAAA;AA7EyB;;;;;;;;;;;;;;;;;;;;;ACTiB;AAEO;AAE4B;AAEvB;AAKvD;IASE,wBAAoB,IAAgB,EAChB,gBAAkC;QADlC,SAAI,GAAJ,IAAI,CAAY;QAChB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAL9C,QAAG,GAAG,sCAAsC,CAAC;QAMnD,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,cAAc,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC9D,CAAC;IAED,oBAAoB;IACpB,wCAAe,GAAf,UAAgB,IAAc,EAAE,SAAwB;QAAxD,iBA2BC;QA1BC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,IAAI,CAAC,GAAG,UAAO,CAAC,CAAC,SAAS,CAAC,aAAG;YACxD,IAAM,GAAG,GAAG,UAAU,CAAC;YACvB,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YAEzB,IAAI,SAAoB,CAAC;YACzB,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,OAAgB;gBACrC,KAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,IAAe;oBACzE,SAAS,GAAG,IAAI,CAAC;oBACjB,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC,GAAG,CAAC;gBACpC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;YACxC,KAAI,CAAC,cAAc,CAAC,IAAI,GAAG,KAAI,CAAC,QAAQ,CAAC;YACzC,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,cAAc,CAAC,IAAI,GAAG,IAAI,CAAC;aACjC;YACD,IAAI,SAAS,EAAE;gBACb,KAAI,CAAC,cAAc,CAAC,SAAS,GAAG,SAAS,CAAC;aAC3C;QAGH,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,kBAAkB;IAClB,mCAAU,GAAV,UAAW,OAAgB;QACzB,IAAM,OAAO,GAAG,EAAE,OAAO,WAAE,CAAC;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,SAAM,EAAE,OAAO,CAAC,CAAC;IACpD,CAAC;IAED,iBAAiB;IACjB,sCAAa,GAAb,UAAc,EAAU;QAEtB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,CAAC,CAAC;IACtD,CAAC;IAED,iBAAiB;IACjB,sCAAa,GAAb,UAAc,EAAU,EAAE,OAAgB;QACxC,IAAM,OAAO,GAAG;YACd,OAAO;SACR,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,EAAE,OAAO,CAAC,CAAC;IAC5D,CAAC;IAED,oBAAoB;IACpB,uCAAc,GAAd,UAAe,EAAU;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,IAAI,CAAC,GAAG,cAAS,EAAI,CAAC,CAAC;IAC1D,CAAC;IAED,cAAc;IACd,yCAAgB,GAAhB,UAAiB,IAAY;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,IAAI,CAAC,GAAG,wBAAmB,IAAM,CAAC,CAAC;IACtE,CAAC;IAED,gCAAgC;IAChC,8CAAqB,GAArB,UAAsB,SAAiB;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,IAAI,CAAC,GAAG,wBAAmB,SAAW,CAAC,CAAC;IAC7E,CAAC;IAhFU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAU0B,+DAAU;YACE,mEAAgB;OAV3C,cAAc,CAsF1B;IAAD,qBAAC;CAAA;AAtF0B;;;;;;;;;;;;;;;;;;;;ACXgB;AAEO;AAE4B;AAK9E;IAQE,uBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAH5B,QAAG,GAAG,qCAAqC,CAAC;QAIlD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,aAAa,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5D,CAAC;IAED,mBAAmB;IACnB,sCAAc,GAAd,UAAe,IAAc,EAAE,SAAwB;QAAvD,iBAkBC;QAjBC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,IAAI,CAAC,GAAG,UAAO,CAAC,CAAC,SAAS,CAAC,aAAG;YACvD,IAAM,GAAG,GAAG,SAAS,CAAC;YACtB,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YACxB,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YACtC,KAAI,CAAC,aAAa,CAAC,IAAI,GAAG,KAAI,CAAC,OAAO,CAAC;YACvC,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC;aAChC;YACD,IAAI,SAAS,EAAE;gBACb,KAAI,CAAC,aAAa,CAAC,SAAS,GAAG,SAAS,CAAC;aAC1C;QAGH,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iBAAiB;IACjB,iCAAS,GAAT,UAAU,MAAc;QACtB,IAAM,OAAO,GAAG,EAAE,MAAM,UAAE,CAAC;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,SAAM,EAAE,OAAO,CAAC,CAAC;IACpD,CAAC;IAED,gBAAgB;IAChB,oCAAY,GAAZ,UAAa,EAAU;QAErB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,CAAC,CAAC;IACtD,CAAC;IAED,gBAAgB;IAChB,oCAAY,GAAZ,UAAa,EAAU,EAAE,MAAc;QACrC,IAAM,OAAO,GAAG;YACd,MAAM;SACP,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,EAAE,OAAO,CAAC,CAAC;IAC5D,CAAC;IArDU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAS0B,+DAAU;OARzB,aAAa,CAuDzB;IAAD,oBAAC;CAAA;AAvDyB;;;;;;;;;;;;;;;;;;;;ACTiB;AACmC;AAE5B;AAMlD;IAOE,uBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,QAAG,GAAG,qCAAqC,CAAC;QAGlD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,aAAa,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5D,CAAC;IAED,sCAAc,GAAd;QACE,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,eAAe,EAAjB,CAAiB,CAAC,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,KAAK,IAAK,UAAG,GAAG,KAAK,EAAX,CAAW,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACpG,CAAC;IAED,mBAAmB;IACnB,sCAAc,GAAd,UAAe,IAAc,EAAE,SAAwB;QAAvD,iBAoBC;QAnBC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,IAAI,CAAC,GAAG,UAAO,CAAC,CAAC,SAAS,CAAC,aAAG;YACvD,IAAM,GAAG,GAAG,SAAS,CAAC;YACtB,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YACxB,IAAI,KAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC3B,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;aACvC;YACD,KAAI,CAAC,aAAa,CAAC,IAAI,GAAG,KAAI,CAAC,OAAO,CAAC;YACvC,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC;aAChC;YACD,IAAI,SAAS,EAAE;gBACb,KAAI,CAAC,aAAa,CAAC,SAAS,GAAG,SAAS,CAAC;aAC1C;QAGH,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iBAAiB;IACjB,iCAAS,GAAT,UAAU,MAAc;QACtB,IAAM,OAAO,GAAG,EAAE,MAAM,UAAE,CAAC;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,SAAM,EAAE,OAAO,CAAC,CAAC;IACpD,CAAC;IAED,gBAAgB;IAChB,oCAAY,GAAZ,UAAa,EAAU;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,CAAC,CAAC;IACtD,CAAC;IAED,gBAAgB;IAChB,oCAAY,GAAZ,UAAa,EAAU,EAAE,MAAc;QACrC,IAAM,OAAO,GAAG;YACd,MAAM;SACP,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,EAAE,OAAO,CAAC,CAAC;IAC5D,CAAC;IAxDU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAQ0B,+DAAU;OAPzB,aAAa,CAyDzB;IAAD,oBAAC;CAAA;AAzDyB;;;;;;;;;;;;;;;;;;;;ACTiB;AAEmC;AAC5B;AAKlD;IAOE,6BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,QAAG,GAAG,2CAA2C,CAAC;QAGxD,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,mBAAmB,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACvE,CAAC;IAEF,6CAAe,GAAf,UAAgB,YAAY;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,IAAI,CAAC,GAAG,SAAM,EAAE,YAAY,CAAC,CAAC;IAC9D,CAAC;IAED,kDAAoB,GAApB,UAAqB,IAAc,EAAE,SAAwB;QAA7D,iBAeC;QAdC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAoB,IAAI,CAAC,GAAG,UAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAAoB;YAC/E,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;YAClD,KAAI,CAAC,mBAAmB,CAAC,IAAI,GAAG,KAAI,CAAC,aAAa,CAAC;YACnD,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,mBAAmB,CAAC,IAAI,GAAG,IAAI,CAAC;aACtC;YACD,IAAI,SAAS,EAAE;gBACb,KAAI,CAAC,mBAAmB,CAAC,SAAS,GAAG,SAAS,CAAC;aAChD;QACH,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,8CAAgB,GAAhB,UAAiB,EAAE;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,cAAS,EAAI,CAAC,CAAC;IACjD,CAAC;IAED,gDAAkB,GAAlB,UAAmB,EAAE,EAAE,YAAY;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,EAAE,YAAY,CAAC,CAAC;IACjE,CAAC;IAED,gDAAkB,GAAlB,UAAmB,EAAE;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,CAAC,CAAC;IACtD,CAAC;IAED,yBAAyB;IACzB,qCAAO,GAAP,UAAQ,EAAU;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,IAAI,CAAC,GAAG,cAAS,EAAI,CAAC,CAAC;IAC/D,CAAC;IAED,mBAAmB;IACnB,sCAAQ,GAAR,UAAS,GAAW;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,IAAI,CAAC,GAAG,uBAAkB,GAAK,CAAC,CAAC;IACzE,CAAC;IArDU,mBAAmB;QAH/B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAQ0B,+DAAU;OAPzB,mBAAmB,CAsD/B;IAAD,0BAAC;CAAA;AAtD+B;;;;;;;;;;;;;;;;;;;;ACRW;AAEmC;AAC5B;AAMlD;IAOE,uBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,QAAG,GAAG,qCAAqC,CAAC;QAGlD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,aAAa,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5D,CAAC;IAED,sCAAc,GAAd;QACE,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,KAAK,KAAK,KAAK,EAAjB,CAAiB,CAAC,CAAC;QAC3D,OAAO,MAAM,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,UAAU,EAAZ,CAAY,CAAC,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,KAAK,IAAK,UAAG,GAAG,KAAK,EAAX,CAAW,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACzF,CAAC;IAED,uBAAuB;IACvB,sCAAc,GAAd,UAAe,IAAc,EAAE,SAAwB;QAAvD,iBAkBC;QAjBC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,IAAI,CAAC,GAAG,UAAO,CAAC,CAAC,SAAS,CAAC,aAAG;YACvD,IAAM,GAAG,GAAG,SAAS,CAAC;YACtB,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YACxB,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YACtC,KAAI,CAAC,aAAa,CAAC,IAAI,GAAG,KAAI,CAAC,OAAO,CAAC;YACvC,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC;aAChC;YACD,IAAI,SAAS,EAAE;gBACb,KAAI,CAAC,aAAa,CAAC,SAAS,GAAG,SAAS,CAAC;aAC1C;QAGH,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qCAAqC;IACrC,0CAAkB,GAAlB,UAAmB,SAAiB,EAAE,IAAc,EAAE,SAAwB;QAA9E,iBAmBC;QAlBC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,IAAI,CAAC,GAAG,UAAO,CAAC,CAAC,SAAS,CAAC,aAAG;YACvD,IAAM,GAAG,GAAG,SAAS,CAAC;YACtB,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YACxB,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YACtC,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,SAAS,KAAK,SAAS,EAAzB,CAAyB,CAAC,CAAC;YACnE,KAAI,CAAC,aAAa,CAAC,IAAI,GAAG,KAAI,CAAC,OAAO,CAAC;YACvC,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC;aAChC;YACD,IAAI,SAAS,EAAE;gBACb,KAAI,CAAC,aAAa,CAAC,SAAS,GAAG,SAAS,CAAC;aAC1C;QAGH,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iBAAiB;IACjB,iCAAS,GAAT,UAAU,MAAc;QACtB,IAAM,OAAO,GAAG,EAAE,MAAM,UAAE,CAAC;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,SAAM,EAAE,OAAO,CAAC,CAAC;IACpD,CAAC;IAED,gBAAgB;IAChB,oCAAY,GAAZ,UAAa,EAAU;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,CAAC,CAAC;IACtD,CAAC;IAED,gBAAgB;IAChB,oCAAY,GAAZ,UAAa,EAAU,EAAE,MAAc;QACrC,IAAM,OAAO,GAAG;YACd,MAAM;SACP,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,EAAE,OAAO,CAAC,CAAC;IAC5D,CAAC;IA7EU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAQ0B,+DAAU;OAPzB,aAAa,CA8EzB;IAAD,oBAAC;CAAA;AA9EyB;;;;;;;;;;;;;;;;;;;;ACTiB;AAEO;AAEW;AAK7D;IAME,sBAAoB,IAAgB,EAChB,WAAgC;QADhC,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAqB;QAL5C,QAAG,GAAG,oCAAoC,CAAC;QAMjD,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACnB,CAAC;IAED,gCAAS,GAAT,UAAU,CAAU;QAApB,iBAeC;QAdC,IAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;QACvB,IAAI,IAAI,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAE5D,IAAI,CAAC,EAAE;YACL,IAAI,GAAG,CAAC,CAAC;SACV;QAED,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,0BAAqB,IAAM,CAAC,CAAC,SAAS,CAAC,aAAG;YACjE,IAAM,GAAG,GAAG,QAAQ,CAAC;YACrB,KAAI,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;QACzB,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAW,GAAX,UAAY,EAAU;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,CAAC,CAAC;IACtD,CAAC;IAED,+BAAQ,GAAR,UAAS,KAAY;QAArB,iBAYC;QAXC,IAAM,OAAO,GAAG;YACd,KAAK;SACN,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,SAAM,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,aAAG;YACtD,KAAI,CAAC,SAAS,EAAE,CAAC;YACjB,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;QAC/C,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAW,GAAX,UAAY,KAAY;QACtB,IAAM,OAAO,GAAG;YACd,KAAK;SACN,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,gBAAW,KAAK,CAAC,GAAK,EAAE,OAAO,CAAC,CAAC;IACnE,CAAC;IApDU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAO0B,+DAAU;YACH,yEAAmB;OAPzC,YAAY,CAqDxB;IAAD,mBAAC;CAAA;AArDwB;;;;;;;;;;;;;;;;;;;;;;;ACTkB;AAEmC;AAC5B;AAEK;AACJ;AAEU;AAO7D;IASE,sBAAoB,IAAgB,EAChB,cAA8B,EAC9B,mBAAwC,EACxC,gBAAkC;QAHlC,SAAI,GAAJ,IAAI,CAAY;QAChB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAL9C,QAAG,GAAG,oCAAoC,CAAC;QAMjD,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC1D,CAAC;IAED,+BAAQ,GAAR,UAAS,KAAK;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,IAAI,CAAC,GAAG,SAAM,EAAE,KAAK,CAAC,CAAC;IACvD,CAAC;IAED,mCAAY,GAAZ,UAAa,SAAiB;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,GAAG,sBAAiB,SAAW,CAAC,CAAC;IACrE,CAAC;IAED,mCAAY,GAAZ,UAAa,IAAc,EAAE,SAAwB;QAArD,iBAgCC;QA/BC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,IAAI,CAAC,GAAG,UAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAAa;YACjE,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YAEnB,IAAI,OAAgB,CAAC;YACrB,IAAI,YAA0B,CAAC;YAC/B,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,OAAc;gBACjC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,GAAY;oBACzE,OAAO,GAAG,GAAG,CAAC;oBACd,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC;oBAC/B,KAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,GAAc;wBACxE,OAAO,CAAC,SAAS,GAAG,GAAG,CAAC,GAAG,CAAC;oBAC9B,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;gBAEH,KAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,UAAC,GAAiB;oBACjF,YAAY,GAAG,GAAG,CAAC;oBACnB,OAAO,CAAC,YAAY,GAAG,YAAY,CAAC,SAAS,CAAC;gBAChD,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;YACpC,KAAI,CAAC,YAAY,CAAC,IAAI,GAAG,KAAI,CAAC,MAAM,CAAC;YACrC,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC;aAC/B;YACD,IAAI,SAAS,EAAE;gBACb,KAAI,CAAC,YAAY,CAAC,SAAS,GAAG,SAAS,CAAC;aACzC;QACH,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gCAAS,GAAT,UAAU,EAAE;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,cAAS,EAAI,CAAC,CAAC;IACjD,CAAC;IAED,kCAAW,GAAX,UAAY,EAAE,EAAE,KAAK;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,EAAE,KAAK,CAAC,CAAC;IAC1D,CAAC;IAED,kCAAW,GAAX,UAAY,EAAE;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,CAAC,CAAC;IACtD,CAAC;IAED,wCAAiB,GAAjB,UAAkB,IAAY;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,IAAI,CAAC,GAAG,6BAAwB,IAAM,CAAC,CAAC;IAC3E,CAAC;IAED,6CAAsB,GAAtB,UAAuB,IAAY;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,IAAI,CAAC,GAAG,kCAA6B,IAAM,CAAC,CAAC;IAChF,CAAC;IA9EU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAU0B,+DAAU;YACA,+DAAc;YACT,yEAAmB;YACtB,mEAAgB;OAZ3C,YAAY,CAgFxB;IAAD,mBAAC;CAAA;AAhFwB;;;;;;;;;;;;;;;;;;;ACfkB;AACwB;AAKnE;IAEE,6BAAmB,QAAqB;QAArB,aAAQ,GAAR,QAAQ,CAAa;QAExC,UAAK,GAAG,YAAY,CAAC;QAErB,WAAM,GAAsB;YAC1B,QAAQ,EAAE,IAAI;YACd,kBAAkB,EAAE,OAAO;YAC3B,gBAAgB,EAAE,KAAK;SACxB,CAAC;IAR0C,CAAC;IAU7C,qCAAO,GAAP,UAAQ,GAAG;QACT,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;QACtD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,CAAC;IAED,kCAAI,GAAJ,UAAK,GAAG;QACN,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;QACnD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,CAAC;IApBU,mBAAmB;QAH/B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG6B,6DAAW;OAF7B,mBAAmB,CAqB/B;IAAD,0BAAC;CAAA;AArB+B;;;;;;;;;;;;;;;;;;;;ACNW;AACmC;AAE5B;AAMlD;IAOE,+BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,QAAG,GAAG,6CAA6C,CAAC;QAG1D,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,qBAAqB,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAC5E,CAAC;IAED,8CAAc,GAAd;QACE,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,aAAa,EAAf,CAAe,CAAC,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,KAAK,IAAK,UAAG,GAAG,KAAK,EAAX,CAAW,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC1G,CAAC;IAED,4BAA4B;IAC5B,sDAAsB,GAAtB,UAAuB,SAAiB,EAAE,IAAc,EAAE,SAAwB;QAAlF,iBAqBC;QApBC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAsB,IAAI,CAAC,GAAG,UAAO,CAAC,CAAC,SAAS,CAAC,aAAG;YAC/D,IAAM,GAAG,GAAG,iBAAiB,CAAC;YAC9B,KAAI,CAAC,eAAe,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YAChC,IAAI,KAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnC,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;gBACtD,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,SAAS,KAAK,SAAS,EAAzB,CAAyB,CAAC,CAAC;aACpF;YACD,KAAI,CAAC,qBAAqB,CAAC,IAAI,GAAG,KAAI,CAAC,eAAe,CAAC;YACvD,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,qBAAqB,CAAC,IAAI,GAAG,IAAI,CAAC;aACxC;YACD,IAAI,SAAS,EAAE;gBACb,KAAI,CAAC,qBAAqB,CAAC,SAAS,GAAG,SAAS,CAAC;aAClD;QAGH,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iBAAiB;IACjB,iDAAiB,GAAjB,UAAkB,cAA8B;QAC9C,IAAM,OAAO,GAAG,EAAE,cAAc,kBAAE,CAAC;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,SAAM,EAAE,OAAO,CAAC,CAAC;IACpD,CAAC;IAED,gBAAgB;IAChB,oDAAoB,GAApB,UAAqB,EAAU;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,CAAC,CAAC;IACtD,CAAC;IAED,gBAAgB;IAChB,oDAAoB,GAApB,UAAqB,EAAU,EAAE,cAA8B;QAC7D,IAAM,OAAO,GAAG;YACd,cAAc;SACf,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,EAAE,OAAO,CAAC,CAAC;IAC5D,CAAC;IAzDU,qBAAqB;QAHjC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAQ0B,+DAAU;OAPzB,qBAAqB,CA0DjC;IAAD,4BAAC;CAAA;AA1DiC;;;;;;;;;;;;;;;;;;;;ACTS;AAEmC;AAC5B;AAMlD;IAME,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAL5B,QAAG,GAAG,uCAAuC,CAAC;QAMpD,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,eAAe,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAChE,CAAC;IAED,qBAAqB;IACrB,0CAAgB,GAAhB,UAAiB,IAAc,EAAE,SAAwB;QAAzD,iBAkBC;QAjBC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,IAAI,CAAC,GAAG,UAAO,CAAC,CAAC,SAAS,CAAC,aAAG;YACzD,IAAM,GAAG,GAAG,WAAW,CAAC;YACxB,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YAC1B,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;YAC1C,KAAI,CAAC,eAAe,CAAC,IAAI,GAAG,KAAI,CAAC,SAAS,CAAC;YAC3C,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,eAAe,CAAC,IAAI,GAAG,IAAI,CAAC;aAClC;YACD,IAAI,SAAS,EAAE;gBACb,KAAI,CAAC,eAAe,CAAC,SAAS,GAAG,SAAS,CAAC;aAC5C;QAGH,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mBAAmB;IACnB,qCAAW,GAAX,UAAY,QAAkB;QAC5B,IAAM,OAAO,GAAG,EAAE,QAAQ,YAAE,CAAC;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,SAAM,EAAE,OAAO,CAAC,CAAC;IACpD,CAAC;IAED,kBAAkB;IAClB,wCAAc,GAAd,UAAe,EAAU;QAEvB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,CAAC,CAAC;IACtD,CAAC;IAED,kBAAkB;IAClB,wCAAc,GAAd,UAAe,EAAU,EAAE,QAAkB;QAC3C,IAAM,OAAO,GAAG;YACd,QAAQ;SACT,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,EAAE,OAAO,CAAC,CAAC;IAC5D,CAAC;IAED,0CAAgB,GAAhB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,mBAAgB,CAAC,CAAC;IACpD,CAAC;IAvDU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAO0B,+DAAU;OANzB,eAAe,CAwD3B;IAAD,sBAAC;CAAA;AAxD2B;;;;;;;;;;;;;;;;;;;;;ACTe;AAEmC;AAC5B;AACK;AAQvD;IAQE,8BAAoB,IAAgB,EAChB,gBAAkC;QADlC,SAAI,GAAJ,IAAI,CAAY;QAChB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAH9C,QAAG,GAAG,4CAA4C,CAAC;QAIzD,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,gBAAgB,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACtE,CAAC;IAED,2CAAY,GAAZ,UAAa,SAAS;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,IAAI,CAAC,GAAG,SAAM,EAAE,SAAS,CAAC,CAAC;IAC3D,CAAC;IAED,qCAAM,GAAN,UAAO,KAAa;QAClB,IAAM,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3B,IAAI,GAAG,GAAG,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QAC5B,GAAG,EAAE,CAAC;QACN,IAAM,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC;QACzB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,oDAAqB,GAArB,UAAsB,EAAU;QAC9B,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC;QAC1C,IAAM,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC;QAC7C,IAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,GAAG,KAAK,EAAE,EAAZ,CAAY,CAAC,CAAC,CAAC,CAAC,CAAC;QAChD,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAM,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,SAAS,KAAK,MAAM,CAAC,GAAG,EAA1B,CAA0B,CAAC,CAAC;QACxE,IAAI,CAAC,CAAC;QACN,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/B,GAAG,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC;YAC7D,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,EAAE,CAAC;SACvB;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,iBAAc,EAAE,GAAG,CAAC,CAAC;IACvD,CAAC;IAED,sCAAO,GAAP,UAAQ,KAAa;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,GAAG,iBAAY,KAAO,CAAC,CAAC;IAC5D,CAAC;IAED,+CAAgB,GAAhB,UAAiB,IAAc,EAAE,SAAwB;QAAzD,iBA0BC;QAzBC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAqB,IAAI,CAAC,GAAG,UAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAAqB;YACjF,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,SAAoB,CAAC;YACzB,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAC,OAAsB;gBACjD,KAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,GAAc;oBACxE,SAAS,GAAG,GAAG,CAAC;oBAChB,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC,GAAG,CAAC;gBACpC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAGH,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;YACpD,KAAI,CAAC,gBAAgB,CAAC,IAAI,GAAG,KAAI,CAAC,cAAc,CAAC;YACjD,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,gBAAgB,CAAC,IAAI,GAAG,IAAI,CAAC;aACnC;YACD,IAAI,SAAS,EAAE;gBACb,KAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,SAAS,CAAC;aAC7C;QAGH,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,4CAAa,GAAb,UAAc,EAAE;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,cAAS,EAAI,CAAC,CAAC;IACjD,CAAC;IAED,8CAAe,GAAf,UAAgB,EAAE,EAAE,SAAS;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,EAAE,SAAS,CAAC,CAAC;IAC9D,CAAC;IAED,kDAAmB,GAAnB,UAAoB,EAAE;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,CAAC,CAAC;IACtD,CAAC;IAED;;OAEG;IACH,iDAAkB,GAAlB,UAAmB,SAAiB;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAqB,IAAI,CAAC,GAAG,8BAAyB,SAAW,CAAC,CAAC;IACzF,CAAC;IAzFU,oBAAoB;QAHhC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAS0B,+DAAU;YACE,mEAAgB;OAT3C,oBAAoB,CA0FhC;IAAD,2BAAC;CAAA;AA1FgC;;;;;;;;;;;;;;;;;;;;;;ACZU;AACmC;AAE5B;AAGQ;AAEG;AAK7D;IAaE,4BACU,IAAgB,EAChB,YAAiC;QADjC,SAAI,GAAJ,IAAI,CAAY;QAChB,iBAAY,GAAZ,YAAY,CAAqB;QANnC,QAAG,GAAG,sCAAsC,CAAC;QAC7C,aAAQ,GAAG,oCAAoC,CAAC;QAChD,eAAU,GAAG,sCAAsC,CAAC;QAa5D,iBAAY,GAAG;YACb,IAAM,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;YAC5B,IAAI,IAAI,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAC/C,IAAM,IAAI,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACjC,IAAM,EAAE,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YAC9D,IAAM,SAAS,GAAG,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAChD,IAAI,KAAK,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE;gBAC9B,KAAK,GAAG,IAAI,CAAC;aACd;iBAAM,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE;gBACtC,KAAK,GAAG,IAAI,CAAC;aACd;iBAAM,IAAI,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,EAAE,CAAC,EAAE;gBACzC,KAAK,GAAG,IAAI,CAAC;aACd;iBAAM,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,EAAE;gBACpC,KAAK,GAAG,IAAI,CAAC;gBAAC,IAAI,GAAG,SAAS,CAAC;aAChC;YACD,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC;QAzBC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,kBAAkB,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACpE,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;IAC7B,CAAC;IAqBD,yCAAY,GAAZ,UAAa,UAAe,EAAE,SAAiB,EAAE,MAAe,EAAE,aAA8B;QAAhG,iBA2BC;QA1BC,IAAM,QAAQ,GAAG;YACf,GAAG,EAAE,UAAU,CAAC,WAAW;YAC3B,GAAG,EAAE,UAAU,CAAC,YAAY;SAC7B,CAAC;gCACO,EAAE;YACT,OAAK,gBAAgB,CAAC,EAAE,CAAC,GAAG,IAAI,qEAAW,EAAE,CAAC;YAC9C,OAAK,gBAAgB,CAAC,EAAE,CAAC,CAAC,SAAS,GAAG,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAC5D,OAAK,gBAAgB,CAAC,EAAE,CAAC,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAC9C,IAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,SAAS,KAAK,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC,EAArC,CAAqC,CAAC,CAAC;YACtE,OAAK,gBAAgB,CAAC,EAAE,CAAC,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;YACtD,OAAK,gBAAgB,CAAC,EAAE,CAAC,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;YACtD,IAAM,cAAc,GAAG,aAAa,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,SAAS,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,EAAhC,CAAgC,CAAC,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,eAAe,KAAK,IAAI,EAA1B,CAA0B,CAAC,CAAC;YAC3H,OAAK,gBAAgB,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;;;QAR1D,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,EAAE;oBAA3C,EAAE;SASV;QAED,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAC1D,aAAG;YACD,KAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC;YACpC,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC;QAChE,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnC,CAAC,CACF,CAAC;IAEJ,CAAC;IAED,2CAAc,GAAd,UAAe,WAAW;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,IAAI,CAAC,GAAG,oBAAiB,EAAE,WAAW,CAAC,CAAC;IACxE,CAAC;IAED,mDAAsB,GAAtB,UAAuB,WAAW;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,IAAI,CAAC,GAAG,4BAAyB,EAAE,WAAW,CAAC,CAAC;IAChF,CAAC;IAED,gDAAmB,GAAnB,UAAoB,SAAiB,EAAE,IAAc,EAAE,SAAwB;QAA/E,iBAiBC;QAhBC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,IAAI,CAAC,GAAG,yBAAoB,SAAW,CAAC,CAAC,SAAS,CAAC,UAAC,IAAe;YAC7F,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;YAChD,KAAI,CAAC,kBAAkB,CAAC,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;YACjD,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,kBAAkB,CAAC,IAAI,GAAG,IAAI,CAAC;aACrC;YACD,IAAI,SAAS,EAAE;gBACb,KAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,SAAS,CAAC;aAC/C;QAGH,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kCAAK,GAAL;QACE,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,kBAAkB,CAAC,IAAI,GAAG,EAAE,CAAC;IACpC,CAAC;IAED,2CAAc,GAAd;QAAA,iBAYC;QAXC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,IAAI,CAAC,QAAQ,UAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAAa;YACtE,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,CAAC;YACN,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACvC,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;aAC1C;QACH,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,+CAAkB,GAAlB;QAAA,iBAaC;QAZC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,UAAU,0BAAuB,CAAC,CAAC,SAAS,CAAC,aAAG;YACpE,IAAM,GAAG,GAAG,WAAW,CAAC;YACxB,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,WAAC;gBAC7B,OAAO;oBACL,GAAG,EAAE,CAAC,CAAC,GAAG;oBACV,GAAG,EAAE,CAAC,CAAC,YAAY;iBACpB,CAAC;YACJ,CAAC,CAAC,CAAC;QACL,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,4CAAe,GAAf,UAAgB,EAAE;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,yBAAoB,EAAI,CAAC,CAAC;IAC5D,CAAC;IAED,8CAAiB,GAAjB,UAAkB,EAAE,EAAE,KAAK;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,2BAAsB,EAAI,EAAE,KAAK,CAAC,CAAC;IACrE,CAAC;IAED,8CAAiB,GAAjB,UAAkB,EAAE;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,GAAG,2BAAsB,EAAI,CAAC,CAAC;IACjE,CAAC;IAGD,oBAAoB;IACpB,4CAAe,GAAf;QACE,IAAM,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,4BAAuB,KAAO,CAAC,CAAC;IAClE,CAAC;IAED,yBAAyB;IACzB,iDAAoB,GAApB;QACE,IAAM,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,iCAA4B,KAAO,CAAC,CAAC;IACvE,CAAC;IA5JU,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAegB,+DAAU;YACF,yEAAmB;OAfhC,kBAAkB,CA6J9B;IAAD,yBAAC;CAAA;AA7J8B;;;;;;;;;;;;;;;;;;;;;ACbY;AACO;AAEK;AAEI;AAK3D;IAOE,wBAAoB,IAAgB,EACjB,kBAAsC;QADrC,SAAI,GAAJ,IAAI,CAAY;QACjB,uBAAkB,GAAlB,kBAAkB,CAAoB;QANjD,QAAG,GAAG,sCAAsC,CAAC;QAOnD,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,aAAa,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC7D,CAAC;IAGD,qCAAY,GAAZ;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,kBAAe,EAAE,OAAO,CAAC,CAAC;IAC5D,CAAC;IAED,uCAAc,GAAd,UAAe,OAAgB;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,oBAAiB,EAAE,OAAO,CAAC,CAAC;IAC/D,CAAC;IAED,0CAAiB,GAAjB;QAAA,iBAaC;QAZC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,IAAI,CAAC,GAAG,SAAM,CAAC,CAAC,SAAS,CAAC,aAAG;YACvD,IAAM,GAAG,GAAG,QAAQ,CAAC;YACrB,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YACzB,KAAI,CAAC,aAAa,CAAC,IAAI,GAAG,KAAI,CAAC,QAAQ,CAAC;YACxC,IAAI,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;gBACpB,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;gBAC7C,KAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;aACnE;QACH,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,sCAAa,GAAb,UAAc,EAAE,EAAE,WAAW;QAC3B,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAE,SAAI,WAAa,EAAE,WAAW,CAAC,CAAC;IAC/E,CAAC;IAED,kDAAyB,GAAzB,UAA0B,UAAkB,EAAE,SAAiB;QAC7D,IAAM,OAAO,GAAG;YACd,SAAS;YACT,UAAU;SACX,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,qBAAkB,EAAE,OAAO,CAAC,CAAC;IAC/D,CAAC;IAED,6CAAoB,GAApB,UAAqB,UAAe,EAAE,SAAiB;QACrD,IAAM,OAAO,GAAG;YACd,SAAS;YACT,SAAS,EAAE,CAAC,UAAU,CAAC;SACxB,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,mBAAgB,EAAE,OAAO,CAAC,CAAC;IAC7D,CAAC;IA1DU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAQ0B,+DAAU;YACG,uEAAkB;OAR9C,cAAc,CA6D1B;IAAD,qBAAC;CAAA;AA7D0B;;;;;;;;;;;;;;;;;;;;;ACVgB;AAEmC;AAC5B;AAEK;AAMvD;IAOE,6BAAoB,IAAgB,EAChB,gBAAkC;QADlC,SAAI,GAAJ,IAAI,CAAY;QAChB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAH9C,QAAG,GAAG,0CAA0C,CAAC;QAIvD,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,kBAAkB,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACtE,CAAC;IAED,4CAAc,GAAd;QACE,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,UAAU,EAAZ,CAAY,CAAC,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,KAAK,IAAK,UAAG,GAAG,KAAK,EAAX,CAAW,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACpG,CAAC;IAED,wBAAwB;IACxB,iDAAmB,GAAnB,UAAoB,IAAc,EAAE,SAAwB;QAA5D,iBA2BC;QA1BC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,IAAI,CAAC,GAAG,UAAO,CAAC,CAAC,SAAS,CAAC,aAAG;YAC5D,IAAM,GAAG,GAAG,cAAc,CAAC;YAC3B,KAAI,CAAC,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YAC7B,IAAI,KAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;gBAChC,IAAI,WAAoB,CAAC;gBACzB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAC,OAAoB;oBAC7C,KAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,IAAe;wBACzE,WAAS,GAAG,IAAI,CAAC;wBACjB,OAAO,CAAC,SAAS,GAAG,WAAS,CAAC,GAAG,CAAC;oBACpC,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;aACjD;YACD,KAAI,CAAC,kBAAkB,CAAC,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;YACjD,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,kBAAkB,CAAC,IAAI,GAAG,IAAI,CAAC;aACrC;YACD,IAAI,SAAS,EAAE;gBACb,KAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,SAAS,CAAC;aAC/C;QAGH,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,sCAAsC;IACtC,qDAAuB,GAAvB,UAAwB,SAAiB,EAAE,IAAc,EAAE,SAAwB;QAAnF,iBA4BC;QA3BC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,IAAI,CAAC,GAAG,UAAO,CAAC,CAAC,SAAS,CAAC,aAAG;YAC5D,IAAM,GAAG,GAAG,cAAc,CAAC;YAC3B,KAAI,CAAC,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YAC7B,IAAI,KAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;gBAChC,IAAI,WAAoB,CAAC;gBACzB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAC,OAAoB;oBAC7C,KAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,IAAe;wBACzE,WAAS,GAAG,IAAI,CAAC;wBACjB,OAAO,CAAC,SAAS,GAAG,WAAS,CAAC,GAAG,CAAC;oBACpC,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,SAAS,KAAK,SAAS,EAAzB,CAAyB,CAAC,CAAC;gBAC7E,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;aACjD;YACD,KAAI,CAAC,kBAAkB,CAAC,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;YACjD,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,kBAAkB,CAAC,IAAI,GAAG,IAAI,CAAC;aACrC;YACD,IAAI,SAAS,EAAE;gBACb,KAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,SAAS,CAAC;aAC/C;QAGH,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,sBAAsB;IACtB,4CAAc,GAAd,UAAe,WAAwB;QACrC,IAAM,OAAO,GAAG,EAAE,WAAW,eAAE,CAAC;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,SAAM,EAAE,OAAO,CAAC,CAAC;IACpD,CAAC;IAED,qBAAqB;IACrB,+CAAiB,GAAjB,UAAkB,EAAU;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,CAAC,CAAC;IACtD,CAAC;IAED,qBAAqB;IACrB,+CAAiB,GAAjB,UAAkB,EAAU,EAAE,WAAwB;QACpD,IAAM,OAAO,GAAG;YACd,WAAW;SACZ,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,EAAE,OAAO,CAAC,CAAC;IAC5D,CAAC;IA/FU,mBAAmB;QAH/B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAQ0B,+DAAU;YACE,mEAAgB;OAR3C,mBAAmB,CAgG/B;IAAD,0BAAC;CAAA;AAhG+B;;;;;;;;;;;;;;;;;;;;ACXW;AACmC;AAE5B;AAMlD;IAOE,gCAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,QAAG,GAAG,8CAA8C,CAAC;QAG3D,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,sBAAsB,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IAC9E,CAAC;IAED,+CAAc,GAAd;QACE,IAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,KAAK,KAAK,KAAK,EAAjB,CAAiB,CAAC,CAAC;QACpE,OAAO,MAAM,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,SAAS,EAAX,CAAW,CAAC,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,KAAK,IAAK,UAAG,GAAG,KAAK,EAAX,CAAW,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACxF,CAAC;IAED,uBAAuB;IACvB,wDAAuB,GAAvB,UAAwB,IAAc,EAAE,SAAwB;QAAhE,iBAkBC;QAjBC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAuB,IAAI,CAAC,GAAG,UAAO,CAAC,CAAC,SAAS,CAAC,aAAG;YAChE,IAAM,GAAG,GAAG,kBAAkB,CAAC;YAC/B,KAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YACjC,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;YACxD,KAAI,CAAC,sBAAsB,CAAC,IAAI,GAAG,KAAI,CAAC,gBAAgB,CAAC;YACzD,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,sBAAsB,CAAC,IAAI,GAAG,IAAI,CAAC;aACzC;YACD,IAAI,SAAS,EAAE;gBACb,KAAI,CAAC,sBAAsB,CAAC,SAAS,GAAG,SAAS,CAAC;aACnD;QAGH,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qCAAqC;IACrC,4DAA2B,GAA3B,UAA4B,SAAiB,EAAE,IAAc,EAAE,SAAwB;QAAvF,iBAmBC;QAlBC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAuB,IAAI,CAAC,GAAG,UAAO,CAAC,CAAC,SAAS,CAAC,aAAG;YAChE,IAAM,GAAG,GAAG,kBAAkB,CAAC;YAC/B,KAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YACjC,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;YACxD,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,SAAS,KAAK,SAAS,EAAzB,CAAyB,CAAC,CAAC;YACrF,KAAI,CAAC,sBAAsB,CAAC,IAAI,GAAG,KAAI,CAAC,gBAAgB,CAAC;YACzD,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,sBAAsB,CAAC,IAAI,GAAG,IAAI,CAAC;aACzC;YACD,IAAI,SAAS,EAAE;gBACb,KAAI,CAAC,sBAAsB,CAAC,SAAS,GAAG,SAAS,CAAC;aACnD;QAGH,CAAC,EACC,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,0BAA0B;IAC1B,mDAAkB,GAAlB,UAAmB,eAAgC;QACjD,IAAM,OAAO,GAAG,EAAE,eAAe,mBAAE,CAAC;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,SAAM,EAAE,OAAO,CAAC,CAAC;IACpD,CAAC;IAED,yBAAyB;IACzB,sDAAqB,GAArB,UAAsB,EAAU;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,CAAC,CAAC;IACtD,CAAC;IAED,yBAAyB;IACzB,sDAAqB,GAArB,UAAsB,EAAU,EAAE,eAAgC;QAChE,IAAM,OAAO,GAAG;YACd,eAAe;SAChB,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,EAAE,OAAO,CAAC,CAAC;IAC5D,CAAC;IA7EU,sBAAsB;QAHlC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAQ0B,+DAAU;OAPzB,sBAAsB,CA8ElC;IAAD,6BAAC;CAAA;AA9EkC;;;;;;;;;;;;;;;;;;;ACTkB;AAER;AAG7C;IAEE,iCAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;IAAI,CAAC;IAE3C,2CAAS,GAAT,UAAU,GAAG,EAAE,IAAI;QACjB,IAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,yDAAW,CAAC,CAAC;QACnD,IAAM,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC;YAC7B,UAAU,EAAE;gBACV,aAAa,EAAE,YAAU,WAAW,CAAC,QAAQ,EAAI;aAClD;SACF,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;IACnC,CAAC;IAZU,uBAAuB;QADnC,gEAAU,EAAE;+EAGmB,sDAAQ;OAF3B,uBAAuB,CAanC;IAAD,8BAAC;CAAA;AAbmC;;;;;;;;;;;;;;;;;;;ACLO;AACoB;AAO/D;IAKE,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAH5B,QAAG,GAAG,gGAAgG;YAC9F,wCAAwC,CAAC;IAIzD,CAAC;IAED,mCAAU,GAAV;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,GAAG,CAAC,CAAC;IAC1C,CAAC;IAXU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAM0B,+DAAU;OALzB,cAAc,CAY1B;IAAD,qBAAC;CAAA;AAZ0B;;;;;;;;;;;;;ACR3B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AACzD;AAC2B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvQXV0aGVudGlmaWNhdGlvbi9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<ng-progress [positionUsing]=\\\"'marginLeft'\\\" [direction]=\\\"'leftToRightIncreased'\\\" [color]=\\\"'#4286f4'\\\"\\r\\n  [trickleSpeed]=\\\"500\\\" [thick]=\\\"true\\\" [ease]=\\\"'easeInSine'\\\"></ng-progress>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6 mx-auto\\\">\\r\\n        <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n\\r\\n        <!-- form card login -->\\r\\n        <div class=\\\"card rounded-0\\\">\\r\\n          <div class=\\\"card-header\\\">\\r\\n            <h3 class=\\\"mb-0\\\">Login</h3>\\r\\n          </div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <form class=\\\"form\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"uname1\\\">Username</label>\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"loginUserData.email\\\" name=\\\"email\\\" class=\\\"form-control rounded-0\\\" required>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Password</label>\\r\\n                <input type=\\\"password\\\" [(ngModel)]=\\\"loginUserData.password\\\" name=\\\"password\\\" class=\\\"form-control rounded-0\\\"  required>\\r\\n              </div>\\r\\n              <button type=\\\"button\\\" (click)=\\\"loginUser()\\\" class=\\\"btn btn-success float-right\\\">Login</button>\\r\\n            </form>\\r\\n          </div>\\r\\n          <!--/card-block-->\\r\\n        </div>\\r\\n        <!-- /form card login -->\\r\\n\\r\\n      </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../shared/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginUserData = { email: '', password: '' };\n  constructor(\n    private auth: AuthService,\n    private route: Router) { }\n\n  ngOnInit() {\n    if (this.auth.loggedIn()) {\n      this.route.navigate(['/home']);\n    }\n  }\n\n  loginUser() {\n    this.auth.loginUser(this.loginUserData)\n      .subscribe(\n        res => {\n          console.log(res);\n          localStorage.setItem('token', res.token);\n          this.route.navigate(['/home']);\n        },\n        err => console.log(err)\n      );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvQXV0aGVudGlmaWNhdGlvbi9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<ng-progress [positionUsing]=\\\"'marginLeft'\\\" [direction]=\\\"'leftToRightIncreased'\\\" [color]=\\\"'#4286f4'\\\"\\r\\n  [trickleSpeed]=\\\"500\\\" [thick]=\\\"true\\\" [ease]=\\\"'easeInSine'\\\"></ng-progress>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6 mx-auto\\\">\\r\\n        <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n\\r\\n        <!-- form card login -->\\r\\n        <div class=\\\"card rounded-0\\\">\\r\\n          <div class=\\\"card-header\\\">\\r\\n            <h3 class=\\\"mb-0\\\">Register</h3>\\r\\n          </div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <form class=\\\"form\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"uname1\\\">Username</label>\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"registerUserData.email\\\" name=\\\"email\\\" class=\\\"form-control rounded-0\\\"\\r\\n                  required>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Password</label>\\r\\n                <input type=\\\"password\\\" [(ngModel)]=\\\"registerUserData.password\\\" name=\\\"password\\\"\\r\\n                  class=\\\"form-control rounded-0\\\" required>\\r\\n              </div>\\r\\n              <button type=\\\"button\\\" (click)=\\\"registerUser()\\\" class=\\\"btn btn-primary float-right\\\">Register</button>\\r\\n            </form>\\r\\n          </div>\\r\\n          <!--/card-block-->\\r\\n        </div>\\r\\n        <!-- /form card login -->\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../shared/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerUserData = { email: '', password: ''};\n  constructor(private auth: AuthService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  registerUser() {\n    this.auth.registerUser(this.registerUserData)\n    .subscribe(\n      res => {\n        console.log(res);\n        localStorage.setItem('token', res.token);\n        this.router.navigate(['/home']);\n      },\n      err => console.log(err)\n    );\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvU2hhcmVkL2NvbmZpcm0tZGVsZXRlL2NvbmZpcm0tZGVsZXRlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div mat-dialog-content>\\r\\n  <p>Voulez-vous vraiment supprimer ce {{msg}}</p>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <span class=\\\"fill-remaining-space\\\"></span>\\r\\n  <button mat-button (click)=\\\"annuler()\\\">Annuler</button>\\r\\n  <button mat-raised-button color=\\\"primary\\\" cdkFocusInitial (click)=\\\"delete()\\\">Ok</button>\\r\\n  <span class=\\\"fill-remaining-space\\\"></span>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { ClientService } from 'app/shared/services/client.service';\r\nimport { NotificationService } from 'app/shared/services/notification.service';\r\nimport { CarteBonTypeService } from 'app/shared/services/carte-bon-type.service';\r\nimport { ReleveIndexService } from 'app/shared/services/releveIndex.service';\r\nimport { IndexService } from 'app/shared/services/index.service';\r\nimport { CiterneService } from 'app/shared/services/citerne.service';\r\nimport { DistributeurService } from 'app/shared/services/distributeur.service';\r\nimport { PrixCarburantService } from 'app/shared/services/prix-carburant.service';\r\nimport { PompisteService } from 'app/shared/services/pompiste.service';\r\nimport { EventService } from 'app/shared/services/event.service';\r\nimport { CarburantService } from 'app/shared/services/carburant.service';\r\nimport { Citerne } from 'app/shared/models/citerne.model';\r\nimport { PrixCarburant } from 'app/shared/models/prixcarburant';\r\nimport { Index } from 'app/shared/models/Index.model';\r\nimport { SessionService } from 'app/shared/services/session.service';\r\nimport { CarteBonService } from 'app/shared/services/carte-bon.service';\r\nimport { BonValeurService } from 'app/shared/services/bon-valeur.service';\r\nimport { ChequeService } from 'app/shared/services/cheque.service';\r\nimport { CreditService } from 'app/shared/services/credit.service';\r\nimport { PayementCreditService } from 'app/shared/services/payement-credit.service';\r\nimport { StegEtAutresService } from 'app/shared/services/steg-et-autres.service';\r\n\r\n@Component({\r\n  selector: 'app-confirm-delete',\r\n  templateUrl: './confirm-delete.component.html',\r\n  styleUrls: ['./confirm-delete.component.css']\r\n})\r\nexport class ConfirmDeleteComponent implements OnInit {\r\n\r\n  public id: string;\r\n  public msg: string;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ConfirmDeleteComponent>,\r\n    @Inject(MAT_DIALOG_DATA) private data: any,\r\n    private clientService: ClientService,\r\n    private cardTypeService: CarteBonTypeService,\r\n    private releveIndexService: ReleveIndexService,\r\n    private indexService: IndexService,\r\n    private citerneService: CiterneService,\r\n    private distributeurService: DistributeurService,\r\n    private sessionService: SessionService,\r\n    private prixcarburantService: PrixCarburantService,\r\n    private pompisteService: PompisteService,\r\n    private notifService: NotificationService,\r\n    private eventService: EventService,\r\n    private carburantService: CarburantService,\r\n    private carteBonService: CarteBonService,\r\n    private bonValeurService: BonValeurService,\r\n    private chequeService: ChequeService,\r\n    private creditService: CreditService,\r\n    private payementCreditService: PayementCreditService,\r\n    private stegEtAutreService: StegEtAutresService) {\r\n    this.id = data.id;\r\n    this.msg = data.msg;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.sessionService.getCurrentSession();\r\n  }\r\n\r\n  delete() {\r\n    if (this.msg === 'client') {\r\n      this.deleteClient();\r\n    } else if (this.msg === 'type carte bon') {\r\n      this.deleteCardType();\r\n    } else if (this.msg === 'relevé index') {\r\n      this.deleteReleveIndex();\r\n    } else if (this.msg === 'index') {\r\n      this.deleteIndex();\r\n    } else if (this.msg === 'citerne') {\r\n      this.deleteCiterne();\r\n    } else if (this.msg === 'distributeur') {\r\n      this.deleteDistributeur();\r\n    } else if (this.msg === 'Prix carburant') {\r\n      this.deletePrixCarburant();\r\n    } else if (this.msg === 'Pompiste') {\r\n      this.deletePompiste();\r\n    } else if (this.msg === 'Evenement') {\r\n      this.deleteEvent();\r\n    } else if (this.msg === 'carburant') {\r\n      this.deleteCarburant();\r\n    } else if (this.msg === 'carteBon') {\r\n      this.deleteCarteBon();\r\n    } else if (this.msg === 'bonValeur') {\r\n      this.deleteBonValeur();\r\n    } else if (this.msg === 'cheque') {\r\n      this.deleteCheque();\r\n    } else if (this.msg === 'credit') {\r\n      this.deleteCredit();\r\n    } else if (this.msg === 'recette-carteBon') {\r\n      this.deleteRecetteCarteBon();\r\n    } else if (this.msg === 'recette-bonValeur') {\r\n      this.deleteRecetteBonValeur();\r\n    } else if (this.msg === 'recette-cheque') {\r\n      this.deleteRecetteCheque();\r\n    } else if (this.msg === 'Payement credit') {\r\n      this.deletePayementCredit();\r\n    } else if (this.msg === 'stegEtAutre') {\r\n      this.deleteStegEtAutre();\r\n    } else if (this.msg === 'recette-stegEtAutre') {\r\n      this.deleteRecetteStegEtAutre();\r\n    }\r\n  }\r\n\r\n  annuler(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  deletePrixCarburant(): void {\r\n    this.prixcarburantService.deletePrixCarburant(this.id).subscribe(res => {\r\n      this.prixcarburantService.getCarburantList();\r\n      this.dialogRef.close();\r\n      this.notifService.success(`${this.msg} supprimé avec succés`);\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  deleteStegEtAutre(): void {\r\n    this.stegEtAutreService.deleteStegEtAutre(this.id).subscribe(res => {\r\n      this.stegEtAutreService.getStegEtAutresList();\r\n      this.dialogRef.close();\r\n      this.notifService.success(`${this.msg} supprimé avec succés`);\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  deleteRecetteStegEtAutre(): void {\r\n    this.stegEtAutreService.deleteStegEtAutre(this.id).subscribe(res => {\r\n      this.stegEtAutreService.getStegEtAutresListById(this.sessionService.currentSessionId);\r\n      this.dialogRef.close();\r\n      this.notifService.success(`${this.msg} supprimé avec succés`);\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  deleteCarburant(): void {\r\n    this.citerneService.getCiterneByCarburant(this.id).subscribe(data => {\r\n// tslint:disable-next-line: no-string-literal\r\n      data['citernes'].forEach((element: Citerne) => {\r\n        element.carburant = '5ce8b2ac441ba4055c2bd9d9';\r\n        this.citerneService.updateCiterne(element._id, element).subscribe(res => {\r\n        });\r\n      });\r\n    });\r\n    this.prixcarburantService.getCarburantByPrix(this.id).subscribe(data => {\r\n// tslint:disable-next-line: no-string-literal\r\n      data['prix'].forEach((element: PrixCarburant) => {\r\n        this.prixcarburantService.deletePrixCarburant(element._id).subscribe(res => {\r\n        });\r\n      });\r\n    });\r\n    this.carburantService.deleteCarburant(this.id).subscribe(res => {\r\n      this.carburantService.getCarburantsList();\r\n      this.dialogRef.close();\r\n      this.notifService.success(`${this.msg} supprimé avec succés`);\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  deleteDistributeur(): void {\r\n    this.indexService.getIndexByDistributeur(this.id).subscribe((data: Index[]) => {\r\n      data.forEach((element: Index) => {\r\n        this.indexService.deleteIndex(element._id).subscribe(res => {\r\n        });\r\n      });\r\n    });\r\n    this.distributeurService.deleteDistributeur(this.id).subscribe(res => {\r\n      this.distributeurService.getDistributeursList();\r\n      this.dialogRef.close();\r\n      this.notifService.success(`${this.msg} supprimé avec succés`);\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  deleteCiterne(): void {\r\n    this.indexService.getIndexByCiterne(this.id).subscribe((data: Index[]) => {\r\n      data.forEach((element: Index) => {\r\n        this.indexService.deleteIndex(element._id).subscribe(res => {\r\n        });\r\n      });\r\n    });\r\n    this.citerneService.deleteCiterne(this.id).subscribe(res => {\r\n      this.citerneService.getCiternesList();\r\n      this.dialogRef.close();\r\n      this.notifService.success(`${this.msg} supprimé avec succés`);\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  deleteReleveIndex(): void {\r\n    this.releveIndexService.deleteReleveIndex(this.id).subscribe(res => {\r\n      this.releveIndexService.getReleveIndexsList(this.sessionService.currentSessionId);\r\n      this.dialogRef.close();\r\n      this.notifService.success(`${this.msg} supprimé avec succés`);\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  deleteCarteBon(): void {\r\n    this.carteBonService.deleteCarteBon(this.id).subscribe(res => {\r\n      this.carteBonService.getCarteBonsList();\r\n      this.dialogRef.close();\r\n      this.notifService.success(`${this.msg} supprimé avec succés`);\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  deleteCheque(): void {\r\n    this.chequeService.deleteCheque(this.id).subscribe(res => {\r\n      this.chequeService.getChequesList();\r\n      this.dialogRef.close();\r\n      this.notifService.success(`${this.msg} supprimé avec succés`);\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  deleteCredit(): void {\r\n    this.creditService.deleteCredit(this.id).subscribe(res => {\r\n      this.creditService.getCreditsList();\r\n      this.dialogRef.close();\r\n      this.notifService.success(`${this.msg} supprimé avec succés`);\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  deletePayementCredit(): void {\r\n    this.payementCreditService.deletePayementCredit(this.id).subscribe(res => {\r\n      this.payementCreditService.getPayementCreditsList(this.sessionService.currentSessionId);\r\n      this.dialogRef.close();\r\n      this.notifService.success(`${this.msg} supprimé avec succés`);\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  deleteBonValeur(): void {\r\n    this.bonValeurService.deleteBonValeur(this.id).subscribe(res => {\r\n      this.bonValeurService.getBonValeursList();\r\n      this.dialogRef.close();\r\n      this.notifService.success(`${this.msg} supprimé avec succés`);\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  deleteIndex(): void {\r\n    this.indexService.deleteIndex(this.id).subscribe(res => {\r\n      this.indexService.getIndexList();\r\n      this.dialogRef.close();\r\n      this.notifService.success(`${this.msg} supprimé avec succés`);\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  deleteClient(): void {\r\n    this.clientService.deleteClient(this.id).subscribe(res => {\r\n      this.clientService.getClientsList();\r\n      this.dialogRef.close();\r\n      this.notifService.success(`${this.msg} supprimé avec succés`);\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  deleteCardType(): void {\r\n    this.cardTypeService.deleteCardType(this.id).subscribe(res => {\r\n      this.cardTypeService.getCardTypesList();\r\n      this.dialogRef.close();\r\n      this.notifService.success(`${this.msg} supprimé avec succés`);\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  deletePompiste(): void {\r\n    this.pompisteService.deletePompiste(this.id).subscribe(res => {\r\n      this.pompisteService.getpompistesList();\r\n      this.dialogRef.close();\r\n      this.notifService.success(`${this.msg} supprimé avec succés`);\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  deleteEvent(): void {\r\n\r\n    this.eventService.deleteEvent(this.data.event._id).subscribe(res => {\r\n      this.eventService.getEvents();\r\n      this.notifService.success('Evénement supprimé');\r\n      this.dialogRef.close();\r\n    },\r\n    err => {\r\n      console.log(err);\r\n      this.notifService.warn('Erreur');\r\n      this.dialogRef.close();\r\n    });\r\n  }\r\n\r\n  deleteRecetteCarteBon(): void {\r\n    this.carteBonService.deleteCarteBon(this.id).subscribe(res => {\r\n      this.carteBonService.getCarteBonsListById(this.sessionService.currentSessionId);\r\n      this.dialogRef.close();\r\n      this.notifService.success(`${this.msg} supprimé avec succés`);\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  deleteRecetteCheque(): void {\r\n    this.chequeService.deleteCheque(this.id).subscribe(res => {\r\n      this.chequeService.getChequesListById(this.sessionService.currentSessionId);\r\n      this.dialogRef.close();\r\n      this.notifService.success(`${this.msg} supprimé avec succés`);\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  deleteRecetteBonValeur(): void {\r\n    this.bonValeurService.deleteBonValeur(this.id).subscribe(res => {\r\n      this.bonValeurService.getBonValeursListById(this.sessionService.currentSessionId);\r\n      this.dialogRef.close();\r\n      this.notifService.success(`${this.msg} supprimé avec succés`);\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL1JlY2V0dGUvcmVsZXZlSW5kZXgtbGlzdC9yZWxldmVJbmRleC1hZGQvcmVsZXZlSW5kZXgtYWRkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-toolbar>\\r\\n  <span>Ajouter relevé index</span>\\r\\n  <span class=\\\"fill-remaining-space\\\"></span>\\r\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\r\\n    <mat-icon>clear</mat-icon>\\r\\n  </button>\\r\\n</mat-toolbar>\\r\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\" >\\r\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"300px\\\">\\r\\n    <mat-grid-tile>\\r\\n      <div class=\\\"controles-container\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-label>Reference</mat-label>\\r\\n          <mat-select required name=\\\"reference\\\" [(ngModel)]=\\\"releveIndex.reference\\\" (selectionChange)=\\\"getIndexValue(releveIndex.reference)\\\">\\r\\n            <mat-option>None</mat-option>\\r\\n            <mat-option *ngFor=\\\"let name of releveIndexService.list\\\"  [value]=\\\"name\\\" >{{name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n          <mat-error>Reference index is required.</mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Départ index\\\" required disabled type=\\\"number\\\" name=\\\"depart\\\"\\r\\n            [(ngModel)]=\\\"releveIndex.depart\\\">\\r\\n          <mat-error>Départ index is required.</mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Arrivé index\\\" required type=\\\"number\\\" name=\\\"arrive\\\"\\r\\n            [(ngModel)]=\\\"releveIndex.arrive\\\">\\r\\n          <mat-error>Arrivé index is required.</mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Pompiste</mat-label>\\r\\n          <mat-select required name=\\\"pompiste\\\" [(ngModel)]=\\\"releveIndex.pompiste\\\">\\r\\n            <mat-option>None</mat-option>\\r\\n            <mat-option *ngFor=\\\"let p of releveIndexService.pompistes\\\" [value]=\\\"p\\\">{{p.nom}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n          <mat-error>Pompiste is required.</mat-error>\\r\\n        </mat-form-field>\\r\\n        <div class=\\\"button-row\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addReleveIndex()\\\"\\r\\n            [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Ajouter Relevé index</button>\\r\\n          <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-grid-tile>\\r\\n  </mat-grid-list>\\r\\n</form>\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ReleveIndex } from 'app/shared/models/ReleveIndex.model';\r\nimport { MatDialogRef, MatSort, MatPaginator } from '@angular/material';\r\nimport { ReleveIndexService } from 'app/shared/services/releveIndex.service';\r\nimport { NotificationService } from 'app/shared/services/notification.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { IndexService } from 'app/shared/services/index.service';\r\nimport { Index } from 'app/shared/models/Index.model';\r\nimport { PrixCarburantService } from 'app/shared/services/prix-carburant.service';\r\nimport { PrixCarburant } from 'app/shared/models/prixcarburant';\r\nimport { SessionService } from 'app/shared/services/session.service';\r\n\r\n@Component({\r\n  selector: 'app-releve-index-add',\r\n  templateUrl: './releveIndex-add.component.html',\r\n  styleUrls: ['./releveIndex-add.component.css']\r\n})\r\nexport class ReleveIndexAddComponent implements OnInit {\r\n\r\n  public releveIndex: ReleveIndex;\r\n  public carburant: string;\r\n  public indexValue: number;\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<ReleveIndexAddComponent>,\r\n    public releveIndexService: ReleveIndexService,\r\n    public sessionService: SessionService,\r\n    private indexService: IndexService,\r\n    private carburantService: PrixCarburantService,\r\n    private notifService: NotificationService) {\r\n    this.carburant = '';\r\n    this.releveIndex = new ReleveIndex();\r\n    this.indexValue = -1;\r\n  }\r\n\r\n  addReleveIndex() {\r\n    this.indexService.getCarburant(this.releveIndex.reference).subscribe((indexData: Index) => {\r\n      this.carburant = indexData.carburant;\r\n      this.carburantService.getPrix(this.carburant).subscribe((carburantData: PrixCarburant) => {\r\n        this.releveIndex.prix = carburantData.prix;\r\n        this.releveIndexService.addReleveIndex(this.releveIndex)\r\n          .subscribe(\r\n            res => {\r\n              this.releveIndexService.getReleveIndexsList(this.sessionService.currentSessionId );\r\n              this.dialogRef.close();\r\n              this.notifService.success('relevé index ajouter avec succés');\r\n            },\r\n            err => {\r\n              console.log(err);\r\n              this.notifService.warn('Erreur');\r\n            }\r\n          );\r\n      },\r\n        err => {\r\n          {\r\n            console.log(err);\r\n            this.notifService.warn('Erreur');\r\n          }\r\n        });\r\n    },\r\n      err => {\r\n        {\r\n          console.log(err);\r\n          this.notifService.warn('Erreur');\r\n        }\r\n      });\r\n  }\r\n\r\n  getIndexValue(reference: string): void {\r\n    const res = this.releveIndexService.indexs.filter(x => x.reference === reference);\r\n    this.releveIndex.depart = res[0].valeurIndex;\r\n    this.releveIndex.arrive = res[0].valeurIndex;\r\n  }\r\n\r\n  onClose() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onClear(form: NgForm): void {\r\n    form.reset();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.releveIndexService.getIndexsNames();\r\n    this.releveIndexService.getSessionPompiste();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL1JlY2V0dGUvcmVsZXZlSW5kZXgtbGlzdC9yZWxldmVJbmRleC1lZGl0L3JlbGV2ZUluZGV4LWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-toolbar>\\r\\n  <span>Modifier relevé index</span>\\r\\n  <span class=\\\"fill-remaining-space\\\"></span>\\r\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\r\\n    <mat-icon>clear</mat-icon>\\r\\n  </button>\\r\\n</mat-toolbar>\\r\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\r\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"300px\\\">\\r\\n    <mat-grid-tile>\\r\\n      <div class=\\\"controles-container\\\">\\r\\n        <input type=\\\"hidden\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Reference index\\\" disabled required type=\\\"text\\\" name=\\\"reference\\\"\\r\\n            [(ngModel)]=\\\"releveIndex.reference\\\">\\r\\n          <mat-error>Reference index is required.</mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Départ index\\\" required disabled type=\\\"number\\\" name=\\\"depart\\\"\\r\\n            [(ngModel)]=\\\"releveIndex.depart\\\">\\r\\n          <mat-error>Départ index is required.</mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Arrivé index\\\" required type=\\\"number\\\" name=\\\"arrive\\\" (change)=\\\"onChange(releveIndex.arrive)\\\"\\r\\n            [(ngModel)]=\\\"releveIndex.arrive\\\">\\r\\n          <mat-error>Arrivé index is required.</mat-error>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field>\\r\\n          <mat-label>Pompiste</mat-label>\\r\\n          <mat-select required name=\\\"pompiste\\\" [(ngModel)]=\\\"releveIndex.pompiste.nom\\\">\\r\\n            <mat-option>None</mat-option>\\r\\n            <mat-option *ngFor=\\\"let p of releveIndexService.pompistes\\\" [value]=\\\"p._id\\\">{{p.nom}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n          <mat-error>Pompiste is required.</mat-error>\\r\\n        </mat-form-field>\\r\\n        <div class=\\\"button-row\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"angForm.invalid\\\"\\r\\n            (click)=\\\"updateReleveIndex()\\\">Modifier type</button>\\r\\n          <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-grid-tile>\\r\\n  </mat-grid-list>\\r\\n</form>\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { ReleveIndex } from 'app/shared/models/ReleveIndex.model';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { ReleveIndexService } from 'app/shared/services/releveIndex.service';\r\nimport { NotificationService } from 'app/shared/services/notification.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { SessionService } from 'app/shared/services/session.service';\r\n\r\n@Component({\r\n  selector: 'app-releve-index-edit',\r\n  templateUrl: './releveIndex-edit.component.html',\r\n  styleUrls: ['./releveIndex-edit.component.css']\r\n})\r\nexport class ReleveIndexEditComponent implements OnInit {\r\n\r\n  public releveIndex: ReleveIndex;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ReleveIndexEditComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public releveIndexService: ReleveIndexService,\r\n    public sessionService: SessionService,\r\n    private notifservice: NotificationService) {\r\n    this.releveIndex = data.index;\r\n  }\r\n\r\n  onChange(arrive: number) {\r\n    if (arrive < this.releveIndex.depart) {\r\n      this.releveIndex.arrive = this.releveIndex.depart;\r\n      this.notifservice.warn('valeur d\\'arrivé ne peut pas être moins que la valeur de départ');\r\n    }\r\n  }\r\n\r\n  updateReleveIndex(): void {\r\n    // set name for pompiste after id change\r\n    this.releveIndexService.pompistes.forEach(p => {\r\n      if (p._id === this.releveIndex.pompiste._id) {\r\n        this.releveIndex.pompiste.nom = p.nom;\r\n      }\r\n    });\r\n    this.releveIndexService.updateReleveIndex(this.releveIndex._id, this.releveIndex)\r\n      .subscribe(res => {\r\n        this.releveIndexService.getReleveIndexsList(this.sessionService.currentSessionId);\r\n        this.dialogRef.close();\r\n        this.notifservice.success('Relevé index modifié avec succés');\r\n      },\r\n        err => {\r\n          console.log(err);\r\n          this.notifservice.warn('Erreur');\r\n        });\r\n  }\r\n\r\n  onClose() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onClear(form: NgForm): void {\r\n    form.reset();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.releveIndexService.getSessionPompiste();\r\n  }\r\n\r\n}\r\n","module.exports = \".detailsButton {\\r\\n  background: lightgray;\\r\\n  min-width: 90px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQ29tcG9uZW50cy9jaGVjay1jdXJyZW50LXNlc3Npb24vUmVjZXR0ZS9yZWxldmVJbmRleC1saXN0L3JlbGV2ZUluZGV4LWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHFCQUFxQjtFQUNyQixlQUFlO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvQ29tcG9uZW50cy9jaGVjay1jdXJyZW50LXNlc3Npb24vUmVjZXR0ZS9yZWxldmVJbmRleC1saXN0L3JlbGV2ZUluZGV4LWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kZXRhaWxzQnV0dG9uIHtcclxuICBiYWNrZ3JvdW5kOiBsaWdodGdyYXk7XHJcbiAgbWluLXdpZHRoOiA5MHB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"search-div\\\">\\r\\n  <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\r\\n    <input matInput placeholder=\\\"Search\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"search\\\" (keyup)=\\\"filter()\\\">\\r\\n    <button *ngIf=\\\"search\\\" mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"clearSearch()\\\">\\r\\n      <mat-icon>close</mat-icon>\\r\\n    </button>\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n<div class=\\\"mat-elevation-z8\\\">\\r\\n  <mat-table [dataSource]=\\\"releveIndexService.releveIndexsMatTab\\\" matSort>\\r\\n    <ng-container matColumnDef=\\\"reference\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Reference</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.reference}}</mat-cell>\\r\\n      <mat-footer-cell *matFooterCellDef>Recette Carburant</mat-footer-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"depart\\\">\\r\\n      <mat-header-cell *matHeaderCellDef>Départ</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.depart}}</mat-cell>\\r\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"arrive\\\">\\r\\n      <mat-header-cell *matHeaderCellDef>Arrivé</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.arrive}}</mat-cell>\\r\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"quantite\\\">\\r\\n      <mat-header-cell *matHeaderCellDef>Quantité</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.quantite}}</mat-cell>\\r\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"prix\\\">\\r\\n      <mat-header-cell *matHeaderCellDef>Prix</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.prix}}</mat-cell>\\r\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"prevue\\\">\\r\\n      <mat-header-cell *matHeaderCellDef>Somme prévue</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.prevue}}</mat-cell>\\r\\n      <mat-footer-cell *matFooterCellDef>{{getTotalPrevue()}}</mat-footer-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"Pompiste\\\">\\r\\n      <mat-header-cell *matHeaderCellDef>Pompiste</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.pompiste.nom}}</mat-cell>\\r\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <mat-header-cell *matHeaderCellDef></mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let row\\\">\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"updateReleveIndexDialog(row)\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </button>\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteReleveIndexDialog(row._id, 'relevé index')\\\">\\r\\n          <mat-icon>delete_outline</mat-icon>\\r\\n        </button>\\r\\n      </mat-cell>\\r\\n      <mat-footer-cell *matFooterCellDef>\\r\\n        <button mat-icon-button matTooltip=\\\"Détails recette\\\" color=\\\"primary\\\" (click)=\\\"detailsDialog()\\\">\\r\\n          <mat-icon>add</mat-icon>\\r\\n        </button>\\r\\n      </mat-footer-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"loading\\\">\\r\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\r\\n        Loading data ...\\r\\n      </mat-footer-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"noData\\\">\\r\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\r\\n        <span>No data.</span>\\r\\n        <span class=\\\"fill-remaining-space\\\"></span>\\r\\n        <button mat-icon-button matTooltip=\\\"Détails recette\\\" color=\\\"primary\\\" (click)=\\\"detailsDialog()\\\">\\r\\n          <mat-icon>add</mat-icon>\\r\\n        </button>\\r\\n      </mat-footer-cell>\\r\\n    </ng-container>\\r\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n    <mat-footer-row *matFooterRowDef=\\\"displayedColumns\\\"\\r\\n      [ngClass]=\\\"{'hide':releveIndexService.releveIndexsMatTab!=null && releveIndexService.releveIndexsMatTab.data.length==0}\\\">\\r\\n    </mat-footer-row>\\r\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':releveIndexService.releveIndexsMatTab!=null}\\\">\\r\\n    </mat-footer-row>\\r\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\"\\r\\n      [ngClass]=\\\"{'hide':!(releveIndexService.releveIndexsMatTab!=null && releveIndexService.releveIndexsMatTab.data.length==0)}\\\">\\r\\n    </mat-footer-row>\\r\\n  </mat-table>\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" [pageSize]=\\\"10\\\" showFirstLastButtons></mat-paginator>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\r\nimport { MatSort, MatPaginator, MatDialog } from '@angular/material';\r\nimport { ReleveIndexService } from 'app/shared/services/releveIndex.service';\r\nimport { ReleveIndexAddComponent } from './releveIndex-add/releveIndex-add.component';\r\nimport { ConfirmDeleteComponent } from 'app/Components/Shared/confirm-delete/confirm-delete.component';\r\nimport { ReleveIndexEditComponent } from './releveIndex-edit/releveIndex-edit.component';\r\nimport { ReleveIndex } from 'app/shared/models/ReleveIndex.model';\r\nimport { SessionService } from 'app/shared/services/session.service';\r\nimport { ShowDetailsComponent } from '@ComRecette/show-details/show-details.component';\r\n\r\n@Component({\r\n  selector: 'app-releve-index-list',\r\n  templateUrl: './releveIndex-list.component.html',\r\n  styleUrls: ['./releveIndex-list.component.css']\r\n})\r\nexport class ReleveIndexListComponent implements OnInit {\r\n\r\n  public displayedColumns: string[];\r\n  public search: string;\r\n  screenHeight: any;\r\n  screenWidth: any;\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n\r\n  constructor(\r\n    public releveIndexService: ReleveIndexService,\r\n    public sessionService: SessionService,\r\n    private dialog: MatDialog) {\r\n    this.getScreenSize();\r\n  }\r\n\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n    getScreenSize(event?) {\r\n          this.screenHeight = window.innerHeight;\r\n          this.screenWidth = window.innerWidth;\r\n          if (this.screenWidth < 650) {\r\n            this.displayedColumns = ['reference', 'quantite', 'prevue', 'Pompiste', 'actions'];\r\n          } else {\r\n            this.displayedColumns = ['reference', 'depart', 'arrive', 'quantite', 'prix', 'Pompiste', 'prevue', 'actions'];\r\n          }\r\n    }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  addReleveIndexDialog(): void {\r\n    this.dialog.open(ReleveIndexAddComponent, {\r\n      panelClass: 'full-width-dialog'\r\n    });\r\n  }\r\n\r\n  detailsDialog(): void {\r\n    this.dialog.open(ShowDetailsComponent, {\r\n      panelClass: 'full-width-dialog'\r\n    });\r\n  }\r\n\r\n  getTotalPrevue() {\r\n    return this.releveIndexService.releveIndexs.map(t => t.prevue).reduce((acc, value) => acc + value, 0).toFixed(3);\r\n  }\r\n\r\n  deleteReleveIndexDialog(id: string, msg: string): void {\r\n    this.dialog.open(ConfirmDeleteComponent, {\r\n      data: { id, msg }\r\n    });\r\n  }\r\n\r\n  updateReleveIndexDialog(index: ReleveIndex): void {\r\n    this.dialog.open(ReleveIndexEditComponent, {\r\n      panelClass: 'full-width-dialog',\r\n      data: { index : Object.assign({}, index) }\r\n    });\r\n  }\r\n\r\n  filter(): void {\r\n    this.releveIndexService.releveIndexsMatTab.filter = this.search.trim().toLowerCase();\r\n  }\r\n\r\n  clearSearch(): void {\r\n    this.search = '';\r\n    this.filter();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL1JlY2V0dGUvc2hvdy1kZXRhaWxzL3JlY2V0dGUtYm9uLXZhbGV1ci9yZWNldHRlLWJvbi12YWxldXItYWRkL3JlY2V0dGUtYm9uLXZhbGV1ci1hZGQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-toolbar>\\n  <span>Ajouter Bon Valeur</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\n    <mat-icon>clear</mat-icon>\\n  </button>\\n</mat-toolbar>\\n\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\n  <div>\\n    <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\n\\n      <mat-grid-tile>\\n        <mat-radio-group aria-labelledby=\\\"example-radio-group-label\\\" class=\\\"example-radio-group\\\" name=\\\"cardValue\\\"\\n          [(ngModel)]=\\\"bonValeur.cardValue\\\">\\n          <mat-radio-button class=\\\"example-radio-button\\\" [value]=\\\"10\\\">5</mat-radio-button>\\n          <mat-radio-button class=\\\"example-radio-button\\\" [value]=\\\"10\\\">10</mat-radio-button>\\n          <mat-radio-button class=\\\"example-radio-button\\\" [value]=\\\"15\\\">15</mat-radio-button>\\n          <mat-radio-button class=\\\"example-radio-button\\\" [value]=\\\"25\\\">25</mat-radio-button>\\n          <mat-radio-button class=\\\"example-radio-button\\\" [value]=\\\"30\\\">30</mat-radio-button>\\n          <mat-radio-button class=\\\"example-radio-button\\\" [value]=\\\"10\\\">50</mat-radio-button>\\n        </mat-radio-group>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nombre de bons\\\" required type=\\\"number\\\" name=\\\"numberOFCards\\\"\\n            [(ngModel)]=\\\"bonValeur.numberOfCards\\\">\\n          <mat-error>Nombre de bons est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Date Livraison\\\" required type=\\\"text\\\" name=\\\"date\\\" [(ngModel)]=\\\"bonValeur.date\\\">\\n          <mat-error>Date Livraison est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n    </mat-grid-list>\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addBonValeur()\\\"\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Ajouter\\n      </button>\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\n    </div>\\n  </div>\\n</form>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BonValeur } from 'app/shared/models/bonValeur.model';\nimport { MatDialogRef } from '@angular/material';\nimport { BonValeurService } from 'app/shared/services/bon-valeur.service';\nimport { NotificationService } from 'app/shared/services/notification.service';\nimport { NgForm } from '@angular/forms';\nimport { SessionService } from 'app/shared/services/session.service';\n\n@Component({\n  selector: 'app-recette-bon-valeur-add',\n  templateUrl: './recette-bon-valeur-add.component.html',\n  styleUrls: ['./recette-bon-valeur-add.component.css']\n})\nexport class RecetteBonValeurAddComponent implements OnInit {\n\n  public bonValeur: BonValeur;\n  public width: number;\n\n  constructor(private dialogMat: MatDialogRef<RecetteBonValeurAddComponent>,\n              private bonValeurService: BonValeurService,\n              private notifService: NotificationService,\n              private sessionService: SessionService) {\n    this.bonValeur = new BonValeur();\n    this.width = 2;\n  }\n\n  ngOnInit() {\n    if (document.body.clientWidth < 600) {\n      this.width = 1;\n    }\n    const datetime = new Date();\n    const date = datetime.toISOString().slice(0, 10);\n    this.bonValeur.date = date;\n  }\n\n  onClose(): void {\n    this.dialogMat.close();\n  }\n\n  onClear(form: NgForm): void {\n    form.reset();\n  }\n\n  addBonValeur(): void {\n    this.bonValeur.totalValue = this.bonValeur.cardValue * this.bonValeur.numberOfCards;\n    this.bonValeur.state = 'Non';\n    this.bonValeur.sessionId = this.sessionService.sessions[0]._id;\n    this.bonValeurService.addBonValeur(this.bonValeur).subscribe(res => {\n      this.bonValeurService.getBonValeursListById(this.sessionService.currentSessionId);\n      this.dialogMat.close();\n      this.notifService.success('Bon Valeur ajouter avec succés');\n    },\n      err => {\n        console.log(err);\n      });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL1JlY2V0dGUvc2hvdy1kZXRhaWxzL3JlY2V0dGUtYm9uLXZhbGV1ci9yZWNldHRlLWJvbi12YWxldXItZWRpdC9yZWNldHRlLWJvbi12YWxldXItZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-toolbar>\\n  <span>Modifier Bon Valeur</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\n    <mat-icon>clear</mat-icon>\\n  </button>\\n</mat-toolbar>\\n\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\n  <div>\\n    <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Valeur du Bon\\\" required type=\\\"number\\\" name=\\\"cardValue\\\"\\n            [(ngModel)]=\\\"bonValeur.cardValue\\\">\\n          <mat-error>Valeur du Bon est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nombre de bons\\\" required type=\\\"number\\\" name=\\\"numberOfCards\\\"\\n            [(ngModel)]=\\\"bonValeur.numberOfCards\\\">\\n          <mat-error>Nombre de bons est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Date Livraison\\\" required type=\\\"text\\\" name=\\\"date\\\" [(ngModel)]=\\\"bonValeur.date\\\">\\n          <mat-error>Date Livraison est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n    </mat-grid-list>\\n\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"updateBonValeur()\\\"\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Modifier\\n      </button>\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { BonValeur } from 'app/shared/models/bonValeur.model';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { BonValeurService } from 'app/shared/services/bon-valeur.service';\nimport { NotificationService } from 'app/shared/services/notification.service';\nimport { NgForm } from '@angular/forms';\nimport { SessionService } from 'app/shared/services/session.service';\n\n@Component({\n  selector: 'app-recette-bon-valeur-edit',\n  templateUrl: './recette-bon-valeur-edit.component.html',\n  styleUrls: ['./recette-bon-valeur-edit.component.css']\n})\nexport class RecetteBonValeurEditComponent implements OnInit {\n\n  public bonValeur: BonValeur;\n  public width: number;\n\n  constructor(public dialogRef: MatDialogRef<RecetteBonValeurEditComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any,\n              private bonValeurService: BonValeurService,\n              private notifservice: NotificationService,\n              private sessionService: SessionService) {\n    this.bonValeur = data.bonValeur;\n    this.width = 2;\n  }\n\n  ngOnInit() {\n    if (document.body.clientWidth < 600) {\n      this.width = 1;\n    }\n  }\n\n  onClose(): void {\n    this.dialogRef.close();\n  }\n\n  onClear(form: NgForm): void {\n    form.reset();\n  }\n\n  updateBonValeur(): void {\n    this.bonValeur.totalValue = this.bonValeur.cardValue * this.bonValeur.numberOfCards;\n    this.bonValeurService.updateBonValeur(this.bonValeur._id, this.bonValeur).subscribe(res => {\n      this.bonValeurService.getBonValeursListById(this.sessionService.currentSessionId);\n      this.dialogRef.close();\n      this.notifservice.success('Bon Valeur modifié avec succés');\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL1JlY2V0dGUvc2hvdy1kZXRhaWxzL3JlY2V0dGUtYm9uLXZhbGV1ci9yZWNldHRlLWJvbi12YWxldXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"search-div\\\">\\n  <button mat-raised-button (click)=\\\"addBonValeurDialog()\\\">\\n    <mat-icon>add</mat-icon>Ajouter\\n  </button>\\n  <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\n    <input matInput placeholder=\\\"Search\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"search\\\" (keyup)=\\\"filter()\\\">\\n    <button *ngIf=\\\"search\\\" mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"clearSearch()\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </mat-form-field>\\n</div>\\n<div class=\\\"mat-elevation-z8\\\">\\n  <mat-table [dataSource]=\\\"bonValeurService.bonValeursMatTab\\\" matSort>\\n    <ng-container matColumnDef=\\\"cardValue\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Valeur du bon</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.cardValue}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef>Recette bons valeur</mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"numberOfCards\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Nombre de bons</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.numberOfCards}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"date\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Date de livraison</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.date}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"totalValue\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Valeur totale</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.totalValue}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef>{{getTotalPrevue()}}</mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <mat-header-cell *matHeaderCellDef>\\n      </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\">\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Editer\\\" color=\\\"primary\\\"\\n          (click)=\\\"updateBonValeurDialog(row)\\\">\\n          <mat-icon>edit</mat-icon>\\n        </button>\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Supprimer\\\" color=\\\"warn\\\"\\n          (click)=\\\"deleteBonValeurDialog(row._id, 'recette-bonValeur')\\\">\\n          <mat-icon>delete_outline</mat-icon>\\n        </button>\\n      </mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"loading\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n        Loading data ...\\n      </mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"noData\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n        No data.\\n      </mat-footer-cell>\\n    </ng-container>\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    <mat-footer-row *matFooterRowDef=\\\"displayedColumns\\\"\\n      [ngClass]=\\\"{'hide':bonValeurService.bonValeursMatTab!=null && bonValeurService.bonValeursMatTab.data.length==0}\\\">\\n    </mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':bonValeurService.bonValeursMatTab!=null}\\\">\\n    </mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\"\\n      [ngClass]=\\\"{'hide':!(bonValeurService.bonValeursMatTab!=null && bonValeurService.bonValeursMatTab.data.length==0)}\\\">\\n    </mat-footer-row>\\n  </mat-table>\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" [pageSize]=\\\"5\\\" showFirstLastButtons></mat-paginator>\\n</div>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSort, MatPaginator, MatDialog } from '@angular/material';\nimport { BonValeurService } from 'app/shared/services/bon-valeur.service';\nimport { RecetteBonValeurAddComponent } from './recette-bon-valeur-add/recette-bon-valeur-add.component';\nimport { ConfirmDeleteComponent } from '@ComShared/confirm-delete/confirm-delete.component';\nimport { BonValeur } from 'app/shared/models/bonValeur.model';\nimport { RecetteBonValeurEditComponent } from './recette-bon-valeur-edit/recette-bon-valeur-edit.component';\nimport { SessionService } from 'app/shared/services/session.service';\n\n@Component({\n  selector: 'app-recette-bon-valeur',\n  templateUrl: './recette-bon-valeur.component.html',\n  styleUrls: ['./recette-bon-valeur.component.css']\n})\nexport class RecetteBonValeurComponent implements OnInit {\n\n  public displayedColumns: string[];\n  public search: string;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(public bonValeurService: BonValeurService,\n              private dialog: MatDialog,\n              private sessionService: SessionService) {\n    this.displayedColumns = ['cardValue', 'numberOfCards', 'date', 'totalValue', 'actions'];\n  }\n\n  ngOnInit() {\n    this.bonValeurService.getBonValeursListById(this.sessionService.currentSessionId, this.sort, this.paginator);\n  }\n\n  getTotalPrevue() {\n    return this.bonValeurService.getTotalPrevue();\n  }\n\n  addBonValeurDialog(): void {\n    this.dialog.open(RecetteBonValeurAddComponent, {\n      panelClass: 'full-width-dialog'\n    });\n  }\n\n  deleteBonValeurDialog(id: string, msg: string): void {\n    this.dialog.open(ConfirmDeleteComponent, {\n      data: { id, msg }\n    });\n  }\n\n  updateBonValeurDialog(bonValeur: BonValeur): void {\n    this.dialog.open(RecetteBonValeurEditComponent, {\n      panelClass: 'full-width-dialog',\n      data: { bonValeur: Object.assign({}, bonValeur) }\n    });\n  }\n\n  filter(): void {\n    this.bonValeurService.bonValeursMatTab.filter = this.search.trim().toLowerCase();\n  }\n\n  clearSearch(): void {\n    this.search = '';\n    this.filter();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL1JlY2V0dGUvc2hvdy1kZXRhaWxzL3JlY2V0dGUtY2FydGUtYm9uL3JlY2V0dGUtY2FydGUtYm9uLWFkZC9yZWNldHRlLWNhcnRlLWJvbi1hZGQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-toolbar>\\n  <span>Ajouter Carte Bon</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\n    <mat-icon>clear</mat-icon>\\n  </button>\\n</mat-toolbar>\\n\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\n  <div>\\n    <mat-grid-list [cols]=\\\"2\\\" rowHeight=\\\"100px\\\">\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <mat-label>Produit de carburant</mat-label>\\n          <mat-select required name=\\\"cardType\\\" [(ngModel)]=\\\"carteBon.cardType\\\"\\n            (selectionChange)=\\\"getCarburantPrices(carteBon.cardType)\\\">\\n            <mat-option>None</mat-option>\\n            <mat-option *ngFor=\\\"let c of carteBonTypeService.cardTypes\\\" [value]=\\\"c.cardCode\\\">\\n              {{c.cardCode}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>Produit de carburant est obligatoire.</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-radio-group aria-labelledby=\\\"example-radio-group-label\\\" class=\\\"example-radio-group\\\" name=\\\"cardValue\\\"\\n          [(ngModel)]=\\\"carteBon.cardValue\\\">\\n          <mat-radio-button class=\\\"example-radio-button\\\" *ngFor=\\\"let price of prices\\\" [value]=\\\"price\\\">\\n            {{price}}\\n          </mat-radio-button>\\n        </mat-radio-group>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nombre de bons\\\" required type=\\\"number\\\" name=\\\"numberOfCards\\\"\\n            [(ngModel)]=\\\"carteBon.numberOfCards\\\">\\n          <mat-error>Nombre de bons est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Date Livraison\\\" required type=\\\"text\\\" name=\\\"date\\\" [(ngModel)]=\\\"carteBon.date\\\">\\n          <mat-error>Date Livraison est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n    </mat-grid-list>\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addCarteBon()\\\"\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Ajouter\\n      </button>\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit, HostListener } from '@angular/core';\nimport { CarteBon } from 'app/shared/models/carteBon.model';\nimport { MatDialogRef } from '@angular/material';\nimport { CarteBonService } from 'app/shared/services/carte-bon.service';\nimport { CarteBonTypeService } from 'app/shared/services/carte-bon-type.service';\nimport { PrixCarburantService } from 'app/shared/services/prix-carburant.service';\nimport { NotificationService } from 'app/shared/services/notification.service';\nimport { NgForm } from '@angular/forms';\nimport { SessionService } from 'app/shared/services/session.service';\n\n@Component({\n  selector: 'app-recette-carte-bon-add',\n  templateUrl: './recette-carte-bon-add.component.html',\n  styleUrls: ['./recette-carte-bon-add.component.css']\n})\nexport class RecetteCarteBonAddComponent implements OnInit {\n\n  public carteBon: CarteBon;\n  public prices: number[];\n  public width: number;\n  public screenHeight: number;\n  public screenWidth: number;\n\n  constructor(private dialogMat: MatDialogRef<RecetteCarteBonAddComponent>,\n              private carteBonService: CarteBonService,\n              public carteBonTypeService: CarteBonTypeService,\n              public prixCarburantService: PrixCarburantService,\n              private notifService: NotificationService,\n              private sessionService: SessionService) {\n    this.carteBon = new CarteBon();\n    this.prices = [];\n  }\n\n  @HostListener('window:resize', ['$event'])\n  getScreenSize(event?) {\n    this.screenHeight = window.innerHeight;\n    this.screenWidth = window.innerWidth;\n    if (this.screenWidth < 650) {\n      this.width =  1;\n    } else {\n      this.width =  2;\n    }\n  }\n\n  ngOnInit() {\n    const datetime = new Date();\n    const date = datetime.toISOString().slice(0, 10);\n    this.carteBon.date = date;\n    this.carteBonTypeService.getCardTypesList();\n    this.prixCarburantService.getCarburantList();\n    this.prices = [0, 0, 0, 0, 0, 0, 0];\n  }\n\n  getCarburantPrices(cardType: string): void {\n    this.prices = [];\n    const cardTypeResult = this.carteBonTypeService.cardTypes.filter(x => x.cardCode === cardType);\n    const carburant = cardTypeResult[0].cardCarburant;\n    const quantity = cardTypeResult[0].numberOfLiters;\n    const cardPriceResult = this.prixCarburantService.prixCarburants.filter(x => x.carburant === carburant).slice(0, 7);\n    let price: number;\n    for (let _i = 0; _i < 7; _i++) {\n      try {\n        price = parseFloat((quantity * cardPriceResult[_i].prix).toFixed(3));\n      } catch (err) {\n        this.notifService.warn('Essayez à nouveau, une erreur est survenue');\n        this.carteBon.cardType = undefined;\n        this.prices = [0, 0, 0, 0, 0, 0, 0];\n      }\n      this.prices.push(price);\n    }\n  }\n\n  onClose(): void {\n    this.dialogMat.close();\n  }\n\n  onClear(form: NgForm): void {\n    form.reset();\n  }\n\n  addCarteBon(): void {\n    this.carteBon.state = 'Non';\n    this.carteBon.sessionId = this.sessionService.sessions[0]._id;\n    this.carteBon.totalValue = parseFloat((this.carteBon.cardValue * this.carteBon.numberOfCards).toFixed(3));\n    this.carteBonService.addCarteBon(this.carteBon).subscribe(res => {\n      this.carteBonService.getCarteBonsListById(this.sessionService.currentSessionId);\n      this.dialogMat.close();\n      this.notifService.success('Carte Bon ajouter avec succés');\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL1JlY2V0dGUvc2hvdy1kZXRhaWxzL3JlY2V0dGUtY2FydGUtYm9uL3JlY2V0dGUtY2FydGUtYm9uLWVkaXQvcmVjZXR0ZS1jYXJ0ZS1ib24tZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-toolbar>\\n  <span>Modifier Carte Bon</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\n    <mat-icon>clear</mat-icon>\\n  </button>\\n</mat-toolbar>\\n\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\n  <div>\\n    <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <mat-label>Produit de carburant</mat-label>\\n          <mat-select required name=\\\"cardType\\\" [(ngModel)]=\\\"carteBon.cardType\\\">\\n            <mat-option>None</mat-option>\\n            <mat-option *ngFor=\\\"let c of carteBonTypeService.cardTypes\\\" [value]=\\\"c.cardCode\\\">\\n              {{c.cardCode}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>Produit de carburant est obligatoire.</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Valeur du bon\\\" required type=\\\"number\\\" name=\\\"cardValue\\\"\\n            [(ngModel)]=\\\"carteBon.cardValue\\\">\\n          <mat-error>Valeur du bon est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nombre de bons\\\" required type=\\\"number\\\" name=\\\"numberOfCards\\\"\\n            [(ngModel)]=\\\"carteBon.numberOfCards\\\">\\n          <mat-error>Nombre de bons est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Date Livraison\\\" required type=\\\"text\\\" name=\\\"date\\\" [(ngModel)]=\\\"carteBon.date\\\">\\n          <mat-error>Date Livraison est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n    </mat-grid-list>\\n\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"updateCarteBon()\\\"\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Modifier\\n      </button>\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { CarteBon } from 'app/shared/models/carteBon.model';\nimport { CarteBonService } from 'app/shared/services/carte-bon.service';\nimport { CarteBonTypeService } from 'app/shared/services/carte-bon-type.service';\nimport { NotificationService } from 'app/shared/services/notification.service';\nimport { NgForm } from '@angular/forms';\nimport { SessionService } from 'app/shared/services/session.service';\n\n@Component({\n  selector: 'app-recette-carte-bon-edit',\n  templateUrl: './recette-carte-bon-edit.component.html',\n  styleUrls: ['./recette-carte-bon-edit.component.css']\n})\nexport class RecetteCarteBonEditComponent implements OnInit {\n\n  public carteBon: CarteBon;\n  public width: number;\n\n  constructor(public dialogRef: MatDialogRef<RecetteCarteBonEditComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any,\n              private carteBonService: CarteBonService,\n              public carteBonTypeService: CarteBonTypeService,\n              private notifservice: NotificationService,\n              private sessionService: SessionService) {\n    this.carteBon = data.carteBon;\n    this.width = 2;\n  }\n\n  ngOnInit() {\n    if (document.body.clientWidth < 600) {\n      this.width = 1;\n    }\n    this.carteBonTypeService.getCardTypesList();\n  }\n\n  onClose(): void {\n    this.dialogRef.close();\n  }\n\n  onClear(form: NgForm): void {\n    form.reset();\n  }\n\n  updateCarteBon(): void {\n    this.carteBon.totalValue = parseFloat((this.carteBon.cardValue * this.carteBon.numberOfCards).toFixed(3));\n    this.carteBonService.updateCarteBon(this.carteBon._id, this.carteBon).subscribe(res => {\n      this.carteBonService.getCarteBonsListById(this.sessionService.currentSessionId);\n      this.dialogRef.close();\n      this.notifservice.success('Carte Bon modifié avec succés');\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL1JlY2V0dGUvc2hvdy1kZXRhaWxzL3JlY2V0dGUtY2FydGUtYm9uL3JlY2V0dGUtY2FydGUtYm9uLW1vcmUtZGV0YWlscy9yZWNldHRlLWNhcnRlLWJvbi1tb3JlLWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div mat-dialog-content>\\n  <mat-list>\\n    <mat-list-item>\\n      <h4>Produit de carburant: </h4>&nbsp;&nbsp;{{carteBon.cardType}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Valeur du bon: </h4>&nbsp;&nbsp;{{carteBon.cardValue}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Nombre de bons: </h4>&nbsp;&nbsp;{{carteBon.numberOfCards}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Valeur totale: </h4>&nbsp;&nbsp;{{carteBon.totalValue}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Date de livraison: </h4>&nbsp;&nbsp;{{carteBon.date}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n  </mat-list>\\n</div>\\n<div mat-dialog-actions>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button mat-raised-button (click)=\\\"onNoClick()\\\" color=\\\"primary\\\">Fermer</button>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n</div>\\n\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { CarteBon } from 'app/shared/models/carteBon.model';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-recette-carte-bon-more-details',\n  templateUrl: './recette-carte-bon-more-details.component.html',\n  styleUrls: ['./recette-carte-bon-more-details.component.css']\n})\nexport class RecetteCarteBonMoreDetailsComponent implements OnInit {\n\n  public carteBon: CarteBon;\n\n  constructor(public dialogRef: MatDialogRef<RecetteCarteBonMoreDetailsComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n      this.carteBon = data.carteBon;\n     }\n\n  ngOnInit() {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL1JlY2V0dGUvc2hvdy1kZXRhaWxzL3JlY2V0dGUtY2FydGUtYm9uL3JlY2V0dGUtY2FydGUtYm9uLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"search-div\\\">\\n  <button mat-raised-button (click)=\\\"addCarteBonDialog()\\\">\\n    <mat-icon>add</mat-icon>Ajouter\\n  </button>\\n  <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\n    <input matInput placeholder=\\\"Search\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"search\\\" (keyup)=\\\"filter()\\\">\\n    <button *ngIf=\\\"search\\\" mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"clearSearch()\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </mat-form-field>\\n</div>\\n<div class=\\\"mat-elevation-z8\\\">\\n  <mat-table [dataSource]=\\\"carteBonService.carteBonsMatTab\\\" matSort>\\n\\n    <ng-container matColumnDef=\\\"cardType\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Produit de carburant</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.cardType}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef>Recette Carte bons</mat-footer-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"cardValue\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Valeur du bon</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.cardValue}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"numberOfCards\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Nombre des bons</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.numberOfCards}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"totalValue\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Valeur totale </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.totalValue}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef>{{getTotalPrevue()}}</mat-footer-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <mat-header-cell *matHeaderCellDef></mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\">\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Voir plus\\\" (click)=\\\"seeMoreDialog(row)\\\">\\n          <mat-icon>remove_red_eye</mat-icon>\\n        </button>\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Editer\\\" color=\\\"primary\\\" (click)=\\\"updateCarteBonDialog(row)\\\">\\n          <mat-icon>edit</mat-icon>\\n        </button>\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Supprimer\\\" color=\\\"warn\\\"\\n          (click)=\\\"deleteCarteBonDialog(row._id, 'recette-carteBon')\\\">\\n          <mat-icon>delete_outline</mat-icon>\\n        </button>\\n      </mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"loading\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n        Loading data ...\\n      </mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"noData\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n        No data.\\n      </mat-footer-cell>\\n    </ng-container>\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    <mat-footer-row *matFooterRowDef=\\\"displayedColumns\\\"\\n      [ngClass]=\\\"{'hide':carteBonService.carteBonsMatTab!=null && carteBonService.carteBonsMatTab.data.length==0}\\\">\\n    </mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':carteBonService.carteBonsMatTab!=null}\\\">\\n    </mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\"\\n      [ngClass]=\\\"{'hide':!(carteBonService.carteBonsMatTab!=null && carteBonService.carteBonsMatTab.data.length==0)}\\\">\\n    </mat-footer-row>\\n  </mat-table>\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" [pageSize]=\\\"5\\\" showFirstLastButtons></mat-paginator>\\n</div>\\n\\n\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ConfirmDeleteComponent } from '@ComShared/confirm-delete/confirm-delete.component';\nimport { RecetteBonValeurAddComponent } from '../recette-bon-valeur/recette-bon-valeur-add/recette-bon-valeur-add.component';\nimport { RecetteCarteBonAddComponent } from './recette-carte-bon-add/recette-carte-bon-add.component';\nimport { RecetteCarteBonEditComponent } from './recette-carte-bon-edit/recette-carte-bon-edit.component';\nimport { CarteBon } from 'app/shared/models/carteBon.model';\nimport { RecetteCarteBonMoreDetailsComponent } from './recette-carte-bon-more-details/recette-carte-bon-more-details.component';\nimport { MatDialog, MatPaginator, MatSort } from '@angular/material';\nimport { CarteBonService } from 'app/shared/services/carte-bon.service';\nimport { SessionService } from 'app/shared/services/session.service';\n\n@Component({\n  selector: 'app-recette-carte-bon',\n  templateUrl: './recette-carte-bon.component.html',\n  styleUrls: ['./recette-carte-bon.component.css']\n})\nexport class RecetteCarteBonComponent implements OnInit {\n\n  public displayedColumns: string[];\n  public search: string;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(public carteBonService: CarteBonService,\n              private dialog: MatDialog,\n              private sessionService: SessionService) {\n    this.displayedColumns = ['cardType', 'cardValue', 'numberOfCards', 'totalValue', 'actions'];\n  }\n\n  ngOnInit() {\n    this.carteBonService.getCarteBonsListById(this.sessionService.currentSessionId, this.sort, this.paginator);\n  }\n\n  getTotalPrevue() {\n    return this.carteBonService.getTotalPrevue();\n  }\n\n  seeMoreDialog(carteBon): void {\n    this.dialog.open(RecetteCarteBonMoreDetailsComponent, {\n      panelClass: 'full-width-dialog',\n      height: '500px',\n      data: { carteBon }\n    });\n\n  }\n\n  addCarteBonDialog(): void {\n    this.dialog.open(RecetteCarteBonAddComponent, {\n      panelClass: 'full-width-dialog'\n    });\n  }\n\n  deleteCarteBonDialog(id: string, msg: string): void {\n    this.dialog.open(ConfirmDeleteComponent, {\n      data: { id, msg }\n    });\n  }\n\n  updateCarteBonDialog(carteBon: CarteBon): void {\n    this.dialog.open(RecetteCarteBonEditComponent, {\n      panelClass: 'full-width-dialog',\n      data: { carteBon: Object.assign({}, carteBon) }\n    });\n  }\n\n  filter(): void {\n    this.carteBonService.carteBonsMatTab.filter = this.search.trim().toLowerCase();\n  }\n\n  clearSearch(): void {\n    this.search = '';\n    this.filter();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL1JlY2V0dGUvc2hvdy1kZXRhaWxzL3JlY2V0dGUtY2hlcXVlL3JlY2V0dGUtY2hlcXVlLWFkZC9yZWNldHRlLWNoZXF1ZS1hZGQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-toolbar>\\n  <span>Ajouter Cheque</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\n    <mat-icon>clear</mat-icon>\\n  </button>\\n</mat-toolbar>\\n\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\n  <div>\\n    <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nom du bénéficiaire\\\" required type=\\\"text\\\" name=\\\"payeeName\\\"\\n            [(ngModel)]=\\\"cheque.payeeName\\\">\\n          <mat-error>Nom du bénéficiaire est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Jour d'encaissement\\\" required type=\\\"text\\\" name=\\\"date\\\" [(ngModel)]=\\\"cheque.date\\\">\\n          <mat-error>Jour d'encaissement est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Numéro du cheque\\\" required type=\\\"text\\\" name=\\\"chequeNumber\\\"\\n            [(ngModel)]=\\\"cheque.chequeNumber\\\">\\n          <mat-error>Numéro du cheque est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Rib du cheque\\\" required type=\\\"text\\\" name=\\\"rib\\\" (change)=\\\"getBankAgency(cheque.rib)\\\"\\n            [(ngModel)]=\\\"cheque.rib\\\">\\n          <mat-error>Rib du cheque est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nom du bank\\\" required type=\\\"text\\\" name=\\\"bankName\\\"\\n            [(ngModel)]=\\\"cheque.bankName\\\">\\n          <mat-error>Nom du bank est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nom de l'agence\\\" required type=\\\"text\\\" name=\\\"agency\\\"\\n            [(ngModel)]=\\\"cheque.agency\\\">\\n          <mat-error>Nom de l'agence est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Montant du chèque\\\" required type=\\\"number\\\" name=\\\"chequeValue\\\"\\n            [(ngModel)]=\\\"cheque.chequeValue\\\">\\n          <mat-error>Montant du chèque est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n    </mat-grid-list>\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addCheque()\\\"\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Ajouter\\n      </button>\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Cheque } from 'app/shared/models/Cheque.model';\nimport { MatDialogRef } from '@angular/material';\nimport { ChequeService } from 'app/shared/services/cheque.service';\nimport { NotificationService } from 'app/shared/services/notification.service';\nimport { NgForm } from '@angular/forms';\nimport { SessionService } from 'app/shared/services/session.service';\nimport { BankService } from 'app/shared/services/bank.service';\n\n@Component({\n  selector: 'app-recette-cheque-add',\n  templateUrl: './recette-cheque-add.component.html',\n  styleUrls: ['./recette-cheque-add.component.css']\n})\nexport class RecetteChequeAddComponent implements OnInit {\n\n  public cheque: Cheque;\n  public width: number;\n\n  constructor(private dialogMat: MatDialogRef<RecetteChequeAddComponent>,\n              private chequeService: ChequeService,\n              private sessionService: SessionService,\n              private notifService: NotificationService,\n              private bankService: BankService) {\n    this.cheque = new Cheque();\n    this.width = 2;\n  }\n\n  getBankAgency(rib: string) {\n    console.log('here');\n    const bankCode = parseFloat(rib.slice(0, 2));\n    const agencyCode = parseFloat(rib.slice(3, 6));\n    const res = this.bankService.banks.filter(b => b.bankCode === bankCode).filter(b => b.agencyCode === agencyCode);\n    if (res.length > 0) {\n      this.cheque.bankName = res[0].bankName;\n      this.cheque.agency = res[0].agencyName;\n    }\n  }\n\n  ngOnInit() {\n    if (document.body.clientWidth < 600) {\n      this.width = 1;\n    }\n    const datetime = new Date();\n    const date = datetime.toISOString().slice(0, 10);\n    this.cheque.date = date;\n    this.bankService.getBanksList();\n  }\n\n  onClose(): void {\n    this.dialogMat.close();\n  }\n\n  onClear(form: NgForm): void {\n    form.reset();\n  }\n\n  addCheque(): void {\n    this.cheque.state = 'Non';\n    this.cheque.sessionId = this.sessionService.sessions[0]._id;\n    this.chequeService.addCheque(this.cheque).subscribe(res => {\n      this.chequeService.getChequesListById(this.sessionService.currentSessionId);\n      this.dialogMat.close();\n      this.notifService.success('Cheque ajouter avec succés');\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL1JlY2V0dGUvc2hvdy1kZXRhaWxzL3JlY2V0dGUtY2hlcXVlL3JlY2V0dGUtY2hlcXVlLWVkaXQvcmVjZXR0ZS1jaGVxdWUtZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-toolbar>\\n  <span>Modifier Cheque</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\n    <mat-icon>clear</mat-icon>\\n  </button>\\n</mat-toolbar>\\n\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\n  <div>\\n    <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\n\\n        <mat-grid-tile>\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"Nom du bénéficiaire\\\" required type=\\\"text\\\" name=\\\"payeeName\\\"\\n                [(ngModel)]=\\\"cheque.payeeName\\\">\\n              <mat-error>Nom du bénéficiaire est obligatoire</mat-error>\\n            </mat-form-field>\\n          </mat-grid-tile>\\n\\n        <mat-grid-tile>\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Jour d'encaissement\\\" required type=\\\"text\\\" name=\\\"date\\\"\\n              [(ngModel)]=\\\"cheque.date\\\">\\n            <mat-error>Jour d'encaissement est obligatoire</mat-error>\\n          </mat-form-field>\\n        </mat-grid-tile>\\n\\n        <mat-grid-tile>\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Rib du cheque\\\" required type=\\\"text\\\" name=\\\"rib\\\" (change)=\\\"getBankAgency(cheque.rib)\\\"\\n              [(ngModel)]=\\\"cheque.rib\\\">\\n            <mat-error>Rib du cheque est obligatoire</mat-error>\\n          </mat-form-field>\\n        </mat-grid-tile>\\n\\n        <mat-grid-tile>\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Nom de l'agence\\\" required type=\\\"text\\\" name=\\\"agency\\\"\\n              [(ngModel)]=\\\"cheque.agency\\\">\\n            <mat-error>Nom de l'agence est obligatoire</mat-error>\\n          </mat-form-field>\\n        </mat-grid-tile>\\n\\n        <mat-grid-tile>\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Numéro du cheque\\\" required type=\\\"text\\\" name=\\\"chequeNumber\\\"\\n              [(ngModel)]=\\\"cheque.chequeNumber\\\">\\n            <mat-error>Numéro du cheque est obligatoire</mat-error>\\n          </mat-form-field>\\n        </mat-grid-tile>\\n\\n        <mat-grid-tile>\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Nom du bank\\\" required type=\\\"text\\\" name=\\\"bankName\\\"\\n              [(ngModel)]=\\\"cheque.bankName\\\">\\n            <mat-error>Nom du bank est obligatoire</mat-error>\\n          </mat-form-field>\\n        </mat-grid-tile>\\n\\n        <mat-grid-tile>\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Montant du chèque\\\" required type=\\\"number\\\" name=\\\"chequeValue\\\"\\n              [(ngModel)]=\\\"cheque.chequeValue\\\">\\n            <mat-error>Montant du chèque est obligatoire</mat-error>\\n          </mat-form-field>\\n        </mat-grid-tile>\\n    </mat-grid-list>\\n\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"updateCheque()\\\"\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Modifier\\n      </button>\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\n    </div>\\n  </div>\\n</form>\\n\\n\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Cheque } from 'app/shared/models/Cheque.model';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { ChequeService } from 'app/shared/services/cheque.service';\nimport { NotificationService } from 'app/shared/services/notification.service';\nimport { NgForm } from '@angular/forms';\nimport { SessionService } from 'app/shared/services/session.service';\nimport { BankService } from 'app/shared/services/bank.service';\n\n@Component({\n  selector: 'app-recette-cheque-edit',\n  templateUrl: './recette-cheque-edit.component.html',\n  styleUrls: ['./recette-cheque-edit.component.css']\n})\nexport class RecetteChequeEditComponent implements OnInit {\n\n  public cheque: Cheque;\n  public width: number;\n\n  constructor(public dialogRef: MatDialogRef<RecetteChequeEditComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any,\n              private chequeService: ChequeService,\n              private notifservice: NotificationService,\n              private sessionService: SessionService,\n              private bankService: BankService) {\n    this.cheque = data.cheque;\n    this.width = 2;\n  }\n\n  getBankAgency(rib: string) {\n    const bankCode = parseFloat(rib.slice(0, 2));\n    const agencyCode = parseFloat(rib.slice(3, 6));\n    const res = this.bankService.banks.filter(b => b.bankCode === bankCode).filter(b => b.agencyCode === agencyCode);\n    this.cheque.bankName = res[0].bankName;\n    this.cheque.agency = res[0].agencyName;\n  }\n\n  ngOnInit() {\n    if (document.body.clientWidth < 600) {\n      this.width = 1;\n    }\n    this.bankService.getBanksList();\n  }\n\n  onClose(): void {\n    this.dialogRef.close();\n  }\n\n  onClear(form: NgForm): void {\n    form.reset();\n  }\n\n  updateCheque(): void {\n    this.chequeService.updateCheque(this.cheque._id, this.cheque).subscribe(res => {\n      this.chequeService.getChequesListById(this.sessionService.currentSessionId);\n      this.dialogRef.close();\n      this.notifservice.success('Cheque modifié avec succés');\n    },\n      err => {\n        console.log(err);\n      });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL1JlY2V0dGUvc2hvdy1kZXRhaWxzL3JlY2V0dGUtY2hlcXVlL3JlY2V0dGUtY2hlcXVlLW1vcmUtZGV0YWlscy9yZWNldHRlLWNoZXF1ZS1tb3JlLWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div mat-dialog-content>\\n    <mat-list>\\n      <mat-list-item>\\n        <h4>Nom du bénéficiaire: </h4>&nbsp;&nbsp;{{cheque.payeeName}}\\n      </mat-list-item>\\n      <mat-divider></mat-divider>\\n      <mat-list-item>\\n        <h4>Numéro du chèque: </h4>&nbsp;&nbsp;{{cheque.chequeNumber}}\\n      </mat-list-item>\\n      <mat-divider></mat-divider>\\n      <mat-list-item>\\n        <h4>Nom du bank: </h4>&nbsp;&nbsp;{{cheque.bankName}}\\n      </mat-list-item>\\n      <mat-divider></mat-divider>\\n      <mat-list-item>\\n        <h4>Rib: </h4>&nbsp;&nbsp;{{cheque.rib}}\\n      </mat-list-item>\\n      <mat-divider></mat-divider>\\n      <mat-list-item>\\n        <h4>Nom de l'agence: </h4>&nbsp;&nbsp;{{cheque.agency}}\\n      </mat-list-item>\\n      <mat-divider></mat-divider>\\n      <mat-list-item>\\n        <h4>Montant du chèque: </h4>&nbsp;&nbsp;{{cheque.chequeValue}}\\n      </mat-list-item>\\n      <mat-divider></mat-divider>\\n      <mat-list-item>\\n        <h4>Jour d'encaissement: </h4>&nbsp;&nbsp;{{cheque.date}}\\n      </mat-list-item>\\n      <mat-divider></mat-divider>\\n      <mat-list-item>\\n        <h4>Affecté: </h4>&nbsp;&nbsp;{{cheque.state}}\\n      </mat-list-item>\\n      <mat-divider></mat-divider>\\n    </mat-list>\\n  </div>\\n  <div mat-dialog-actions>\\n    <span class=\\\"fill-remaining-space\\\"></span>\\n    <button mat-raised-button (click)=\\\"onNoClick()\\\" color=\\\"primary\\\">Fermer</button>\\n    <span class=\\\"fill-remaining-space\\\"></span>\\n  </div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Cheque } from 'app/shared/models/Cheque.model';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-recette-cheque-more-details',\n  templateUrl: './recette-cheque-more-details.component.html',\n  styleUrls: ['./recette-cheque-more-details.component.css']\n})\nexport class RecetteChequeMoreDetailsComponent implements OnInit {\n\n  public cheque: Cheque;\n\n  constructor(public dialogRef: MatDialogRef<RecetteChequeMoreDetailsComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n      this.cheque = data.cheque;\n     }\n\n  ngOnInit() {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL1JlY2V0dGUvc2hvdy1kZXRhaWxzL3JlY2V0dGUtY2hlcXVlL3JlY2V0dGUtY2hlcXVlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"search-div\\\">\\n  <button mat-raised-button (click)=\\\"addChequeDialog()\\\">\\n    <mat-icon>add</mat-icon>Ajouter\\n  </button>\\n  <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\n    <input matInput placeholder=\\\"Search\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"search\\\" (keyup)=\\\"filter()\\\">\\n    <button *ngIf=\\\"search\\\" mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"clearSearch()\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </mat-form-field>\\n</div>\\n<div class=\\\"mat-elevation-z8\\\">\\n  <mat-table [dataSource]=\\\"chequeService.chequesMatTab\\\" matSort>\\n    <ng-container matColumnDef=\\\"payeeName\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Nom du bénéficiaire</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.payeeName}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef>Recette Cheques</mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"bankName\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Nom du bank</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.bankName}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"date\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Jour d'encaissement</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.date}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"chequeValue\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Montant du chèque</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.chequeValue}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef>{{getTotalPrevue()}}</mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <mat-header-cell *matHeaderCellDef>\\n      </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\">\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Voir plus\\\" (click)=\\\"seeMoreDialog(row)\\\">\\n          <mat-icon>remove_red_eye</mat-icon>\\n        </button>\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Editer\\\" color=\\\"primary\\\" (click)=\\\"updateChequeDialog(row)\\\">\\n          <mat-icon>edit</mat-icon>\\n        </button>\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Supprimer\\\" color=\\\"warn\\\"\\n          (click)=\\\"deleteChequeDialog(row._id, 'recette-cheque')\\\">\\n          <mat-icon>delete_outline</mat-icon>\\n        </button>\\n      </mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"loading\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n        Loading data ...\\n      </mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"noData\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n        No data.\\n      </mat-footer-cell>\\n    </ng-container>\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    <mat-footer-row *matFooterRowDef=\\\"displayedColumns\\\"\\n      [ngClass]=\\\"{'hide':chequeService.chequesMatTab!=null && chequeService.chequesMatTab.data.length==0}\\\">\\n    </mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':chequeService.chequesMatTab!=null}\\\">\\n    </mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\"\\n      [ngClass]=\\\"{'hide':!(chequeService.chequesMatTab!=null && chequeService.chequesMatTab.data.length==0)}\\\">\\n    </mat-footer-row>\\n  </mat-table>\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" [pageSize]=\\\"5\\\" showFirstLastButtons></mat-paginator>\\n</div>\\n\"","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { MatSort, MatPaginator, MatDialog } from '@angular/material';\nimport { ChequeService } from 'app/shared/services/cheque.service';\nimport { RecetteChequeAddComponent } from './recette-cheque-add/recette-cheque-add.component';\nimport { ConfirmDeleteComponent } from '@ComShared/confirm-delete/confirm-delete.component';\nimport { RecetteChequeEditComponent } from './recette-cheque-edit/recette-cheque-edit.component';\nimport { Cheque } from 'app/shared/models/Cheque.model';\nimport { SessionService } from 'app/shared/services/session.service';\nimport { RecetteChequeMoreDetailsComponent } from './recette-cheque-more-details/recette-cheque-more-details.component';\n\n@Component({\n  selector: 'app-recette-cheque',\n  templateUrl: './recette-cheque.component.html',\n  styleUrls: ['./recette-cheque.component.css']\n})\nexport class RecetteChequeComponent implements OnInit {\n\n  public displayedColumns: string[];\n  public search: string;\n  screenHeight: any;\n  screenWidth: any;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(public chequeService: ChequeService,\n              private dialog: MatDialog,\n              private sessionService: SessionService) {\n    this.displayedColumns = ['payeeName', 'bankName', 'date', 'chequeValue', 'actions'];\n  }\n\n  @HostListener('window:resize', ['$event'])\n  getScreenSize(event?) {\n    this.screenHeight = window.innerHeight;\n    this.screenWidth = window.innerWidth;\n    if (this.screenWidth < 650) {\n      this.displayedColumns = ['payeeName', 'bankName', 'chequeValue', 'actions'];\n    } else {\n      this.displayedColumns = ['payeeName', 'bankName', 'date', 'chequeValue', 'actions'];\n    }\n  }\n\n  getTotalPrevue() {\n    return this.chequeService.getTotalPrevue();\n  }\n\n  ngOnInit() {\n    this.chequeService.getChequesListById(this.sessionService.currentSessionId, this.sort, this.paginator);\n  }\n\n  addChequeDialog(): void {\n    this.dialog.open(RecetteChequeAddComponent, {\n      panelClass: 'full-width-dialog'\n    });\n  }\n\n  seeMoreDialog(cheque): void {\n    this.dialog.open(RecetteChequeMoreDetailsComponent, {\n      panelClass: 'full-width-dialog',\n      height: '500px',\n      data: { cheque }\n    });\n\n  }\n\n  deleteChequeDialog(id: string, msg: string): void {\n    this.dialog.open(ConfirmDeleteComponent, {\n      data: { id, msg }\n    });\n  }\n\n  updateChequeDialog(cheque: Cheque): void {\n    this.dialog.open(RecetteChequeEditComponent, {\n      panelClass: 'full-width-dialog',\n      data: { cheque: Object.assign({}, cheque) }\n    });\n  }\n\n  filter(): void {\n    this.chequeService.chequesMatTab.filter = this.search.trim().toLowerCase();\n  }\n\n  clearSearch(): void {\n    this.search = '';\n    this.filter();\n  }\n\n\n}\n","module.exports = \"\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL1JlY2V0dGUvc2hvdy1kZXRhaWxzL3JlY2V0dGUtY3JlZGl0cy9yZWNldHRlLWNyZWRpdHMtYWRkL3JlY2V0dGUtY3JlZGl0cy1hZGQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-toolbar>\\n  <span>Ajouter payement payementCredit</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\n    <mat-icon>clear</mat-icon>\\n  </button>\\n</mat-toolbar>\\n\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\n  <div>\\n    <div mat-dialog-content>\\n      <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\n\\n        <mat-grid-tile>\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Numéro du client\\\" required type=\\\"text\\\" maxlength=\\\"4\\\" name=\\\"clientNumber\\\"\\n              (change)=\\\"getClient(payementCredit.clientNumber)\\\" [(ngModel)]=\\\"payementCredit.clientNumber\\\">\\n            <mat-error>Numéro du client est obligatoire</mat-error>\\n          </mat-form-field>\\n        </mat-grid-tile>\\n\\n        <mat-grid-tile>\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Nom du client\\\" required disabled type=\\\"text\\\" name=\\\"clientName\\\"\\n              [(ngModel)]=\\\"payementCredit.clientName\\\">\\n            <mat-error>Nom du client est obligatoire</mat-error>\\n          </mat-form-field>\\n        </mat-grid-tile>\\n\\n        <mat-grid-tile>\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Valeur initial du crédit\\\" required type=\\\"number\\\" name=\\\"payementValue\\\"\\n              [(ngModel)]=\\\"payementCredit.payementValue\\\">\\n            <mat-error>Valeur initial du crédit est obligatoire</mat-error>\\n          </mat-form-field>\\n        </mat-grid-tile>\\n\\n        <mat-grid-tile>\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"date de payement\\\" required disabled type=\\\"text\\\" name=\\\"date\\\"\\n              [(ngModel)]=\\\"payementCredit.date\\\">\\n            <mat-error>date de payement est obligatoire</mat-error>\\n          </mat-form-field>\\n        </mat-grid-tile>\\n\\n      </mat-grid-list>\\n      <div>\\n        <span class=\\\"error-message\\\" *ngIf=\\\"error\\\">{{errorMessage}}</span>\\n      </div>\\n    </div>\\n    <div mat-dialog-actions>\\n      <div class=\\\"button-row\\\">\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addPayementCredit()\\\"\\n          [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Ajouter\\n        </button>\\n        <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\n      </div>\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { PayementCredit } from 'app/shared/models/payementCredit.model';\nimport { MatDialogRef } from '@angular/material';\nimport { ClientService } from 'app/shared/services/client.service';\nimport { NotificationService } from 'app/shared/services/notification.service';\nimport { PayementCreditService } from 'app/shared/services/payement-credit.service';\nimport { NgForm } from '@angular/forms';\nimport { SessionService } from 'app/shared/services/session.service';\nimport { CreditService } from 'app/shared/services/credit.service';\n\n@Component({\n  selector: 'app-recette-credits-add',\n  templateUrl: './recette-credits-add.component.html',\n  styleUrls: ['./recette-credits-add.component.css']\n})\nexport class RecetteCreditsAddComponent implements OnInit {\n\n  public payementCredit: PayementCredit;\n  public width: number;\n  public error: boolean;\n  public errorMessage: string;\n\n  constructor(\n    private dialogMat: MatDialogRef<RecetteCreditsAddComponent>,\n    private payementCreditService: PayementCreditService,\n    private creditService: CreditService,\n    private notifService: NotificationService,\n    private clientService: ClientService,\n    private sessionService: SessionService) {\n    this.payementCredit = new PayementCredit();\n    this.width = 2;\n    this.error = false;\n    this.errorMessage = '';\n  }\n\n  ngOnInit() {\n    if (document.body.clientWidth < 600) {\n      this.width = 1;\n    }\n    const datetime = new Date();\n    const date = datetime.toISOString().slice(0, 10);\n    this.payementCredit.date = date;\n    this.clientService.getClientsList();\n    this.creditService.getCreditsList();\n  }\n\n  onClose(): void {\n    this.dialogMat.close();\n  }\n\n  getClient(clientNumber: string) {\n    this.error = false;\n    if (clientNumber.length === 4) {\n      const res = this.clientService.clients.filter(c => c.number === clientNumber);\n      if (res.length === 0) {\n        this.error = true;\n        this.errorMessage = 'Error: le numéro de client doit être composé de 4 chiffres';\n        this.payementCredit.clientName = undefined;\n      } else {\n        this.payementCredit.clientName = res[0].name;\n      }\n    } else {\n      this.error = true;\n      this.errorMessage = 'Error: ce n\\'est pas un numéro de client';\n      this.payementCredit.clientName = undefined;\n    }\n\n  }\n\n  onClear(form: NgForm): void {\n    form.reset();\n  }\n\n  addPayementCredit(): void {\n    const result = this.creditService.credits.filter(c => c.clientNumber === this.payementCredit.clientNumber);\n    if (result[0].creditRestValue < this.payementCredit.payementValue) {\n      this.error = true;\n      this.errorMessage = 'Error: la valeur du paiement est plus que le crédit (' + result[0].creditRestValue + ')';\n      this.payementCredit.payementValue = undefined;\n    } else if (result.length > 0) {\n      this.payementCredit.sessionId = this.sessionService.currentSessionId;\n      const difference = result[0].creditRestValue - this.payementCredit.payementValue;\n      result[0].creditRestValue = difference;\n      this.creditService.updateCredit(result[0]._id, result[0]).subscribe(res => {\n        this.payementCreditService.addPayementCredit(this.payementCredit).subscribe(payementRes => {\n          this.payementCreditService.getPayementCreditsList(this.sessionService.currentSessionId);\n          this.dialogMat.close();\n          this.notifService.success('Payement Credit ajouter avec succés');\n        },\n          err => {\n            console.log(err);\n          });\n      },\n        err => {\n          console.log(err);\n        });\n    } else {\n      this.error = true;\n      this.errorMessage = 'Error: ce client n\\'a aucun crédit';\n      this.payementCredit.clientName = undefined;\n    }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL1JlY2V0dGUvc2hvdy1kZXRhaWxzL3JlY2V0dGUtY3JlZGl0cy9yZWNldHRlLWNyZWRpdHMtZWRpdC9yZWNldHRlLWNyZWRpdHMtZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-toolbar>\\n  <span>Modifier payement credit</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\n    <mat-icon>clear</mat-icon>\\n  </button>\\n</mat-toolbar>\\n\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\n  <div>\\n    <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Numéro du client\\\" required type=\\\"text\\\" name=\\\"clientNumber\\\"\\n            [(ngModel)]=\\\"payementCredit.clientNumber\\\">\\n          <mat-error>Numéro du client est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nom du client\\\" required type=\\\"text\\\" name=\\\"clientName\\\"\\n            [(ngModel)]=\\\"payementCredit.clientName\\\">\\n          <mat-error>Nom du client est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Valeur du payement\\\" required type=\\\"number\\\" name=\\\"payementValue\\\"\\n            [(ngModel)]=\\\"payementCredit.payementValue\\\">\\n          <mat-error>Valeur du payement est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"date de payement\\\" required disabled type=\\\"text\\\" name=\\\"date\\\"\\n            [(ngModel)]=\\\"payementCredit.date\\\">\\n          <mat-error>date de payement est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n    </mat-grid-list>\\n\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"updatePayementCredit()\\\"\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Modifier\\n      </button>\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { PayementCreditService } from 'app/shared/services/payement-credit.service';\nimport { NotificationService } from 'app/shared/services/notification.service';\nimport { PayementCredit } from 'app/shared/models/payementCredit.model';\nimport { NgForm } from '@angular/forms';\nimport { SessionService } from 'app/shared/services/session.service';\n\n@Component({\n  selector: 'app-recette-credits-edit',\n  templateUrl: './recette-credits-edit.component.html',\n  styleUrls: ['./recette-credits-edit.component.css']\n})\nexport class RecetteCreditsEditComponent implements OnInit {\n\n  public payementCredit: PayementCredit;\n  public width: number;\n\n  constructor(public dialogRef: MatDialogRef<RecetteCreditsEditComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any,\n              private payementCreditService: PayementCreditService,\n              private notifservice: NotificationService,\n              private sessionService: SessionService) {\n    this.payementCredit = data.payementCredit;\n    this.width = 2;\n  }\n\n  ngOnInit() {\n    if (document.body.clientWidth < 600) {\n      this.width = 1;\n    }\n  }\n\n  onClose(): void {\n    this.dialogRef.close();\n  }\n\n  onClear(form: NgForm): void {\n    form.reset();\n  }\n\n  updatePayementCredit(): void {\n    this.payementCreditService.updatePayementCredit(this.payementCredit._id, this.payementCredit).subscribe(res => {\n      this.payementCreditService.getPayementCreditsList(this.sessionService.currentSessionId);\n      this.dialogRef.close();\n      this.notifservice.success('Payement Credit modifié avec succés');\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL1JlY2V0dGUvc2hvdy1kZXRhaWxzL3JlY2V0dGUtY3JlZGl0cy9yZWNldHRlLWNyZWRpdHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"search-div\\\">\\n  <button mat-raised-button (click)=\\\"addPayementCreditDialog()\\\">\\n    <mat-icon>add</mat-icon>Ajouter\\n  </button>\\n  <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\n    <input matInput placeholder=\\\"Search\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"search\\\" (keyup)=\\\"filter()\\\">\\n    <button *ngIf=\\\"search\\\" mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"clearSearch()\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </mat-form-field>\\n</div>\\n<div class=\\\"mat-elevation-z8\\\">\\n  <mat-table [dataSource]=\\\"payementCreditService.payementCreditsMatTab\\\" matSort>\\n    <ng-container matColumnDef=\\\"clientNumber\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Numéro du client</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.clientNumber}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef>Recette Crédits</mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"clientName\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Nom du client</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.clientName}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"payementValue\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Valeur de payement</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.payementValue}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef>{{getTotalPrevue()}}</mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"date\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>date de payement</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.date}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <mat-header-cell *matHeaderCellDef>\\n      </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\">\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Editer\\\" color=\\\"primary\\\" (click)=\\\"updatePayementCreditDialog(row)\\\">\\n          <mat-icon>edit</mat-icon>\\n        </button>\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Supprimer\\\" color=\\\"warn\\\"\\n          (click)=\\\"deletePayementCreditDialog(row._id, 'Payement credit')\\\">\\n          <mat-icon>delete_outline</mat-icon>\\n        </button>\\n      </mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"loading\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n        Loading data ...\\n      </mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"noData\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n        No data.\\n      </mat-footer-cell>\\n    </ng-container>\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    <mat-footer-row *matFooterRowDef=\\\"displayedColumns\\\"\\n      [ngClass]=\\\"{'hide':payementCreditService.payementCreditsMatTab!=null && payementCreditService.payementCreditsMatTab.data.length==0}\\\">\\n    </mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':payementCreditService.payementCreditsMatTab!=null}\\\">\\n    </mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\"\\n      [ngClass]=\\\"{'hide':!(payementCreditService.payementCreditsMatTab!=null && payementCreditService.payementCreditsMatTab.data.length==0)}\\\">\\n    </mat-footer-row>\\n  </mat-table>\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" [pageSize]=\\\"5\\\" showFirstLastButtons></mat-paginator>\\n</div>\\n\\n\"","import { Component, OnInit, HostListener, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort, MatDialog } from '@angular/material';\nimport { PayementCreditService } from 'app/shared/services/payement-credit.service';\nimport { RecetteCreditsAddComponent } from './recette-credits-add/recette-credits-add.component';\nimport { ConfirmDeleteComponent } from '@ComShared/confirm-delete/confirm-delete.component';\nimport { RecetteCreditsEditComponent } from './recette-credits-edit/recette-credits-edit.component';\nimport { PayementCredit } from 'app/shared/models/payementCredit.model';\nimport { SessionService } from 'app/shared/services/session.service';\n\n@Component({\n  selector: 'app-recette-credits',\n  templateUrl: './recette-credits.component.html',\n  styleUrls: ['./recette-credits.component.css']\n})\nexport class RecetteCreditsComponent implements OnInit {\n\n  public displayedColumns: string[];\n  public search: string;\n  screenHeight: any;\n  screenWidth: any;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(public payementCreditService: PayementCreditService,\n              private dialog: MatDialog,\n              private sessionService: SessionService) {\n    this.displayedColumns = ['clientNumber', 'clientName', 'payementValue', 'date', 'actions'];\n  }\n\n  getTotalPrevue() {\n    return this.payementCreditService.getTotalPrevue();\n  }\n\n  ngOnInit() {\n    this.payementCreditService.getPayementCreditsList(this.sessionService.currentSessionId, this.sort, this.paginator);\n  }\n\n  addPayementCreditDialog(): void {\n    this.dialog.open(RecetteCreditsAddComponent, {\n      panelClass: 'full-width-dialog'\n    });\n  }\n\n  deletePayementCreditDialog(id: string, msg: string): void {\n    this.dialog.open(ConfirmDeleteComponent, {\n      data: { id, msg }\n    });\n  }\n\n  updatePayementCreditDialog(payementCredit: PayementCredit): void {\n    this.dialog.open(RecetteCreditsEditComponent, {\n      panelClass: 'full-width-dialog',\n      data: { payementCredit: Object.assign({}, payementCredit) }\n    });\n  }\n\n  filter(): void {\n    this.payementCreditService.payementCreditsMatTab.filter = this.search.trim().toLowerCase();\n  }\n\n  clearSearch(): void {\n    this.search = '';\n    this.filter();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL1JlY2V0dGUvc2hvdy1kZXRhaWxzL3JlY2V0dGUtZXNwZWNlL3JlY2V0dGUtZXNwZWNlLWFkZC9yZWNldHRlLWVzcGVjZS1hZGQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-toolbar>\\n  <span>Ajouter recette espece</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\n    <mat-icon>clear</mat-icon>\\n  </button>\\n</mat-toolbar>\\n\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\n  <div>\\n    <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <mat-label>Valeur en TND</mat-label>\\n          <mat-select required name=\\\"type\\\" [(ngModel)]=\\\"espece.type\\\">\\n            <mat-option>None</mat-option>\\n            <mat-option [value]=\\\"0.05\\\">0.05</mat-option>\\n            <mat-option [value]=\\\"0.1\\\">0.1</mat-option>\\n            <mat-option [value]=\\\"0.2\\\">0.2</mat-option>\\n            <mat-option [value]=\\\"0.5\\\">0.5</mat-option>\\n            <mat-option [value]=\\\"1\\\">1</mat-option>\\n            <mat-option [value]=\\\"2\\\">2</mat-option>\\n            <mat-option [value]=\\\"5\\\">5</mat-option>\\n            <mat-option [value]=\\\"10\\\">10</mat-option>\\n            <mat-option [value]=\\\"20\\\">20</mat-option>\\n            <mat-option [value]=\\\"50\\\">50</mat-option>\\n          </mat-select>\\n          <mat-error>Valeur en TND est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Quantité\\\" required type=\\\"number\\\" name=\\\"quantity\\\" [(ngModel)]=\\\"espece.quantity\\\">\\n          <mat-error>Quantité est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n    </mat-grid-list>\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addEspece()\\\"\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Ajouter\\n      </button>\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Espece } from 'app/shared/models/espece';\nimport { MatDialogRef } from '@angular/material';\nimport { EspeceService } from 'app/shared/services/espece.service';\nimport { NotificationService } from 'app/shared/services/notification.service';\nimport { SessionService } from 'app/shared/services/session.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-recette-espece-add',\n  templateUrl: './recette-espece-add.component.html',\n  styleUrls: ['./recette-espece-add.component.css']\n})\nexport class RecetteEspeceAddComponent implements OnInit {\n\n  public espece: Espece;\n  public width: number;\n\n  constructor(private dialogMat: MatDialogRef<RecetteEspeceAddComponent>,\n              private especeService: EspeceService,\n              private notifService: NotificationService,\n              private sessionService: SessionService) {\n    this.espece = new Espece();\n    this.width = 2;\n  }\n\n  ngOnInit() {\n    if (document.body.clientWidth < 600) {\n      this.width = 1;\n    }\n  }\n\n  onClose(): void {\n    this.dialogMat.close();\n  }\n\n  onClear(form: NgForm): void {\n    form.reset();\n  }\n\n  addEspece(): void {\n    this.espece.totalValue = this.espece.type * this.espece.quantity;\n    this.espece.state = 'Non';\n    this.espece.sessionId = this.sessionService.sessions[0]._id;\n    const exists = this.especeService.especes.filter(e => e.type === this.espece.type).filter(e => e.sessionId === this.espece.sessionId);\n    if (exists.length > 0) {\n      exists[0].quantity += this.espece.quantity;\n      exists[0].totalValue = exists[0].type * exists[0].quantity;\n      this.especeService.updateEspece(exists[0]._id, exists[0]).subscribe(res => {\n        this.especeService.getEspecesListById(this.sessionService.currentSessionId);\n        this.dialogMat.close();\n        this.notifService.success('Recette espece modifié avec succés');\n      },\n        err => {\n          console.log(err);\n        });\n    } else {\n      this.especeService.addEspece(this.espece).subscribe(res => {\n        this.especeService.getEspecesListById(this.sessionService.currentSessionId);\n        this.dialogMat.close();\n        this.notifService.success('recette espece ajouter avec succés');\n      },\n        err => {\n          console.log(err);\n        });\n    }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL1JlY2V0dGUvc2hvdy1kZXRhaWxzL3JlY2V0dGUtZXNwZWNlL3JlY2V0dGUtZXNwZWNlLWVkaXQvcmVjZXR0ZS1lc3BlY2UtZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-toolbar>\\n  <span>Modifier recette espece</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\n    <mat-icon>clear</mat-icon>\\n  </button>\\n</mat-toolbar>\\n\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\n  <div>\\n    <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <mat-label>Valeur en TND</mat-label>\\n          <mat-select required name=\\\"type\\\" [(ngModel)]=\\\"espece.type\\\">\\n            <mat-option>None</mat-option>\\n            <mat-option [value]=\\\"0.05\\\">0.05</mat-option>\\n            <mat-option [value]=\\\"0.1\\\">0.1</mat-option>\\n            <mat-option [value]=\\\"0.2\\\">0.2</mat-option>\\n            <mat-option [value]=\\\"0.5\\\">0.5</mat-option>\\n            <mat-option [value]=\\\"1\\\">1</mat-option>\\n            <mat-option [value]=\\\"2\\\">2</mat-option>\\n            <mat-option [value]=\\\"5\\\">5</mat-option>\\n            <mat-option [value]=\\\"10\\\">10</mat-option>\\n            <mat-option [value]=\\\"20\\\">20</mat-option>\\n            <mat-option [value]=\\\"50\\\">50</mat-option>\\n          </mat-select>\\n          <mat-error>Valeur en TND est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Quantité\\\" required type=\\\"number\\\" name=\\\"quantity\\\" [(ngModel)]=\\\"espece.quantity\\\">\\n          <mat-error>Quantité est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n    </mat-grid-list>\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"updateEspece()\\\"\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Modifier\\n      </button>\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Espece } from 'app/shared/models/espece';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { EspeceService } from 'app/shared/services/espece.service';\nimport { NotificationService } from 'app/shared/services/notification.service';\nimport { SessionService } from 'app/shared/services/session.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-recette-espece-edit',\n  templateUrl: './recette-espece-edit.component.html',\n  styleUrls: ['./recette-espece-edit.component.css']\n})\nexport class RecetteEspeceEditComponent implements OnInit {\n\n  public espece: Espece;\n  public width: number;\n\n  constructor(public dialogRef: MatDialogRef<RecetteEspeceEditComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any,\n              private especeService: EspeceService,\n              private notifService: NotificationService,\n              private sessionService: SessionService) {\n    this.espece = data.espece;\n    this.width = 2;\n  }\n\n  ngOnInit() {\n    if (document.body.clientWidth < 600) {\n      this.width = 1;\n    }\n  }\n\n  onClose(): void {\n    this.dialogRef.close();\n  }\n\n  onClear(form: NgForm): void {\n    form.reset();\n  }\n\n  updateEspece(): void {\n    this.espece.totalValue = this.espece.type * this.espece.quantity;\n    this.especeService.updateEspece(this.espece._id, this.espece).subscribe(res => {\n      this.especeService.getEspecesListById(this.sessionService.currentSessionId);\n      this.dialogRef.close();\n      this.notifService.success('Recette espece modifié avec succés');\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL1JlY2V0dGUvc2hvdy1kZXRhaWxzL3JlY2V0dGUtZXNwZWNlL3JlY2V0dGUtZXNwZWNlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"search-div\\\">\\n  <button mat-raised-button (click)=\\\"addEspeceDialog()\\\">\\n    <mat-icon>add</mat-icon>Ajouter\\n  </button>\\n  <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\n    <input matInput placeholder=\\\"Search\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"search\\\" (keyup)=\\\"filter()\\\">\\n    <button *ngIf=\\\"search\\\" mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"clearSearch()\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </mat-form-field>\\n</div>\\n<div class=\\\"mat-elevation-z8\\\">\\n  <mat-table [dataSource]=\\\"especeService.especesMatTab\\\" matSort>\\n    <ng-container matColumnDef=\\\"type\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Valeur en TND</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.type}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef>Recette Espece</mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"quantity\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Quntité</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.quantity}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"totalValue\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Valeur Total</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.totalValue}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef>{{getTotalPrevue()}}</mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <mat-header-cell *matHeaderCellDef>\\n      </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\">\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Editer\\\" color=\\\"primary\\\"\\n          (click)=\\\"updateEspeceDialog(row)\\\">\\n          <mat-icon>edit</mat-icon>\\n        </button>\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Supprimer\\\" color=\\\"warn\\\"\\n          (click)=\\\"deleteEspeceDialog(row._id, 'recette-espece')\\\">\\n          <mat-icon>delete_outline</mat-icon>\\n        </button>\\n      </mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"loading\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n        Loading data ...\\n      </mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"noData\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n        No data.\\n      </mat-footer-cell>\\n    </ng-container>\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    <mat-footer-row *matFooterRowDef=\\\"displayedColumns\\\"\\n      [ngClass]=\\\"{'hide':especeService.especesMatTab!=null && especeService.especesMatTab.data.length==0}\\\">\\n    </mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':especeService.especesMatTab!=null}\\\">\\n    </mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\"\\n      [ngClass]=\\\"{'hide':!(especeService.especesMatTab!=null && especeService.especesMatTab.data.length==0)}\\\">\\n    </mat-footer-row>\\n  </mat-table>\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" [pageSize]=\\\"5\\\" showFirstLastButtons></mat-paginator>\\n</div>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSort, MatPaginator, MatDialog } from '@angular/material';\nimport { EspeceService } from 'app/shared/services/espece.service';\nimport { SessionService } from 'app/shared/services/session.service';\nimport { RecetteEspeceAddComponent } from './recette-espece-add/recette-espece-add.component';\nimport { ConfirmDeleteComponent } from '@ComShared/confirm-delete/confirm-delete.component';\nimport { RecetteEspeceEditComponent } from './recette-espece-edit/recette-espece-edit.component';\nimport { Espece } from 'app/shared/models/espece';\n\n@Component({\n  selector: 'app-recette-espece',\n  templateUrl: './recette-espece.component.html',\n  styleUrls: ['./recette-espece.component.css']\n})\nexport class RecetteEspeceComponent implements OnInit {\n\n  public displayedColumns: string[];\n  public search: string;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(public especeService: EspeceService,\n              private dialog: MatDialog,\n              private sessionService: SessionService) {\n    this.displayedColumns = ['type', 'quantity', 'totalValue', 'actions'];\n  }\n\n  ngOnInit() {\n    this.especeService.getEspecesListById(this.sessionService.currentSessionId, this.sort, this.paginator);\n  }\n\n  getTotalPrevue() {\n    return this.especeService.getTotalPrevue();\n  }\n\n  addEspeceDialog(): void {\n    this.dialog.open(RecetteEspeceAddComponent, {\n      panelClass: 'full-width-dialog'\n    });\n  }\n\n  deleteEspeceDialog(id: string, msg: string): void {\n    this.dialog.open(ConfirmDeleteComponent, {\n      data: { id, msg }\n    });\n  }\n\n  updateEspeceDialog(espece: Espece): void {\n    this.dialog.open(RecetteEspeceEditComponent, {\n      panelClass: 'full-width-dialog',\n      data: { espece: Object.assign({}, espece) }\n    });\n  }\n\n  filter(): void {\n    this.especeService.especesMatTab.filter = this.search.trim().toLowerCase();\n  }\n\n  clearSearch(): void {\n    this.search = '';\n    this.filter();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL1JlY2V0dGUvc2hvdy1kZXRhaWxzL3JlY2V0dGUtc3RlZy1ldC1hdXRyZXMvcmVjZXR0ZS1zdGVnLWV0LWF1dHJlcy1hZGQvcmVjZXR0ZS1zdGVnLWV0LWF1dHJlcy1hZGQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-toolbar>\\n  <span>Ajouter Bon</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\n    <mat-icon>clear</mat-icon>\\n  </button>\\n</mat-toolbar>\\n\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\n  <div>\\n    <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Numéro du bon\\\" required type=\\\"text\\\" name=\\\"cardNumber\\\"\\n            [(ngModel)]=\\\"stegEtAutre.cardNumber\\\">\\n          <mat-error>Numéro du bon est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Numéro du client\\\" required type=\\\"text\\\" name=\\\"clientNumber\\\" maxlength=\\\"4\\\"\\n            (change)=\\\"getClient(stegEtAutre.clientNumber)\\\" [(ngModel)]=\\\"stegEtAutre.clientNumber\\\">\\n          <mat-error>Numéro du client est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nom du client\\\" required disabled type=\\\"text\\\" name=\\\"clientName\\\"\\n            [(ngModel)]=\\\"stegEtAutre.clientName\\\">\\n          <mat-error>Nom du client est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Chauffeur\\\" required type=\\\"text\\\" name=\\\"chauffeur\\\"\\n            [(ngModel)]=\\\"stegEtAutre.chauffeur\\\">\\n          <mat-error>Chauffeur est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <mat-label>Carburant</mat-label>\\n          <mat-select required [(ngModel)]=\\\"stegEtAutre.carburant\\\" name=\\\"carburant\\\"\\n            (selectionChange)=\\\"getCarburantPrices(stegEtAutre.carburant)\\\">\\n            <mat-option>None</mat-option>\\n            <mat-option *ngFor=\\\"let p of carburantService.carburants\\\" [value]=\\\"p._id\\\">{{p.ref}}</mat-option>\\n          </mat-select>\\n          <mat-error>Carburant est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nombre de litres\\\" required type=\\\"number\\\" name=\\\"numberOfLiters\\\"\\n            [(ngModel)]=\\\"stegEtAutre.numberOfLiters\\\">\\n          <mat-error>Nombre de litres est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <mat-label>Prix (L)</mat-label>\\n          <mat-select required [(ngModel)]=\\\"stegEtAutre.literPrice\\\" name=\\\"literPrice\\\">\\n            <mat-option>None</mat-option>\\n            <mat-option *ngFor=\\\"let p of prices\\\" [value]=\\\"p\\\">{{p}}</mat-option>\\n          </mat-select>\\n          <mat-error>Prix d'un litre est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nombre de bons\\\" required type=\\\"number\\\" name=\\\"numberOfCards\\\"\\n            [(ngModel)]=\\\"stegEtAutre.numberOfCards\\\">\\n          <mat-error>Nombre de cartes est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"date de livraison\\\" required disabled type=\\\"text\\\" name=\\\"date\\\"\\n            [(ngModel)]=\\\"stegEtAutre.date\\\">\\n          <mat-error>date de livraison est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n    </mat-grid-list>\\n    <div>\\n      <span class=\\\"error-message\\\" *ngIf=\\\"error\\\">{{errorMessage}}</span>\\n    </div>\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addStegEtAutre()\\\"\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Ajouter\\n      </button>\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { StegEtAutre } from 'app/shared/models/StegEtAutre.model';\nimport { MatDialogRef } from '@angular/material';\nimport { StegEtAutresService } from 'app/shared/services/steg-et-autres.service';\nimport { SessionService } from 'app/shared/services/session.service';\nimport { NotificationService } from 'app/shared/services/notification.service';\nimport { NgForm } from '@angular/forms';\nimport { CarburantService } from 'app/shared/services/carburant.service';\nimport { ClientService } from 'app/shared/services/client.service';\nimport { PrixCarburantService } from 'app/shared/services/prix-carburant.service';\n\n@Component({\n  selector: 'app-recette-steg-et-autres-add',\n  templateUrl: './recette-steg-et-autres-add.component.html',\n  styleUrls: ['./recette-steg-et-autres-add.component.css']\n})\nexport class RecetteStegEtAutresAddComponent implements OnInit {\n\n  public stegEtAutre: StegEtAutre;\n  public width: number;\n  public error: boolean;\n  public errorMessage: string;\n  public prices: number[];\n\n\n  constructor(private dialogMat: MatDialogRef<RecetteStegEtAutresAddComponent>,\n              private stegEtAutreService: StegEtAutresService,\n              private sessionService: SessionService,\n              private clientService: ClientService,\n              private notifService: NotificationService,\n              public carburantService: CarburantService,\n              private prixCarburantService: PrixCarburantService) {\n    this.stegEtAutre = new StegEtAutre();\n    this.width = 2;\n    this.prices = [];\n  }\n\n  getClient(clientNumber: string) {\n    this.error = false;\n    if (clientNumber.length === 4) {\n      const res = this.clientService.clients.filter(c => c.number === clientNumber);\n      if (res.length === 0) {\n        this.error = true;\n        this.errorMessage = 'Error: le numéro de client doit être composé de 4 chiffres';\n        this.stegEtAutre.clientName = undefined;\n      } else {\n        this.stegEtAutre.clientName = res[0].name;\n      }\n    } else {\n      this.error = true;\n      this.errorMessage = 'Error: ce n\\'est pas un numéro de client';\n      this.stegEtAutre.clientName = undefined;\n    }\n\n  }\n\n  getCarburantPrices(carburant: string): void {\n    this.prices = [];\n    const carburantObject = this.carburantService.carburants.filter(c => c._id === carburant);\n    const priceResult = this.prixCarburantService.prixCarburants.filter(x => x.carburant === carburantObject[0].ref).slice(0, 7);\n    console.log(priceResult);\n    let price: number;\n    for (let _i = 0; _i < 7; _i++) {\n      try {\n        price = parseFloat(priceResult[_i].prix.toFixed(3));\n      } catch (err) {\n        this.notifService.warn('Essayez à nouveau, une erreur est survenue');\n        this.stegEtAutre.carburant = undefined;\n        this.prices = [];\n      }\n      this.prices.push(price);\n    }\n  }\n\n  ngOnInit() {\n    if (document.body.clientWidth < 600) {\n      this.width = 1;\n    }\n    const datetime = new Date();\n    const date = datetime.toISOString().slice(0, 10);\n    this.stegEtAutre.date = date;\n    this.carburantService.getCarburantsList();\n    this.prixCarburantService.getCarburantList();\n    this.clientService.getClientsList();\n  }\n\n  onClose(): void {\n    this.dialogMat.close();\n  }\n\n  onClear(form: NgForm): void {\n    form.reset();\n  }\n\n  addStegEtAutre(): void {\n    this.stegEtAutre.sessionId = this.sessionService.currentSessionId;\n    this.stegEtAutre.cardValue = parseFloat((this.stegEtAutre.literPrice * this.stegEtAutre.numberOfLiters).toFixed(3));\n    this.stegEtAutre.totalValue = parseFloat((this.stegEtAutre.cardValue * this.stegEtAutre.numberOfCards).toFixed(3));\n    this.stegEtAutreService.addStegEtAutre(this.stegEtAutre).subscribe(res => {\n      this.stegEtAutreService.getStegEtAutresListById(this.sessionService.currentSessionId);\n      this.dialogMat.close();\n      this.notifService.success('Bon ajouter avec succés');\n    },\n      err => {\n        console.log(err);\n      });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL1JlY2V0dGUvc2hvdy1kZXRhaWxzL3JlY2V0dGUtc3RlZy1ldC1hdXRyZXMvcmVjZXR0ZS1zdGVnLWV0LWF1dHJlcy1lZGl0L3JlY2V0dGUtc3RlZy1ldC1hdXRyZXMtZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-toolbar>\\n  <span>Modifier Bon</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\n    <mat-icon>clear</mat-icon>\\n  </button>\\n</mat-toolbar>\\n\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\n  <div>\\n    <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Numéro du bon\\\" required type=\\\"text\\\" name=\\\"cardNumber\\\"\\n            [(ngModel)]=\\\"stegEtAutre.cardNumber\\\">\\n          <mat-error>Numéro du bon est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Numéro du client\\\" required type=\\\"text\\\" name=\\\"clientNumber\\\"\\n            [(ngModel)]=\\\"stegEtAutre.clientNumber\\\">\\n          <mat-error>Numéro du client est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nom du client\\\" required type=\\\"text\\\" name=\\\"clientName\\\"\\n            [(ngModel)]=\\\"stegEtAutre.clientName\\\">\\n          <mat-error>Nom du client est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Chauffeur\\\" required type=\\\"number\\\" name=\\\"chauffeur\\\"\\n            [(ngModel)]=\\\"stegEtAutre.chauffeur\\\">\\n          <mat-error>Chauffeur est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Carburant\\\" required type=\\\"number\\\" name=\\\"carburant\\\"\\n            [(ngModel)]=\\\"stegEtAutre.carburant\\\">\\n          <mat-error>Carburant est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nombre de litres\\\" required type=\\\"number\\\" name=\\\"numberOfLiters\\\"\\n            [(ngModel)]=\\\"stegEtAutre.numberOfLiters\\\">\\n          <mat-error>Nombre de litres est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Prix (L)\\\" required type=\\\"number\\\" name=\\\"literPrice\\\"\\n            [(ngModel)]=\\\"stegEtAutre.literPrice\\\">\\n          <mat-error>Prix d'un litre est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nombre de bons\\\" required type=\\\"number\\\" name=\\\"numberOfCards\\\"\\n            [(ngModel)]=\\\"stegEtAutre.numberOfCards\\\">\\n          <mat-error>Nombre de cartes est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Valeur du bon\\\" required type=\\\"number\\\" name=\\\"cardValue\\\"\\n            [(ngModel)]=\\\"stegEtAutre.cardValue\\\">\\n          <mat-error>Valeur du bon est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"date de livraison\\\" required disabled type=\\\"text\\\" name=\\\"date\\\"\\n            [(ngModel)]=\\\"stegEtAutre.date\\\">\\n          <mat-error>date de livraison est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n    </mat-grid-list>\\n\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"updateStegEtAutre()\\\"\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Modifier\\n      </button>\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { StegEtAutre } from 'app/shared/models/StegEtAutre.model';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { StegEtAutresService } from 'app/shared/services/steg-et-autres.service';\nimport { NotificationService } from 'app/shared/services/notification.service';\nimport { NgForm } from '@angular/forms';\nimport { SessionService } from 'app/shared/services/session.service';\n\n@Component({\n  selector: 'app-recette-steg-et-autres-edit',\n  templateUrl: './recette-steg-et-autres-edit.component.html',\n  styleUrls: ['./recette-steg-et-autres-edit.component.css']\n})\nexport class RecetteStegEtAutresEditComponent implements OnInit {\n\n  public stegEtAutre: StegEtAutre;\n  public width: number;\n\n  constructor(public dialogRef: MatDialogRef<RecetteStegEtAutresEditComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any,\n              private stegEtAutreService: StegEtAutresService,\n              private sessionService: SessionService,\n              private notifservice: NotificationService) {\n    this.stegEtAutre = data.stegEtAutre;\n    this.width = 2;\n  }\n\n  ngOnInit() {\n    if (document.body.clientWidth < 600) {\n      this.width = 1;\n    }\n  }\n\n  onClose(): void {\n    this.dialogRef.close();\n  }\n\n  onClear(form: NgForm): void {\n    form.reset();\n  }\n\n  updateStegEtAutre(): void {\n    this.stegEtAutreService.updateStegEtAutre(this.stegEtAutre._id, this.stegEtAutre).subscribe(res => {\n      this.stegEtAutreService.getStegEtAutresListById(this.sessionService.currentSessionId);\n      this.dialogRef.close();\n      this.notifservice.success('Bon modifié avec succés');\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL1JlY2V0dGUvc2hvdy1kZXRhaWxzL3JlY2V0dGUtc3RlZy1ldC1hdXRyZXMvcmVjZXR0ZS1zdGVnLWV0LWF1dHJlcy1tb3JlLWRldGFpbHMvcmVjZXR0ZS1zdGVnLWV0LWF1dHJlcy1tb3JlLWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div mat-dialog-content>\\n  <mat-list>\\n    <mat-list-item>\\n      <h4>Numéro Bon: </h4>&nbsp;&nbsp;{{stegEtAutre.cardNumber}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Code client: </h4>&nbsp;&nbsp;{{stegEtAutre.clientNumber}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Nom client: </h4>&nbsp;&nbsp;{{stegEtAutre.clientName}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Chauffeur: </h4>&nbsp;&nbsp;{{stegEtAutre.chauffeur}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>carburant: </h4>&nbsp;&nbsp;{{stegEtAutre.carburant}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Nombre de litres: </h4>&nbsp;&nbsp;{{stegEtAutre.numberOfLiters}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Prix par litre: </h4>&nbsp;&nbsp;{{stegEtAutre.literPrice}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Nombre de cartes: </h4>&nbsp;&nbsp;{{stegEtAutre.numberOfCards}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Valeur du carte: </h4>&nbsp;&nbsp;{{stegEtAutre.cardValue}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Valeur total: </h4>&nbsp;&nbsp;{{stegEtAutre.totalValue}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Date de livraison: </h4>&nbsp;&nbsp;{{stegEtAutre.date}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n  </mat-list>\\n</div>\\n<div mat-dialog-actions>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button mat-raised-button (click)=\\\"onNoClick()\\\" color=\\\"primary\\\">Fermer</button>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n</div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { StegEtAutre } from 'app/shared/models/StegEtAutre.model';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-recette-steg-et-autres-more-details',\n  templateUrl: './recette-steg-et-autres-more-details.component.html',\n  styleUrls: ['./recette-steg-et-autres-more-details.component.css']\n})\nexport class RecetteStegEtAutresMoreDetailsComponent implements OnInit {\n\n  public stegEtAutre: StegEtAutre;\n\n  constructor(public dialogRef: MatDialogRef<RecetteStegEtAutresMoreDetailsComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n      this.stegEtAutre = data.stegEtAutre;\n     }\n\n  ngOnInit() {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL1JlY2V0dGUvc2hvdy1kZXRhaWxzL3JlY2V0dGUtc3RlZy1ldC1hdXRyZXMvcmVjZXR0ZS1zdGVnLWV0LWF1dHJlcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"search-div\\\">\\n  <button mat-raised-button (click)=\\\"addStegEtAutreDialog()\\\">\\n    <mat-icon>add</mat-icon>Ajouter\\n  </button>\\n  <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\n    <input matInput placeholder=\\\"Search\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"search\\\" (keyup)=\\\"filter()\\\">\\n    <button *ngIf=\\\"search\\\" mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"clearSearch()\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </mat-form-field>\\n</div>\\n<div class=\\\"mat-elevation-z8\\\">\\n  <mat-table [dataSource]=\\\"stegEtAutreService.stegEtAutresMatTab\\\" matSort>\\n    <ng-container matColumnDef=\\\"clientName\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Nom du client</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.clientName}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef>Recette STEG et autres</mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"carburant\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Code Carburant</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.carburant}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"numberOfCards\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Nombre des bons</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.numberOfCards}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"totalValue\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Total bons</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.totalValue}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef>{{getTotalPrevue()}}</mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <mat-header-cell *matHeaderCellDef>\\n      </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\">\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Voir plus\\\" (click)=\\\"seeMoreDialog(row)\\\">\\n          <mat-icon>remove_red_eye</mat-icon>\\n        </button>\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Editer\\\" color=\\\"primary\\\"\\n          (click)=\\\"updateStegEtAutreDialog(row)\\\">\\n          <mat-icon>edit</mat-icon>\\n        </button>\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Supprimer\\\" color=\\\"warn\\\"\\n          (click)=\\\"deleteStegEtAutreDialog(row._id, 'recette-stegEtAutre')\\\">\\n          <mat-icon>delete_outline</mat-icon>\\n        </button>\\n      </mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"loading\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n        Loading data ...\\n      </mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"noData\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n        No data.\\n      </mat-footer-cell>\\n    </ng-container>\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    <mat-footer-row *matFooterRowDef=\\\"displayedColumns\\\"\\n      [ngClass]=\\\"{'hide':stegEtAutreService.stegEtAutresMatTab!=null && stegEtAutreService.stegEtAutresMatTab.data.length==0}\\\">\\n    </mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':stegEtAutreService.stegEtAutresMatTab!=null}\\\">\\n    </mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\"\\n      [ngClass]=\\\"{'hide':!(stegEtAutreService.stegEtAutresMatTab!=null && stegEtAutreService.stegEtAutresMatTab.data.length==0)}\\\">\\n    </mat-footer-row>\\n  </mat-table>\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" [pageSize]=\\\"5\\\" showFirstLastButtons></mat-paginator>\\n</div>\\n\"","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { RecetteStegEtAutresAddComponent } from './recette-steg-et-autres-add/recette-steg-et-autres-add.component';\nimport { ConfirmDeleteComponent } from '@ComShared/confirm-delete/confirm-delete.component';\nimport { StegEtAutre } from 'app/shared/models/StegEtAutre.model';\nimport { RecetteStegEtAutresEditComponent } from './recette-steg-et-autres-edit/recette-steg-et-autres-edit.component';\nimport { StegEtAutresService } from 'app/shared/services/steg-et-autres.service';\nimport { MatPaginator, MatSort, MatDialog } from '@angular/material';\nimport { RecetteStegEtAutresMoreDetailsComponent } from '@ComSEAMD';\nimport { SessionService } from 'app/shared/services/session.service';\n\n@Component({\n  selector: 'app-recette-steg-et-autres',\n  templateUrl: './recette-steg-et-autres.component.html',\n  styleUrls: ['./recette-steg-et-autres.component.css']\n})\nexport class RecetteStegEtAutresComponent implements OnInit {\n\n  public displayedColumns: string[];\n  public search: string;\n  screenHeight: any;\n  screenWidth: any;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(public stegEtAutreService: StegEtAutresService,\n              private dialog: MatDialog,\n              private sessionService: SessionService) {\n    this.displayedColumns = ['clientName', 'carburant', 'numberOfCards', 'totalValue', 'actions'];\n  }\n\n  @HostListener('window:resize', ['$event'])\n  getScreenSize(event?) {\n    this.screenHeight = window.innerHeight;\n    this.screenWidth = window.innerWidth;\n    if (this.screenWidth < 650) {\n      this.displayedColumns = ['clientName', 'carburant', 'totalValue', 'actions'];\n    } else {\n      this.displayedColumns = ['clientName', 'carburant', 'numberOfCards', 'totalValue', 'actions'];\n    }\n  }\n\n  getTotalPrevue() {\n    return this.stegEtAutreService.getTotalPrevue();\n  }\n\n  ngOnInit() {\n    this.stegEtAutreService.getStegEtAutresListById(this.sessionService.currentSessionId, this.sort, this.paginator);\n  }\n\n  addStegEtAutreDialog(): void {\n    this.dialog.open(RecetteStegEtAutresAddComponent, {\n      panelClass: 'full-width-dialog'\n    });\n  }\n\n  deleteStegEtAutreDialog(id: string, msg: string): void {\n    this.dialog.open(ConfirmDeleteComponent, {\n      data: { id, msg }\n    });\n  }\n\n  seeMoreDialog(stegEtAutre): void {\n    this.dialog.open(RecetteStegEtAutresMoreDetailsComponent, {\n      panelClass: 'full-width-dialog',\n      data: { stegEtAutre }\n    });\n\n  }\n\n  updateStegEtAutreDialog(stegEtAutre: StegEtAutre): void {\n    this.dialog.open(RecetteStegEtAutresEditComponent, {\n      panelClass: 'full-width-dialog',\n      data: { stegEtAutre: Object.assign({}, stegEtAutre) }\n    });\n  }\n\n  filter(): void {\n    this.stegEtAutreService.stegEtAutresMatTab.filter = this.search.trim().toLowerCase();\n  }\n\n  clearSearch(): void {\n    this.search = '';\n    this.filter();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL1JlY2V0dGUvc2hvdy1kZXRhaWxzL3JlY2V0dGUtc3VidmVudGlvbi1wZWNoZS9yZWNldHRlLXN1YnZlbnRpb24tcGVjaGUtYWRkL3JlY2V0dGUtc3VidmVudGlvbi1wZWNoZS1hZGQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-toolbar>\\n  <span>Ajouter bon subvention peche</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\n    <mat-icon>clear</mat-icon>\\n  </button>\\n</mat-toolbar>\\n\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\n  <div>\\n    <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Numéro du bon\\\" required type=\\\"number\\\" name=\\\"cardNumber\\\"\\n            [(ngModel)]=\\\"subventionPeche.cardNumber\\\">\\n          <mat-error>Numéro du bon est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nom de bénéficiaire\\\" required type=\\\"text\\\" name=\\\"payeeName\\\"\\n            [(ngModel)]=\\\"subventionPeche.payeeName\\\">\\n          <mat-error>Nom de bénéficiaire est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Puissance du moteur\\\" required type=\\\"number\\\" name=\\\"motorPower\\\"\\n            [(ngModel)]=\\\"subventionPeche.motorPower\\\">\\n          <mat-error>Puissance du moteur est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nom du bateau\\\" required type=\\\"text\\\" name=\\\"boatName\\\"\\n            [(ngModel)]=\\\"subventionPeche.boatName\\\">\\n          <mat-error>Nom du bateau est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nombre de litres\\\" required type=\\\"number\\\" name=\\\"numberOfLiters\\\"\\n            [(ngModel)]=\\\"subventionPeche.numberOfLiters\\\">\\n          <mat-error>Nombre de litres est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Valeur du bon\\\" required type=\\\"number\\\" name=\\\"cardValue\\\"\\n            [(ngModel)]=\\\"subventionPeche.cardValue\\\">\\n          <mat-error>Valeur du bon est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Prix (L)\\\" required type=\\\"number\\\" name=\\\"literPrice\\\"\\n            [(ngModel)]=\\\"subventionPeche.literPrice\\\">\\n          <mat-error>Prix (L) est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Date Livraison\\\" required type=\\\"text\\\" name=\\\"date\\\" [(ngModel)]=\\\"subventionPeche.date\\\">\\n          <mat-error>Date Livraison est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n    </mat-grid-list>\\n\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addSubventionPeche()\\\"\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Ajouter\\n      </button>\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\n    </div>\\n  </div>\\n</form>\\n\\n\"","import { Component, OnInit, HostListener } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { SessionService } from 'app/shared/services/session.service';\nimport { NotificationService } from 'app/shared/services/notification.service';\nimport { SubventionPeche } from 'app/shared/models/subventionPeche';\nimport { SubventionPecheService } from 'app/shared/services/subvention-peche.service';\nimport { MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-recette-subvention-peche-add',\n  templateUrl: './recette-subvention-peche-add.component.html',\n  styleUrls: ['./recette-subvention-peche-add.component.css']\n})\nexport class RecetteSubventionPecheAddComponent implements OnInit {\n\n  public subventionPeche: SubventionPeche;\n  public width: number;\n  public screenHeight: number;\n  public screenWidth: number;\n\n  constructor(private dialogMat: MatDialogRef<RecetteSubventionPecheAddComponent>,\n              private subventionPecheService: SubventionPecheService,\n              private notifService: NotificationService,\n              private sessionService: SessionService) {\n    this.subventionPeche = new SubventionPeche();\n    this.width = 2;\n  }\n\n  @HostListener('window:resize', ['$event'])\n  getScreenSize(event?) {\n    this.screenHeight = window.innerHeight;\n    this.screenWidth = window.innerWidth;\n    if (this.screenWidth < 650) {\n      this.width =  1;\n    } else {\n      this.width =  2;\n    }\n  }\n\n  ngOnInit() {\n    const datetime = new Date();\n    const date = datetime.toISOString().slice(0, 10);\n    this.subventionPeche.date = date;\n  }\n\n  onClose(): void {\n    this.dialogMat.close();\n  }\n\n  onClear(form: NgForm): void {\n    form.reset();\n  }\n\n  addSubventionPeche(): void {\n    this.subventionPeche.state = 'Non';\n    this.subventionPeche.sessionId = this.sessionService.sessions[0]._id;\n    this.subventionPecheService.addSubventionPeche(this.subventionPeche).subscribe(res => {\n      this.subventionPecheService.getSubventionPechesListById(this.sessionService.currentSessionId);\n      this.dialogMat.close();\n      this.notifService.success('Bon subvention peche ajouter avec succés');\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL1JlY2V0dGUvc2hvdy1kZXRhaWxzL3JlY2V0dGUtc3VidmVudGlvbi1wZWNoZS9yZWNldHRlLXN1YnZlbnRpb24tcGVjaGUtZWRpdC9yZWNldHRlLXN1YnZlbnRpb24tcGVjaGUtZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-toolbar>\\n  <span>Modifier subvention peche bon</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\n    <mat-icon>clear</mat-icon>\\n  </button>\\n</mat-toolbar>\\n\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\n  <div>\\n    <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Numéro du bon\\\" required type=\\\"number\\\" name=\\\"cardNumber\\\"\\n            [(ngModel)]=\\\"subventionPeche.cardNumber\\\">\\n          <mat-error>Numéro du bon est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nom de bénéficiaire\\\" required type=\\\"text\\\" name=\\\"payeeName\\\"\\n            [(ngModel)]=\\\"subventionPeche.payeeName\\\">\\n          <mat-error>Nom de bénéficiaire est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Puissance du moteur\\\" required type=\\\"number\\\" name=\\\"motorPower\\\"\\n            [(ngModel)]=\\\"subventionPeche.motorPower\\\">\\n          <mat-error>Puissance du moteur est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nom du bateau\\\" required type=\\\"text\\\" name=\\\"boatName\\\"\\n            [(ngModel)]=\\\"subventionPeche.boatName\\\">\\n          <mat-error>Nom du bateau est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nombre de litres\\\" required type=\\\"number\\\" name=\\\"numberOfLiters\\\"\\n            [(ngModel)]=\\\"subventionPeche.numberOfLiters\\\">\\n          <mat-error>Nombre de litres est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Valeur du bon\\\" required type=\\\"number\\\" name=\\\"cardValue\\\"\\n            [(ngModel)]=\\\"subventionPeche.cardValue\\\">\\n          <mat-error>Valeur du bon est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Prix (L)\\\" required type=\\\"number\\\" name=\\\"literPrice\\\"\\n            [(ngModel)]=\\\"subventionPeche.literPrice\\\">\\n          <mat-error>Prix (L) est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Date Livraison\\\" required type=\\\"text\\\" name=\\\"date\\\" [(ngModel)]=\\\"subventionPeche.date\\\">\\n          <mat-error>Date Livraison est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n    </mat-grid-list>\\n\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"updateSubventionPeche()\\\"\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Modifier\\n      </button>\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { SubventionPeche } from 'app/shared/models/subventionPeche';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { SubventionPecheService } from 'app/shared/services/subvention-peche.service';\nimport { NotificationService } from 'app/shared/services/notification.service';\nimport { SessionService } from 'app/shared/services/session.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-recette-subvention-peche-edit',\n  templateUrl: './recette-subvention-peche-edit.component.html',\n  styleUrls: ['./recette-subvention-peche-edit.component.css']\n})\nexport class RecetteSubventionPecheEditComponent implements OnInit {\n\n  public subventionPeche: SubventionPeche;\n  public width: number;\n\n  constructor(public dialogRef: MatDialogRef<RecetteSubventionPecheEditComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any,\n              private subventionPecheService: SubventionPecheService,\n              private notifservice: NotificationService,\n              private sessionService: SessionService) {\n    this.subventionPeche = data.subventionPeche;\n    this.width = 2;\n  }\n\n  ngOnInit() {\n    if (document.body.clientWidth < 600) {\n      this.width = 1;\n    }\n  }\n\n  onClose(): void {\n    this.dialogRef.close();\n  }\n\n  onClear(form: NgForm): void {\n    form.reset();\n  }\n\n  updateSubventionPeche(): void {\n    this.subventionPecheService.updateSubventionPeche(this.subventionPeche._id, this.subventionPeche).subscribe(res => {\n      this.subventionPecheService.getSubventionPechesListById(this.sessionService.currentSessionId);\n      this.dialogRef.close();\n      this.notifservice.success('Bon subvention peche modifié avec succés');\n    },\n      err => {\n        console.log(err);\n      });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL1JlY2V0dGUvc2hvdy1kZXRhaWxzL3JlY2V0dGUtc3VidmVudGlvbi1wZWNoZS9yZWNldHRlLXN1YnZlbnRpb24tcGVjaGUtbW9yZS1kZXRhaWxzL3JlY2V0dGUtc3VidmVudGlvbi1wZWNoZS1tb3JlLWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div mat-dialog-content>\\n  <mat-list>\\n    <mat-list-item>\\n      <h4>Numéro du bon: </h4>&nbsp;&nbsp;{{subventionPeche.cardNumber}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Nom de bénéficiaire: </h4>&nbsp;&nbsp;{{subventionPeche.payeeName}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Puissance du moteur: </h4>&nbsp;&nbsp;{{subventionPeche.motorPower}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Nom du bateau: </h4>&nbsp;&nbsp;{{subventionPeche.boatName}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Nombre de litres: </h4>&nbsp;&nbsp;{{subventionPeche.numberOfLiters}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Affecté: </h4>&nbsp;&nbsp;{{subventionPeche.state}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Valeur du bon: </h4>&nbsp;&nbsp;{{subventionPeche.cardValue}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Prix (L): </h4>&nbsp;&nbsp;{{subventionPeche.literPrice}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Date de livraison: </h4>&nbsp;&nbsp;{{subventionPeche.date}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n  </mat-list>\\n</div>\\n<div mat-dialog-actions>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button mat-raised-button (click)=\\\"onNoClick()\\\" color=\\\"primary\\\">Fermer</button>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n</div>\\n\\n\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { SubventionPeche } from 'app/shared/models/subventionPeche';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-recette-subvention-peche-more-details',\n  templateUrl: './recette-subvention-peche-more-details.component.html',\n  styleUrls: ['./recette-subvention-peche-more-details.component.css']\n})\nexport class RecetteSubventionPecheMoreDetailsComponent implements OnInit {\n\n  public subventionPeche: SubventionPeche;\n\n  constructor(public dialogRef: MatDialogRef<RecetteSubventionPecheMoreDetailsComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n      this.subventionPeche = data.subventionPeche;\n     }\n\n  ngOnInit() {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL1JlY2V0dGUvc2hvdy1kZXRhaWxzL3JlY2V0dGUtc3VidmVudGlvbi1wZWNoZS9yZWNldHRlLXN1YnZlbnRpb24tcGVjaGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"search-div\\\">\\n  <button mat-raised-button (click)=\\\"addSubventionPecheDialog()\\\">\\n    <mat-icon>add</mat-icon>Ajouter\\n  </button>\\n  <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\n    <input matInput placeholder=\\\"Search\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"search\\\" (keyup)=\\\"filter()\\\">\\n    <button *ngIf=\\\"search\\\" mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"clearSearch()\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </mat-form-field>\\n</div>\\n<div class=\\\"mat-elevation-z8\\\">\\n  <mat-table [dataSource]=\\\"subventionPecheService.subventionPechesMatTab\\\" matSort>\\n\\n    <ng-container matColumnDef=\\\"cardNumber\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Numéro du bon</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.cardNumber}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef>Recette subvention peche</mat-footer-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"payeeName\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Nom de bénéficiaire</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.payeeName}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"cardValue\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Valeur du bon</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.cardValue}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef>{{getTotalPrevue()}}</mat-footer-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"date\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Date de livraison</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.date}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <mat-header-cell *matHeaderCellDef></mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\">\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Voir plus\\\" (click)=\\\"seeMoreDialog(row)\\\">\\n          <mat-icon>remove_red_eye</mat-icon>\\n        </button>\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Editer\\\" color=\\\"primary\\\" (click)=\\\"updateSubventionPecheDialog(row)\\\">\\n          <mat-icon>edit</mat-icon>\\n        </button>\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Supprimer\\\" color=\\\"warn\\\"\\n          (click)=\\\"deleteSubventionPecheDialog(row._id, 'recette-subventionPeche')\\\">\\n          <mat-icon>delete_outline</mat-icon>\\n        </button>\\n      </mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"loading\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n        Loading data ...\\n      </mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"noData\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n        No data.\\n      </mat-footer-cell>\\n    </ng-container>\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    <mat-footer-row *matFooterRowDef=\\\"displayedColumns\\\"\\n      [ngClass]=\\\"{'hide':subventionPecheService.subventionPechesMatTab!=null && subventionPecheService.subventionPechesMatTab.data.length==0}\\\">\\n    </mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':subventionPecheService.subventionPechesMatTab!=null}\\\">\\n    </mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\"\\n      [ngClass]=\\\"{'hide':!(subventionPecheService.subventionPechesMatTab!=null && subventionPecheService.subventionPechesMatTab.data.length==0)}\\\">\\n    </mat-footer-row>\\n  </mat-table>\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" [pageSize]=\\\"5\\\" showFirstLastButtons></mat-paginator>\\n</div>\\n\\n\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog, MatPaginator, MatSort } from '@angular/material';\nimport { SubventionPecheService } from 'app/shared/services/subvention-peche.service';\nimport { SessionService } from 'app/shared/services/session.service';\nimport { RecetteSubventionPecheMoreDetailsComponent } from '@ComRecetteSubPMD/recette-subvention-peche-more-details.component';\nimport { RecetteSubventionPecheAddComponent } from './recette-subvention-peche-add/recette-subvention-peche-add.component';\nimport { ConfirmDeleteComponent } from '@ComShared/confirm-delete/confirm-delete.component';\nimport { RecetteSubventionPecheEditComponent } from './recette-subvention-peche-edit/recette-subvention-peche-edit.component';\nimport { SubventionPeche } from 'app/shared/models/subventionPeche';\n\n@Component({\n  selector: 'app-recette-subvention-peche',\n  templateUrl: './recette-subvention-peche.component.html',\n  styleUrls: ['./recette-subvention-peche.component.css']\n})\nexport class RecetteSubventionPecheComponent implements OnInit {\n\n  public displayedColumns: string[];\n  public search: string;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(public subventionPecheService: SubventionPecheService,\n              private dialog: MatDialog,\n              private sessionService: SessionService) {\n    this.displayedColumns = ['cardNumber', 'payeeName', 'cardValue', 'date', 'actions'];\n  }\n\n  ngOnInit() {\n    this.subventionPecheService.getSubventionPechesListById(this.sessionService.currentSessionId, this.sort, this.paginator);\n  }\n\n  getTotalPrevue() {\n    return this.subventionPecheService.getTotalPrevue();\n  }\n\n  seeMoreDialog(subventionPeche): void {\n    this.dialog.open(RecetteSubventionPecheMoreDetailsComponent, {\n      panelClass: 'full-width-dialog',\n      height: '500px',\n      data: { subventionPeche }\n    });\n\n  }\n\n  addSubventionPecheDialog(): void {\n    this.dialog.open(RecetteSubventionPecheAddComponent, {\n      panelClass: 'full-width-dialog'\n    });\n  }\n\n  deleteSubventionPecheDialog(id: string, msg: string): void {\n    this.dialog.open(ConfirmDeleteComponent, {\n      data: { id, msg }\n    });\n  }\n\n  updateSubventionPecheDialog(subventionPeche: SubventionPeche): void {\n    this.dialog.open(RecetteSubventionPecheEditComponent, {\n      panelClass: 'full-width-dialog',\n      data: { subventionPeche: Object.assign({}, subventionPeche) }\n    });\n  }\n\n  filter(): void {\n    this.subventionPecheService.subventionPechesMatTab.filter = this.search.trim().toLowerCase();\n  }\n\n  clearSearch(): void {\n    this.search = '';\n    this.filter();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL1JlY2V0dGUvc2hvdy1kZXRhaWxzL3Nob3ctZGV0YWlscy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-toolbar>\\n  <span>Détails recette</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\n    <mat-icon>clear</mat-icon>\\n  </button>\\n</mat-toolbar>\\n\\n<div class=\\\"container\\\">\\n  <mat-accordion>\\n    <mat-dialog-content>\\n\\n      <div class=\\\"margin-param\\\">\\n        <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n            <span>Carte Bon </span>\\n            <span class=\\\"fill-remaining-space\\\"></span>\\n            <span>Valeur Total: {{cardBonService.getTotalPrevue()}}</span>\\n            <span class=\\\"fill-remaining-space\\\"></span>\\n          </mat-expansion-panel-header>\\n          <app-recette-carte-bon></app-recette-carte-bon>\\n        </mat-expansion-panel>\\n      </div>\\n\\n      <div class=\\\"margin-param\\\">\\n        <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n            <span>Bon Valeur</span>\\n            <span class=\\\"fill-remaining-space\\\"></span>\\n            <span>Valeur Total: {{bonValeurService.getTotalPrevue()}}</span>\\n            <span class=\\\"fill-remaining-space\\\"></span>\\n          </mat-expansion-panel-header>\\n          <app-recette-bon-valeur></app-recette-bon-valeur>\\n        </mat-expansion-panel>\\n      </div>\\n\\n      <div class=\\\"margin-param\\\">\\n        <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n            <span>Cheque</span>\\n            <span class=\\\"fill-remaining-space\\\"></span>\\n            <span>Valeur Total: {{chequeService.getTotalPrevue()}}</span>\\n            <span class=\\\"fill-remaining-space\\\"></span>\\n          </mat-expansion-panel-header>\\n          <app-recette-cheque></app-recette-cheque>\\n        </mat-expansion-panel>\\n      </div>\\n\\n      <div class=\\\"margin-param\\\">\\n        <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n            <span>Crédit</span>\\n            <span class=\\\"fill-remaining-space\\\"></span>\\n            <span>Valeur Total: {{payementCreditService.getTotalPrevue()}}</span>\\n            <span class=\\\"fill-remaining-space\\\"></span>\\n          </mat-expansion-panel-header>\\n          <app-recette-credits></app-recette-credits>\\n        </mat-expansion-panel>\\n      </div>\\n\\n      <div class=\\\"margin-param\\\">\\n        <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n            <span>STEG et autres</span>\\n            <span class=\\\"fill-remaining-space\\\"></span>\\n            <span>Valeur Total: {{stegEtAutreService.getTotalPrevue()}}</span>\\n            <span class=\\\"fill-remaining-space\\\"></span>\\n          </mat-expansion-panel-header>\\n          <app-recette-steg-et-autres></app-recette-steg-et-autres>\\n        </mat-expansion-panel>\\n      </div>\\n\\n      <div class=\\\"margin-param\\\">\\n          <mat-expansion-panel>\\n            <mat-expansion-panel-header>\\n              <span>Espèces</span>\\n              <span class=\\\"fill-remaining-space\\\"></span>\\n              <span>Valeur Total: {{especeService.getTotalPrevue()}}</span>\\n              <span class=\\\"fill-remaining-space\\\"></span>\\n            </mat-expansion-panel-header>\\n            <app-recette-espece></app-recette-espece>\\n          </mat-expansion-panel>\\n        </div>\\n\\n        <div class=\\\"margin-param\\\">\\n          <mat-expansion-panel>\\n            <mat-expansion-panel-header>\\n              <span>Subvention pêche</span>\\n              <span class=\\\"fill-remaining-space\\\"></span>\\n              <span>Valeur Total: {{subventionPecheService.getTotalPrevue()}}</span>\\n              <span class=\\\"fill-remaining-space\\\"></span>\\n            </mat-expansion-panel-header>\\n            <app-recette-subvention-peche></app-recette-subvention-peche>\\n          </mat-expansion-panel>\\n        </div>\\n\\n    </mat-dialog-content>\\n\\n    <div>\\n      <span style=\\\"font-weight: bold\\\">Valeur prévue du recette: {{getTotalPrevue()}}</span>\\n    </div>\\n  </mat-accordion>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { CarteBonService } from 'app/shared/services/carte-bon.service';\nimport { BonValeurService } from 'app/shared/services/bon-valeur.service';\nimport { ChequeService } from 'app/shared/services/cheque.service';\nimport { PayementCreditService } from 'app/shared/services/payement-credit.service';\nimport { StegEtAutresService } from 'app/shared/services/steg-et-autres.service';\nimport { EspeceService } from 'app/shared/services/espece.service';\nimport { SubventionPecheService } from 'app/shared/services/subvention-peche.service';\n\n@Component({\n  selector: 'app-show-details',\n  templateUrl: './show-details.component.html',\n  styleUrls: ['./show-details.component.css']\n})\nexport class ShowDetailsComponent implements OnInit {\n\n  constructor(\n    private dialogRef: MatDialogRef<ShowDetailsComponent>,\n    public cardBonService: CarteBonService,\n    public bonValeurService: BonValeurService,\n    public payementCreditService: PayementCreditService,\n    public stegEtAutreService: StegEtAutresService,\n    public chequeService: ChequeService,\n    public especeService: EspeceService,\n    public subventionPecheService: SubventionPecheService) { }\n\n  ngOnInit() {\n  }\n\n  getTotalPrevue() {\n    return parseFloat(this.bonValeurService.getTotalPrevue()) +\n            parseFloat(this.cardBonService.getTotalPrevue()) +\n            parseFloat(this.payementCreditService.getTotalPrevue()) +\n            parseFloat(this.especeService.getTotalPrevue()) +\n            parseFloat(this.subventionPecheService.getTotalPrevue()) +\n            parseFloat(this.chequeService.getTotalPrevue());\n  }\n\n  onClose() {\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL2NoZWNrLWN1cnJlbnQtc2Vzc2lvbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<ng-progress [positionUsing]=\\\"'marginLeft'\\\" [direction]=\\\"'leftToRightIncreased'\\\" [color]=\\\"'#4286f4'\\\"\\r\\n  [trickleSpeed]=\\\"500\\\" [thick]=\\\"true\\\" [ease]=\\\"'easeInSine'\\\"></ng-progress>\\r\\n<div class=\\\"margin-param container\\\">\\r\\n  <mat-toolbar color=\\\"primary\\\">\\r\\n    <span>Journée et poste</span>\\r\\n  </mat-toolbar>\\r\\n  <div class=\\\"mat-elevation-z8 mt-3\\\">\\r\\n    <mat-table [dataSource]=\\\"sessionService.sessionMatTab\\\" matSort>\\r\\n      <ng-container matColumnDef=\\\"date\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>Date</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let element\\\">{{element.date}}</mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"poste\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>Poste</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let element\\\">{{element.poste}}</mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"description\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>Description</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let element\\\">{{element.description}}</mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"state\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>State</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let element\\\">{{element.state}}</mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"actions\\\">\\r\\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let row\\\">\\r\\n          <button (click)=\\\"openPompisteListDialog(row)\\\" mat-icon-button matTooltip=\\\"Voir Pompistes\\\" color=\\\"primary\\\">\\r\\n            <mat-icon>supervisor_account</mat-icon>\\r\\n          </button>\\r\\n          <button mat-icon-button color=\\\"primary\\\" matTooltip=\\\"Modifier session\\\" (click)=\\\"updateSession(row)\\\">\\r\\n            <mat-icon>edit</mat-icon>\\r\\n          </button>\\r\\n          <button mat-icon-button color=\\\"primary\\\" matTooltip=\\\"Fermer session\\\"\\r\\n            (click)=\\\"closeSession(row._id, 'session')\\\">\\r\\n            <mat-icon>close</mat-icon>\\r\\n          </button>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"loading\\\">\\r\\n        <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\r\\n          Loading data ...\\r\\n        </mat-footer-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"noData\\\">\\r\\n        <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\r\\n          <span class=\\\"fill-remaining-space\\\"></span>\\r\\n          <button mat-raised-button class=\\\"lightGrayButton\\\" (click)=\\\"openNewSessionDialog()\\\">\\r\\n            <mat-icon>add</mat-icon>créer une nouvelle session\\r\\n          </button>\\r\\n          <span class=\\\"fill-remaining-space\\\"></span>\\r\\n        </mat-footer-cell>\\r\\n      </ng-container>\\r\\n      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n      <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':sessionService.sessionMatTab!=null}\\\">\\r\\n      </mat-footer-row>\\r\\n      <mat-footer-row *matFooterRowDef=\\\"['noData']\\\"\\r\\n        [ngClass]=\\\"{'hide':!(sessionService.sessionMatTab!=null && sessionService.sessionMatTab.data.length==0)}\\\">\\r\\n      </mat-footer-row>\\r\\n    </mat-table>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"margin-param container\\\">\\r\\n  <mat-toolbar color=\\\"primary\\\">\\r\\n    <span>Relevé des indexes poste</span>\\r\\n  </mat-toolbar>\\r\\n  <app-releve-index-list></app-releve-index-list>\\r\\n</div>\\r\\n\"","import { Component, OnInit, HostListener } from '@angular/core';\r\nimport { SessionService } from 'app/shared/services/session.service';\r\nimport { Session } from 'app/shared/models/session.model';\r\nimport { NotificationService } from 'app/shared/services/notification.service';\r\nimport { ConfirmSessionCloserComponent } from '@ComSession/confirm-session-closer/confirm-session-closer.component';\r\nimport { MatTableDataSource, MatDialog } from '@angular/material';\r\nimport { ModifySessionComponent } from './modify-session/modify-session.component';\r\nimport { SessionPompisteListComponent } from './session-pompiste-list/session-pompiste-list.component';\r\nimport { OpenSessionComponent } from './open-session/open-session.component';\r\nimport { Pompiste } from 'app/shared/models/pompiste.model';\r\n\r\n@Component({\r\n  selector: 'app-check-current-session',\r\n  templateUrl: './check-current-session.component.html',\r\n  styleUrls: ['./check-current-session.component.css']\r\n})\r\nexport class CheckCurrentSessionComponent implements OnInit {\r\n\r\n  public displayedColumns: string[];\r\n  screenHeight: any;\r\n  screenWidth: any;\r\n\r\n  constructor(public sessionService: SessionService,\r\n              private matDialog: MatDialog) {\r\n    this.displayedColumns = ['date', 'poste', 'description', 'state', 'actions'];\r\n    this.getScreenSize();\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  getScreenSize(event?) {\r\n    this.screenHeight = window.innerHeight;\r\n    this.screenWidth = window.innerWidth;\r\n    if (this.screenWidth < 650) {\r\n      this.displayedColumns = ['date', 'poste', 'state', 'actions'];\r\n    } else {\r\n      this.displayedColumns = ['date', 'poste', 'description', 'state', 'actions'];\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.sessionService.getCurrentSession();\r\n  }\r\n\r\n  updateSession(session: Session): void {\r\n    this.matDialog.open(ModifySessionComponent, {\r\n      panelClass: 'full-width-dialog',\r\n      data: { session : Object.assign({}, session) }\r\n    });\r\n  }\r\n\r\n  openPompisteListDialog(session: Session): void {\r\n    this.matDialog.open(SessionPompisteListComponent, {\r\n      panelClass: 'full-width-dialog',\r\n      data: { session }\r\n    });\r\n  }\r\n\r\n  CreateNewSession(): Session {\r\n    const session = new Session();\r\n    session.state = 'Open';\r\n    const datetime = new Date();\r\n    const date = datetime.toISOString().slice(0, 10);\r\n    const hour = datetime.getHours();\r\n    let poste = '';\r\n    let description = '';\r\n    if ((hour >= 6) && (hour < 14)) {\r\n      poste = 'P1.2';\r\n      description = 'Poste de ' + hour + 'H à 14H';\r\n    } else if ((hour >= 14) && (hour < 22)) {\r\n      poste = 'P2.2';\r\n      description = 'Poste de ' + hour + 'H à 22H';\r\n    } else if ((hour === 22) || (hour === 23) || ((hour >= 0) && (hour < 6))) {\r\n      poste = 'P3.2';\r\n      description = 'Poste de ' + hour + 'H à 6H de matin';\r\n    }\r\n    session.date = date;\r\n    session.poste = poste;\r\n    session.description = description;\r\n    return session;\r\n  }\r\n\r\n  openNewSessionDialog(): void {\r\n    const session = this.CreateNewSession();\r\n    console.log(session);\r\n    this.matDialog.open(OpenSessionComponent, {\r\n      panelClass: 'full-width-dialog',\r\n      data: {session: Object.assign({}, session)}\r\n    });\r\n  }\r\n\r\n  closeSession(): void {\r\n    this.matDialog.open(ConfirmSessionCloserComponent);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL2NvbmZpcm0tc2Vzc2lvbi1jbG9zZXIvY29uZmlybS1zZXNzaW9uLWNsb3Nlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div mat-dialog-content>\\n  <p>Voulez-vous fermer cette session ?</p>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"annuler()\\\">Annuler</button>\\n  <button mat-raised-button color=\\\"primary\\\" cdkFocusInitial (click)=\\\"CloseSession()\\\">Ok</button>\\n</div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { NotificationService } from 'app/shared/services/notification.service';\nimport { SessionService } from 'app/shared/services/session.service';\nimport { ReleveIndexService } from 'app/shared/services/releveIndex.service';\n\n@Component({\n  selector: 'app-confirm-session-closer',\n  templateUrl: './confirm-session-closer.component.html',\n  styleUrls: ['./confirm-session-closer.component.css']\n})\nexport class ConfirmSessionCloserComponent implements OnInit {\n\n\n  constructor(public dialogRef: MatDialogRef<ConfirmSessionCloserComponent>,\n              private notifService: NotificationService,\n              private sessionService: SessionService,\n              private releveIndexService: ReleveIndexService) {\n  }\n\n  annuler(): void {\n    this.dialogRef.close();\n  }\n\n  CloseSession(): void {\n    this.sessionService.closeSession().subscribe(res => {\n      this.sessionService.getCurrentSession();\n      this.releveIndexService.clear();\n      this.dialogRef.close();\n      this.notifService.success(`session fermer avec succés`);\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL21vZGlmeS1zZXNzaW9uL21vZGlmeS1zZXNzaW9uLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-toolbar>\\n    <span>Modifier session</span>\\n    <span class=\\\"fill-remaining-space\\\"></span>\\n    <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\n      <mat-icon>clear</mat-icon>\\n    </button>\\n  </mat-toolbar>\\n  <form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\n    <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"300px\\\">\\n      <mat-grid-tile>\\n        <div class=\\\"controles-container\\\">\\n          <input type=\\\"hidden\\\" >\\n          <mat-form-field>\\n              <input matInput placeholder=\\\"Date\\\" disabled required type=\\\"text\\\" name=\\\"date\\\"\\n                [(ngModel)]=\\\"session.date\\\">\\n              <mat-error>Reference index est obligatoire.</mat-error>\\n          </mat-form-field>\\n          <mat-form-field>\\n              <input matInput placeholder=\\\"Poste\\\" disabled required type=\\\"text\\\" name=\\\"poste\\\" [(ngModel)]=\\\"session.poste\\\">\\n              <mat-error>Poste est obligatoire.</mat-error>\\n          </mat-form-field>\\n          <mat-form-field>\\n              <input matInput placeholder=\\\"Description\\\" required type=\\\"text\\\" name=\\\"description\\\" [(ngModel)]=\\\"session.description\\\">\\n              <mat-error>La description de la session est obligatoire.</mat-error>\\n          </mat-form-field>\\n          <div class=\\\"button-row\\\">\\n            <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"angForm.invalid\\\"\\n              (click)=\\\"updateSession()\\\">Modifier session</button>\\n            <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\n          </div>\\n        </div>\\n      </mat-grid-tile>\\n    </mat-grid-list>\\n  </form>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { SessionService } from 'app/shared/services/session.service';\nimport { NotificationService } from 'app/shared/services/notification.service';\nimport { Session } from 'app/shared/models/session.model';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-modify-session',\n  templateUrl: './modify-session.component.html',\n  styleUrls: ['./modify-session.component.css']\n})\nexport class ModifySessionComponent implements OnInit {\n\n  public session: Session;\n\n  constructor(\n    public dialogRef: MatDialogRef<ModifySessionComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public sessionService: SessionService,\n    private notifservice: NotificationService) {\n    this.session = data.session;\n  }\n\n  updateSession(): void {\n    this.sessionService.updateSession(this.session._id, this.session.description)\n      .subscribe(res => {\n        this.sessionService.getCurrentSession();\n        this.dialogRef.close();\n        this.notifservice.success('Session modifié avec succés');\n      },\n        err => {\n          console.log(err);\n          this.notifservice.warn('Erreur');\n        });\n  }\n\n  onClose() {\n    this.dialogRef.close();\n  }\n\n  onClear(form: NgForm): void {\n    form.reset();\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL29wZW4tc2Vzc2lvbi9vcGVuLXNlc3Npb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-toolbar>\\n    <span>ouvrir une nouvelle session</span>\\n    <span class=\\\"fill-remaining-space\\\"></span>\\n    <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\"><mat-icon>clear</mat-icon></button>\\n  </mat-toolbar>\\n  <form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\" (submit)=\\\"OpenNewSession()\\\">\\n    <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"300px\\\">\\n      <mat-grid-tile>\\n        <div class=\\\"controles-container\\\">\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Date\\\" required disabled type=\\\"text\\\" name=\\\"date\\\" [(ngModel)]=\\\"session.date\\\">\\n            <mat-error>Date est est obligatoire.</mat-error>\\n          </mat-form-field>\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Poste\\\" required type=\\\"text\\\" name=\\\"poste\\\" [(ngModel)]=\\\"session.poste\\\">\\n            <mat-error>Poste est obligatoire.</mat-error>\\n          </mat-form-field>\\n          <mat-form-field>\\n              <input matInput placeholder=\\\"Description\\\" required type=\\\"text\\\" name=\\\"description\\\" [(ngModel)]=\\\"session.description\\\">\\n              <mat-error>Description est obligatoire.</mat-error>\\n            </mat-form-field>\\n          <div class=\\\"button-row\\\">\\n            <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"angForm.pristine || angForm.invalid\\\" >Ouvrir</button>\\n            <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\n          </div>\\n        </div>\\n      </mat-grid-tile>\\n    </mat-grid-list>\\n  </form>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Session } from 'app/shared/models/session.model';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { SessionService } from 'app/shared/services/session.service';\nimport { NotificationService } from 'app/shared/services/notification.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-open-session',\n  templateUrl: './open-session.component.html',\n  styleUrls: ['./open-session.component.css']\n})\nexport class OpenSessionComponent implements OnInit {\n\n  public session: Session;\n\n  constructor(\n    private dialogRef: MatDialogRef<OpenSessionComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private sessionService: SessionService,\n    private notifService: NotificationService) {\n    this.session = data.session;\n  }\n\n  OpenNewSession() {\n    this.sessionService.OpenNewSession(this.session)\n      .subscribe(\n        res => {\n          this.sessionService.getCurrentSession();\n          this.dialogRef.close();\n          this.notifService.success('Session ouverte avec succès');\n        },\n        err => console.log(err)\n      );\n  }\n\n  onClose() {\n    this.dialogRef.close();\n  }\n\n  onClear(form: NgForm): void {\n    form.reset();\n  }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvY2hlY2stY3VycmVudC1zZXNzaW9uL3Nlc3Npb24tcG9tcGlzdGUtbGlzdC9zZXNzaW9uLXBvbXBpc3RlLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-toolbar>\\r\\n  <span>Pompistes</span>\\r\\n  <span class=\\\"fill-remaining-space\\\"></span>\\r\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\r\\n    <mat-icon>clear</mat-icon>\\r\\n  </button>\\r\\n</mat-toolbar>\\r\\n\\r\\n<div class=\\\"mat-dialog-content\\\">\\r\\n\\r\\n  <form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\r\\n    <div class=\\\"search-div\\\">\\r\\n      <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\r\\n\\r\\n        <mat-grid-tile>\\r\\n          <mat-form-field>\\r\\n            <mat-label>Pompistes</mat-label>\\r\\n            <mat-select required name=\\\"p\\\" #p=\\\"ngModel\\\" ngModel>\\r\\n              <mat-option *ngFor=\\\"let pompiste of pompisteService.pompistes\\\" [value]=\\\"pompiste.name\\\"\\r\\n                (click)=\\\"selectPompiste(pompiste)\\\">\\r\\n                {{pompiste.name}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n            <mat-error *ngIf=\\\"p.errors?.required\\\">Champ Obligatoire</mat-error>\\r\\n          </mat-form-field>\\r\\n        </mat-grid-tile>\\r\\n\\r\\n        <mat-grid-tile>\\r\\n          <mat-form-field>\\r\\n            <input matInput placeholder=\\\"Heures\\\" type=\\\"number\\\" [(ngModel)]=\\\"heures\\\" name=\\\"heures\\\">\\r\\n          </mat-form-field>\\r\\n        </mat-grid-tile>\\r\\n\\r\\n        <mat-grid-tile>\\r\\n          <mat-form-field>\\r\\n            <mat-label>Indexs</mat-label>\\r\\n            <mat-select [(ngModel)]=\\\"responsibleIndexs\\\" name=\\\"responsibleIndexs\\\" multiple>\\r\\n              <mat-option *ngFor=\\\"let I of indexService.indexs\\\" [value]=\\\"I.reference\\\">{{I.reference}}</mat-option>\\r\\n            </mat-select>\\r\\n            <mat-error>{{error}}</mat-error>\\r\\n            <mat-error>Liste des indexs est obligatoire.</mat-error>\\r\\n          </mat-form-field>\\r\\n        </mat-grid-tile>\\r\\n\\r\\n      </mat-grid-list>\\r\\n      <button [disabled]=\\\"angForm.pristine || angForm.invalid\\\" mat-raised-button (click)=\\\"addPompisteToSession()\\\">\\r\\n        <mat-icon>add</mat-icon>Ajouter\\r\\n      </button>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n  <div class=\\\"mat-elevation-z8 mt-3\\\">\\r\\n    <mat-table [dataSource]=\\\"session.personnes\\\" matSort>\\r\\n      <ng-container matColumnDef=\\\"Nom\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>Nom</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let element\\\">{{element.nom_pompiste}}</mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"Heures Pres\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>Heures Pres</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let element\\\">{{element.heures_pres}}</mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"Liste des indexs\\\">\\r\\n          <mat-header-cell *matHeaderCellDef>Liste des indexs</mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let element\\\">{{element.indexs}}</mat-cell>\\r\\n        </ng-container>\\r\\n      <ng-container matColumnDef=\\\"actions\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>\\r\\n        </mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let row\\\">\\r\\n\\r\\n          <button (click)=\\\"deletePompisteFromSession(row.id_pompiste)\\\" mat-icon-button matTooltip=\\\"Supprimer\\\"\\r\\n            color=\\\"warn\\\">\\r\\n            <mat-icon>delete_outline</mat-icon>\\r\\n          </button>\\r\\n\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"loading\\\">\\r\\n        <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\r\\n          Loading data ...\\r\\n        </mat-footer-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"noData\\\">\\r\\n        <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\r\\n          No data.\\r\\n        </mat-footer-cell>\\r\\n      </ng-container>\\r\\n      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n      <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':session.personnes!=null}\\\">\\r\\n      </mat-footer-row>\\r\\n      <mat-footer-row *matFooterRowDef=\\\"['noData']\\\"\\r\\n        [ngClass]=\\\"{'hide':!(session.personnes!=null && session.personnes.length==0)}\\\">\\r\\n      </mat-footer-row>\\r\\n    </mat-table>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Inject, HostListener } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { SessionService } from 'app/shared/services/session.service';\r\nimport { NotificationService } from 'app/shared/services/notification.service';\r\nimport { Session } from 'app/shared/models/session.model';\r\nimport { PompisteService } from 'app/shared/services/pompiste.service';\r\nimport { Pompiste } from 'app/shared/models/pompiste.model';\r\nimport { IndexService } from 'app/shared/services/index.service';\r\nimport { ReleveIndexService } from 'app/shared/services/releveIndex.service';\r\nimport { PrixCarburantService } from 'app/shared/services/prix-carburant.service';\r\n\r\n@Component({\r\n  selector: 'app-session-pompiste-list',\r\n  templateUrl: './session-pompiste-list.component.html',\r\n  styleUrls: ['./session-pompiste-list.component.css']\r\n})\r\nexport class SessionPompisteListComponent implements OnInit {\r\n\r\n  public session: Session;\r\n  public responsibleIndexs: any[];\r\n  public displayedColumns: string[];\r\n  public heures: number;\r\n  public pompiste: Pompiste;\r\n  public width: number;\r\n  public error: string;\r\n  screenHeight: any;\r\n  screenWidth: any;\r\n\r\n  constructor(public matDialogRef: MatDialogRef<SessionPompisteListComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: any,\r\n              private sessionService: SessionService,\r\n              private notifService: NotificationService,\r\n              public pompisteService: PompisteService,\r\n              public indexService: IndexService,\r\n              public releveIndexService: ReleveIndexService,\r\n              public prixCarburantService: PrixCarburantService) {\r\n    this.session = data.session;\r\n    this.displayedColumns = ['Nom', 'Heures Pres', 'Liste des indexs', 'actions'];\r\n    this.responsibleIndexs = [];\r\n    this.pompisteService.getpompistesList();\r\n    this.width =  2;\r\n    this.error = '';\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  getScreenSize(event?) {\r\n    this.screenHeight = window.innerHeight;\r\n    this.screenWidth = window.innerWidth;\r\n    if (this.screenWidth < 650) {\r\n      this.width =  1;\r\n    } else {\r\n      this.width =  2;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.indexService.getIndexList();\r\n    this.prixCarburantService.getCarburantList();\r\n  }\r\n\r\n  onClose(): void {\r\n    this.matDialogRef.close();\r\n  }\r\n\r\n  deletePompisteFromSession(idPompiste: string): void {\r\n    this.sessionService.deletePompisteFromSession(idPompiste, this.session._id).subscribe(res => {\r\n      const key = 'session';\r\n      this.session = res[key];\r\n      this.sessionService.getCurrentSession();\r\n      this.notifService.success('Pompiste supprimé');\r\n    },\r\n    err => {\r\n      this.notifService.warn('Erreur');\r\n\r\n    });\r\n  }\r\n\r\n  selectPompiste(pompiste: Pompiste): void {\r\n    this.pompiste = pompiste;\r\n    this.releveIndexService.listReleveIndexs = [];\r\n    this.responsibleIndexs = [];\r\n  }\r\n\r\n  addPompisteToSession(): void {\r\n    let findPompiste = false;\r\n    let findIndex = false;\r\n    this.session.personnes.forEach(p => {\r\n      if (p.id_pompiste === this.pompiste._id) {\r\n        findPompiste = true;\r\n      }\r\n      this.responsibleIndexs.forEach(r => {\r\n        if (p.indexs.includes(r)) {\r\n          findIndex = true;\r\n          this.error = r + ' est déja affecté';\r\n        }\r\n      });\r\n\r\n    });\r\n\r\n    if (findPompiste) {\r\n      this.notifService.warn('Pompiste existe déjà');\r\n    } else if (findIndex) {\r\n      this.notifService.warn('Index déja affecté');\r\n    } else {\r\n      const pompisteVM = {\r\n        id_pompiste: this.pompiste._id,\r\n        nom_pompiste: this.pompiste.name,\r\n        heures_pres: this.heures,\r\n        indexs: this.responsibleIndexs\r\n      };\r\n      this.sessionService.addPompisteToSession(pompisteVM, this.session._id).subscribe(res => {\r\n        const key = 'session';\r\n        this.session = res[key];\r\n        this.sessionService.getCurrentSession();\r\n        this.notifService.success('Pompiste Ajouté');\r\n      },\r\n        err => {\r\n          this.notifService.warn('Erreur');\r\n        });\r\n\r\n      this.releveIndexService.assignIndexs( pompisteVM,\r\n                                            this.session._id,\r\n                                            this.indexService.indexs,\r\n                                            this.prixCarburantService.prixCarburants);\r\n\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \".wrapper{\\r\\n    width: 300px;\\r\\n    height: 300px;\\r\\n}\\r\\n\\r\\n.list-events-wrapper{\\r\\n    width: 90%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQ29tcG9uZW50cy9ob21lL2NhbGVuZGFyL2NhbGVuZGFyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osYUFBYTtBQUNqQjs7QUFFQTtJQUNJLFVBQVU7QUFDZCIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvaG9tZS9jYWxlbmRhci9jYWxlbmRhci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLndyYXBwZXJ7XHJcbiAgICB3aWR0aDogMzAwcHg7XHJcbiAgICBoZWlnaHQ6IDMwMHB4O1xyXG59XHJcblxyXG4ubGlzdC1ldmVudHMtd3JhcHBlcntcclxuICAgIHdpZHRoOiA5MCU7XHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"row index\\\" style=\\\"margin-right: 0px; margin-top: 20px;\\\">\\r\\n  <div class=\\\"col-md-5 col-lg-5 col-sm-12\\\">\\r\\n    <div class=\\\"container wrapper\\\">\\r\\n      <mat-calendar #calendar [(selected)]=\\\"selectedDate\\\" (selectedChange)=\\\"selectDay($event)\\\"></mat-calendar>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-md-7 col-lg-7 col-sm-12\\\">\\r\\n    <div class=\\\"list-events-wrapper container\\\">\\r\\n      <app-list-events></app-list-events>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatCalendar } from '@angular/material';\r\nimport { EventService } from 'app/shared/services/event.service';\r\n\r\n@Component({\r\n  selector: 'app-calendar',\r\n  templateUrl: './calendar.component.html',\r\n  styleUrls: ['./calendar.component.css']\r\n})\r\nexport class CalendarComponent implements OnInit {\r\n\r\n  @ViewChild('calendar') calendar: MatCalendar<any>;\r\n  selectedDate: any;\r\n\r\n  constructor(public eventService: EventService) { }\r\n\r\n  ngOnInit() {\r\n    this.eventService.getEvents();\r\n  }\r\n\r\n  selectDay(e): void {\r\n    const date = e.toString().slice(4, 15).replace(/\\s+/g, '-');\r\n    this.eventService.getEvents(date);\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvaG9tZS9jYWxlbmRhci9saXN0LWV2ZW50cy9saXN0LWV2ZW50cy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-toolbar>\\r\\n  <span>Evénements</span>\\r\\n  <span class=\\\"fill-remaining-space\\\"></span>\\r\\n</mat-toolbar>\\r\\n\\r\\n\\r\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\r\\n  <div class=\\\"search-div\\\">\\r\\n    <mat-form-field>\\r\\n      <input matInput required [matDatepicker]=\\\"picker\\\" placeholder=\\\"date\\\" [(ngModel)]=\\\"event.date\\\" name=\\\"date\\\">\\r\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n      <mat-datepicker #picker></mat-datepicker>\\r\\n      <mat-error>Champ Obligatoire</mat-error>\\r\\n    </mat-form-field>&nbsp;&nbsp;\\r\\n    <mat-form-field>\\r\\n      <input matInput required placeholder=\\\"description\\\" type=\\\"text\\\" [(ngModel)]=\\\"event.description\\\" name=\\\"description\\\">\\r\\n      <mat-error>Champ Obligatoire</mat-error>\\r\\n    </mat-form-field>&nbsp;&nbsp;\\r\\n    <button [disabled]=\\\"angForm.pristine || angForm.invalid\\\" mat-raised-button (click)=\\\"addEvent()\\\">\\r\\n      <mat-icon>add</mat-icon>Ajouter\\r\\n    </button>\\r\\n  </div>\\r\\n</form>\\r\\n\\r\\n<div class=\\\"mat-elevation-z8 mt-3\\\">\\r\\n  <mat-table [dataSource]=\\\"eventService.events\\\" matSort>\\r\\n    <ng-container matColumnDef=\\\"Date\\\">\\r\\n      <mat-header-cell *matHeaderCellDef>Date</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.date}}</mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"Description\\\">\\r\\n      <mat-header-cell *matHeaderCellDef>Description</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.description}}</mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <mat-header-cell *matHeaderCellDef>\\r\\n      </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let row\\\">\\r\\n\\r\\n        <button (click)=\\\"updateEventDialog(row)\\\" mat-icon-button matTooltip=\\\"Editer\\\" color=\\\"primary\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </button>\\r\\n\\r\\n        <button (click)=\\\"deleteEventDialog(row)\\\" mat-icon-button matTooltip=\\\"Supprimer\\\"\\r\\n          color=\\\"warn\\\">\\r\\n          <mat-icon>delete_outline</mat-icon>\\r\\n        </button>\\r\\n      \\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"loading\\\">\\r\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\r\\n        Loading data ...\\r\\n      </mat-footer-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"noData\\\">\\r\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\r\\n        No data.\\r\\n      </mat-footer-cell>\\r\\n    </ng-container>\\r\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':eventService.events!=null}\\\">\\r\\n    </mat-footer-row>\\r\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\"\\r\\n      [ngClass]=\\\"{'hide':!(eventService.events!=null && eventService.events.length==0)}\\\">\\r\\n    </mat-footer-row>\\r\\n  </mat-table>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { EventService } from 'app/shared/services/event.service';\r\nimport { MatDialog } from '@angular/material';\r\nimport { ConfirmDeleteComponent } from '@ComShared/confirm-delete/confirm-delete.component';\r\nimport { Event } from 'app/shared/models/event.model';\r\nimport { UpdateEventComponent } from './update-event/update-event.component';\r\n\r\n@Component({\r\n  selector: 'app-list-events',\r\n  templateUrl: './list-events.component.html',\r\n  styleUrls: ['./list-events.component.css']\r\n})\r\nexport class ListEventsComponent implements OnInit {\r\n\r\n  public displayedColumns: string[];\r\n\r\n  public event: Event;\r\n\r\n  constructor(public eventService: EventService,\r\n              public matDialog: MatDialog) {\r\n    this.displayedColumns = ['Date', 'Description', 'actions'];\r\n    this.event = new Event();\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  deleteEventDialog(event: Event): void {\r\n    this.matDialog.open(ConfirmDeleteComponent, {\r\n      data: { event, msg: 'Evenement' }\r\n    });\r\n  }\r\n\r\n  addEvent(): void {\r\n    this.event.date = this.event.date.toString().slice(4, 15).replace(/\\s+/g, '-');\r\n    this.eventService.addevent(this.event);\r\n  }\r\n\r\n  updateEventDialog(event: Event): void {\r\n    this.matDialog.open(UpdateEventComponent, {\r\n      panelClass: 'full-width-dialog',\r\n      data: { event: Object.assign({}, event) }\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvaG9tZS9jYWxlbmRhci9saXN0LWV2ZW50cy91cGRhdGUtZXZlbnQvdXBkYXRlLWV2ZW50LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-toolbar>\\r\\n  <span>Modifier Evénement</span>\\r\\n  <span class=\\\"fill-remaining-space\\\"></span>\\r\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\r\\n    <mat-icon>clear</mat-icon>\\r\\n  </button>\\r\\n</mat-toolbar>\\r\\n\\r\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\r\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"300px\\\">\\r\\n    <mat-grid-tile>\\r\\n      <div class=\\\"controles-container\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Nom\\\" required type=\\\"text\\\" name=\\\"description\\\" [(ngModel)]=\\\"event.description\\\">\\r\\n          <mat-error>Nom est obligatoire</mat-error>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <div class=\\\"button-row\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" (click)=\\\"updateEvent()\\\"\\r\\n            [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Modifier\\r\\n          </button>\\r\\n          <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-grid-tile>\\r\\n  </mat-grid-list>\\r\\n</form>\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { EventService } from 'app/shared/services/event.service';\r\nimport { NotificationService } from 'app/shared/services/notification.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Event } from 'app/shared/models/event.model';\r\n\r\n@Component({\r\n  selector: 'app-update-event',\r\n  templateUrl: './update-event.component.html',\r\n  styleUrls: ['./update-event.component.css']\r\n})\r\nexport class UpdateEventComponent implements OnInit {\r\n\r\n  public event: Event;\r\n\r\n  constructor(public dialogRef: MatDialogRef<UpdateEventComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: any,\r\n              private eventService: EventService,\r\n              private notifservice: NotificationService) {\r\n    this.event = data.event;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onClose(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onClear(form: NgForm): void {\r\n    form.reset();\r\n  }\r\n\r\n  updateEvent(): void {\r\n    this.eventService.updateEvent(this.event).subscribe(res => {\r\n      this.eventService.getEvents(this.event.date);\r\n      this.notifservice.success('Evénement modifié');\r\n      this.dialogRef.close();\r\n    },\r\n      err => {\r\n        console.log(err);\r\n        this.notifservice.warn('Erreur');\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \".header{\\r\\n    position: relative;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    height: 80vh;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.bg{\\r\\n    position: relative;\\r\\n    background-image: url('lg.jpg');\\r\\n    background-repeat: no-repeat;\\r\\n    background-position-y: top;\\r\\n    background-position-x: center;\\r\\n    background-size: cover;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.quote{\\r\\n    height: 150px;\\r\\n    padding-top: 50px;\\r\\n    padding-bottom: 50px;\\r\\n    color: #333;\\r\\n}\\r\\n\\r\\n.blockquote{\\r\\n    font-family: \\\"Segoe Print\\\", \\\"Times New Roman\\\", Verdana;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.weather{\\r\\n    width: 100%;\\r\\n    height: 300px;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.weather-img{\\r\\n    background-color: #3f51b5;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    text-align: center;\\r\\n    padding-top: 50px;\\r\\n    color: #f4f4f4;\\r\\n}\\r\\n\\r\\n.img{\\r\\n    width: 220px;\\r\\n    height: 220px;\\r\\n    \\r\\n}\\r\\n\\r\\n.weather-content{\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.weather-content h3 {\\r\\n    margin-top: 15px;\\r\\n}\\r\\n\\r\\nmat-card{\\r\\n    padding-top: 20px;\\r\\n    height: 100%;\\r\\n    background-color: #f4f4f4;\\r\\n}\\r\\n\\r\\n.margin{\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.calendar{\\r\\n    margin-right: 0;\\r\\n    margin-left: 0;\\r\\n    min-height: 350px;\\r\\n    padding-bottom: 20px;\\r\\n    padding-left: 20px; \\r\\n    z-index: 100;\\r\\n}\\r\\n\\r\\n.info{\\r\\n    min-height: 150px;\\r\\n    background-color: #3f51b5;\\r\\n    color: #f4f4f4;\\r\\n    padding-top: 50px;\\r\\n    padding-bottom: 50px;\\r\\n}\\r\\n\\r\\n.padding-icon{\\r\\n    position: relative;\\r\\n    margin-top: 10%;\\r\\n}\\r\\n\\r\\n.value{\\r\\n    color: #3f51b5;\\r\\n    font-size: 20px;\\r\\n}\\r\\n\\r\\n.value-pompiste {\\r\\n  color: #3f51b5;\\r\\n  font-size: 12px;\\r\\n}\\r\\n\\r\\n.content{\\r\\n    font-size: 10px;\\r\\n}\\r\\n\\r\\n.text-sup{\\r\\n    background-color: #3f51b5;\\r\\n    color: #f4f4f4;\\r\\n    border-radius: 40%;\\r\\n    padding: 1px 3px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQ29tcG9uZW50cy9ob21lL2hvbWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixNQUFNO0lBQ04sT0FBTztJQUNQLFFBQVE7SUFDUixZQUFZO0lBQ1osU0FBUztJQUNULFVBQVU7QUFDZDs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQiwrQkFBc0Q7SUFDdEQsNEJBQTRCO0lBQzVCLDBCQUEwQjtJQUMxQiw2QkFBNkI7SUFDN0Isc0JBQXNCO0lBQ3RCLFdBQVc7SUFDWCxZQUFZO0lBQ1osU0FBUztJQUNULFVBQVU7QUFDZDs7QUFFQTtJQUNJLGFBQWE7SUFDYixpQkFBaUI7SUFDakIsb0JBQW9CO0lBQ3BCLFdBQVc7QUFDZjs7QUFFQTtJQUNJLHNEQUFzRDtJQUN0RCxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsYUFBYTtJQUNiLFNBQVM7SUFDVCxVQUFVO0FBQ2Q7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIsV0FBVztJQUNYLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsaUJBQWlCO0lBQ2pCLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osYUFBYTs7QUFFakI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsWUFBWTtJQUNaLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixZQUFZO0lBQ1oseUJBQXlCO0FBQzdCOztBQUVBO0lBQ0ksbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLGNBQWM7SUFDZCxpQkFBaUI7SUFDakIsb0JBQW9CO0lBQ3BCLGtCQUFrQjtJQUNsQixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsaUJBQWlCO0lBQ2pCLG9CQUFvQjtBQUN4Qjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksY0FBYztJQUNkLGVBQWU7QUFDbkI7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsZUFBZTtBQUNqQjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIsY0FBYztJQUNkLGtCQUFrQjtJQUNsQixnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9Db21wb25lbnRzL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhlYWRlcntcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIGhlaWdodDogODB2aDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbn1cclxuXHJcbi5iZ3tcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vLi4vLi4vYXNzZXRzL2ltYWdlcy9sZy5qcGcnKTtcclxuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uLXk6IHRvcDtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb24teDogY2VudGVyO1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxufVxyXG5cclxuLnF1b3Rle1xyXG4gICAgaGVpZ2h0OiAxNTBweDtcclxuICAgIHBhZGRpbmctdG9wOiA1MHB4O1xyXG4gICAgcGFkZGluZy1ib3R0b206IDUwcHg7XHJcbiAgICBjb2xvcjogIzMzMztcclxufVxyXG5cclxuLmJsb2NrcXVvdGV7XHJcbiAgICBmb250LWZhbWlseTogXCJTZWdvZSBQcmludFwiLCBcIlRpbWVzIE5ldyBSb21hblwiLCBWZXJkYW5hO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4ud2VhdGhlcntcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAzMDBweDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbn1cclxuXHJcbi53ZWF0aGVyLWltZ3tcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzZjUxYjU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHBhZGRpbmctdG9wOiA1MHB4O1xyXG4gICAgY29sb3I6ICNmNGY0ZjQ7XHJcbn1cclxuXHJcbi5pbWd7XHJcbiAgICB3aWR0aDogMjIwcHg7XHJcbiAgICBoZWlnaHQ6IDIyMHB4O1xyXG4gICAgXHJcbn1cclxuXHJcbi53ZWF0aGVyLWNvbnRlbnR7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLndlYXRoZXItY29udGVudCBoMyB7XHJcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xyXG59XHJcblxyXG5tYXQtY2FyZHtcclxuICAgIHBhZGRpbmctdG9wOiAyMHB4O1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y0ZjRmNDtcclxufVxyXG5cclxuLm1hcmdpbntcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbn1cclxuXHJcbi5jYWxlbmRhcntcclxuICAgIG1hcmdpbi1yaWdodDogMDtcclxuICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgbWluLWhlaWdodDogMzUwcHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcclxuICAgIHBhZGRpbmctbGVmdDogMjBweDsgXHJcbiAgICB6LWluZGV4OiAxMDA7XHJcbn1cclxuXHJcbi5pbmZve1xyXG4gICAgbWluLWhlaWdodDogMTUwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2Y1MWI1O1xyXG4gICAgY29sb3I6ICNmNGY0ZjQ7XHJcbiAgICBwYWRkaW5nLXRvcDogNTBweDtcclxuICAgIHBhZGRpbmctYm90dG9tOiA1MHB4O1xyXG59XHJcblxyXG4ucGFkZGluZy1pY29ue1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgbWFyZ2luLXRvcDogMTAlO1xyXG59XHJcblxyXG4udmFsdWV7XHJcbiAgICBjb2xvcjogIzNmNTFiNTtcclxuICAgIGZvbnQtc2l6ZTogMjBweDtcclxufVxyXG5cclxuLnZhbHVlLXBvbXBpc3RlIHtcclxuICBjb2xvcjogIzNmNTFiNTtcclxuICBmb250LXNpemU6IDEycHg7XHJcbn1cclxuXHJcbi5jb250ZW50e1xyXG4gICAgZm9udC1zaXplOiAxMHB4O1xyXG59XHJcblxyXG4udGV4dC1zdXB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2Y1MWI1O1xyXG4gICAgY29sb3I6ICNmNGY0ZjQ7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0MCU7XHJcbiAgICBwYWRkaW5nOiAxcHggM3B4O1xyXG59Il19 */\"","module.exports = \"<ng-progress [positionUsing]=\\\"'marginLeft'\\\" [direction]=\\\"'leftToRightIncreased'\\\" [color]=\\\"'#4286f4'\\\"\\r\\n  [trickleSpeed]=\\\"500\\\" [thick]=\\\"true\\\" [ease]=\\\"'easeInSine'\\\"></ng-progress>\\r\\n<div class=\\\"header\\\">\\r\\n  <div class=\\\"bg\\\">\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"quote\\\">\\r\\n  <blockquote class=\\\"blockquote\\\">\\r\\n    <p>\\r\\n      <mat-icon>format_quote</mat-icon>\\r\\n      Contrôler votre station en toute sécurité\\r\\n      <mat-icon>format_quote</mat-icon>\\r\\n    </p>\\r\\n  </blockquote>\\r\\n</div>\\r\\n\\r\\n<app-tanks></app-tanks>\\r\\n\\r\\n<div class=\\\"quote\\\">\\r\\n  <blockquote class=\\\"blockquote\\\">\\r\\n    <p>\\r\\n      <mat-icon>format_quote</mat-icon>\\r\\n      Stat\\r\\n      <mat-icon>format_quote</mat-icon>\\r\\n    </p>\\r\\n  </blockquote>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"info\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n      <div class=\\\"col-md-3 col-lg-3 col-sm-12 margin\\\">\\r\\n        <mat-card>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-3 padding-icon\\\">\\r\\n              <mat-icon color=\\\"primary\\\">supervisor_account</mat-icon>\\r\\n            </div>\\r\\n            <div class=\\\"col-9\\\">\\r\\n              <div class=\\\"row value\\\">\\r\\n                {{emps}}\\r\\n              </div>\\r\\n              <div class=\\\"row content\\\">\\r\\n                <mat-divider></mat-divider>\\r\\n                Nombre d'employés\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-3 col-lg-3 col-sm-12 margin\\\">\\r\\n        <mat-card>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-3 padding-icon\\\">\\r\\n              <mat-icon color=\\\"primary\\\">attach_money</mat-icon>\\r\\n            </div>\\r\\n            <div class=\\\"col-9\\\">\\r\\n              <div class=\\\"row value\\\">\\r\\n                {{totalRevenue}} <sup> <span class=\\\"text-sup\\\">TDN</span></sup>\\r\\n              </div>\\r\\n              <div class=\\\"row content\\\">\\r\\n                <mat-divider></mat-divider>\\r\\n                Revenue Total du mois {{month}}\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3 col-lg-3 col-sm-12 margin\\\">\\r\\n        <mat-card>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-3 padding-icon\\\">\\r\\n              <mat-icon color=\\\"primary\\\"> local_gas_station</mat-icon>\\r\\n            </div>\\r\\n            <div class=\\\"col-9\\\">\\r\\n              <div class=\\\"row value\\\">\\r\\n                {{quantiteCarburant}} <sup> <span class=\\\"text-sup\\\">L</span></sup>\\r\\n              </div>\\r\\n              <div class=\\\"row content\\\">\\r\\n                <mat-divider></mat-divider>\\r\\n                Quantité Carburant du mois {{month}}\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3 col-lg-3 col-sm-12 margin\\\">\\r\\n        <mat-card>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-3 padding-icon\\\">\\r\\n              <mat-icon color=\\\"primary\\\">work</mat-icon>\\r\\n            </div>\\r\\n            <div class=\\\"col-9\\\">\\r\\n              <div *ngIf=\\\"releveIndexService.pompistes.length ===0\\\"><i>No data!</i></div>\\r\\n              <div *ngFor=\\\" let pompiste of releveIndexService.pompistes\\\" class=\\\"row value-pompiste\\\">\\r\\n                {{pompiste.nom}}\\r\\n              </div>\\r\\n              <div class=\\\"row content\\\">\\r\\n                <mat-divider></mat-divider>\\r\\n                Liste des pompistes en travail\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"calendar\\\">\\r\\n  <app-calendar></app-calendar>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"weather row\\\">\\r\\n  <div class=\\\"weather-img col-md-6 col-lg-6 col-sm-12\\\">\\r\\n    <h3>{{weather?.name}}, {{weather?.sys.country}}</h3>\\r\\n    <img class=\\\"img\\\" [src]=\\\"imgSrc\\\" alt=\\\"\\\">\\r\\n  </div>\\r\\n  <div class=\\\"weather-content col-md-6 col-lg-6 col-sm-12\\\">\\r\\n    <mat-card>\\r\\n      <mat-card-content>\\r\\n        <h3>Température : {{temp}} °C</h3>\\r\\n        <h3>Humidité : {{humidity}} %</h3>\\r\\n        <h3>Lever du soleil : {{sunrise}}</h3>\\r\\n        <h3>Coucher du soleil : {{sunset}}</h3>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, HostListener } from '@angular/core';\r\nimport { WeatherService } from 'app/shared/services/weather.service';\r\nimport { Weather } from 'app/shared/models/weather.model';\r\nimport { ReleveIndexService } from 'app/shared/services/releveIndex.service';\r\nimport { PompisteService } from 'app/shared/services/pompiste.service';\r\nimport { CiterneService } from 'app/shared/services/citerne.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  public weather: Weather;\r\n  public imgSrc = '';\r\n  public temp: number;\r\n  public humidity: number;\r\n  public sunrise = '';\r\n  public sunset = '';\r\n  public totalRevenue = 0;\r\n  public quantiteCarburant = 0;\r\n  public emps = 0;\r\n  public month;\r\n\r\n  constructor(public weatherService: WeatherService,\r\n              public releveIndexService: ReleveIndexService,\r\n              public pompisteService: PompisteService,\r\n              public tankService: CiterneService) {\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.tankService.getCiternesList();\r\n    this.weatherService.getWeather().subscribe(res => {\r\n      this.weather = res;\r\n      this.imgSrc = 'https://ppp-ss.herokuapp.com/event/weather-img/' + this.weather.weather[0].icon + '.png';\r\n      this.temp = Math.round(this.weather.main.temp - 273);\r\n      this.humidity = this.weather.main.humidity;\r\n      const sunriseDate = new Date(this.weather.sys.sunrise * 1000);\r\n      const sunsetDate = new Date(this.weather.sys.sunset * 1000);\r\n      this.sunrise = sunriseDate.getHours() + ':' + sunriseDate.getMinutes();\r\n      this.sunset = sunsetDate.getHours() + ':' + sunsetDate.getMinutes();\r\n\r\n      this.month = new Date().toString().slice(4, 7);\r\n      // get Totla Revenue\r\n      this.releveIndexService.getTotlaRevenue().subscribe(\r\n        result => {\r\n          const key = 'total';\r\n          this.totalRevenue = result[key];\r\n        },\r\n        err => {\r\n          console.log(err);\r\n        }\r\n      );\r\n      // get Quantite Carburant\r\n      this.releveIndexService.getQuantiteCarburant().subscribe(result => {\r\n        const key = 'quantite';\r\n        this.quantiteCarburant = result[key];\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n    },\r\n    err => {\r\n      console.log(err);\r\n    });\r\n\r\n    // get Total Employés\r\n    this.pompisteService.getTotalPompiste().subscribe(res => {\r\n      const key = 'total';\r\n      this.emps = res[key];\r\n    },\r\n    err => {\r\n      console.log(err);\r\n    });\r\n\r\n    // get pompiste for the current session\r\n    this.releveIndexService.getSessionPompiste();\r\n  }\r\n\r\n}\r\n","module.exports = \"#tankContainer {\\r\\n  background: rgba( 0, 0, 0, 0.10);\\r\\n  margin-left: auto;\\r\\n  margin-right: auto;\\r\\n  width: 200px;\\r\\n  border-left: 1px solid #bbb;\\r\\n  border-right: 1px solid #bbb;\\r\\n  border-bottom: 1px solid #bbb;\\r\\n  border-top: 1px solid #ccc;\\r\\n  border-radius: 10px;\\r\\n  padding-left: 5px;\\r\\n  padding-right: 5px;\\r\\n  padding-bottom: 30px;\\r\\n  padding-top: 5px;\\r\\n}\\r\\n\\r\\n.warningColor {\\r\\n  background: rgb(156, 34, 34) !important;\\r\\n}\\r\\n\\r\\n#glass {\\r\\n  background: rgba( 255, 255, 255, 0.50);\\r\\n  border: 1px solid #bbb;\\r\\n  border-top: 1px solid #eee;\\r\\n  border-radius: 10px;\\r\\n  width: 188px;\\r\\n  height: 300px;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n#level {\\r\\n  font-size: 25px;\\r\\n  text-align: center;\\r\\n  margin: auto;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n#water {\\r\\n  background-color: #3f51b5;\\r\\n  background-position: top right;\\r\\n  position: absolute;\\r\\n  bottom: 0px;\\r\\n  width: 188px;\\r\\n  transition: all 3s ease-out;\\r\\n  border-radius: 10px;\\r\\n}\\r\\n\\r\\nmat-grid-tile {\\r\\n  overflow: visible;\\r\\n}\\r\\n\\r\\nmat-label {\\r\\n  margin-left: 10px;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n  margin: 0 auto;\\r\\n  display: block;\\r\\n  color: white;\\r\\n  background-color: #3f51b5;\\r\\n}\\r\\n\\r\\n.isa_error {\\r\\n  color: #D8000C;\\r\\n  background-color: #FFD2D2;\\r\\n  margin: 10px 0px;\\r\\n  margin-right: 5px;\\r\\n  padding:12px;\\r\\n}\\r\\n\\r\\n.isa_error i {\\r\\n  margin:10px 22px;\\r\\n  font-size:2em;\\r\\n  vertical-align:middle;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQ29tcG9uZW50cy9ob21lL3RhbmtzL3RhbmtzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQ0FBZ0M7RUFDaEMsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osMkJBQTJCO0VBQzNCLDRCQUE0QjtFQUM1Qiw2QkFBNkI7RUFDN0IsMEJBQTBCO0VBRzFCLG1CQUFtQjtFQUNuQixpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLG9CQUFvQjtFQUNwQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSx1Q0FBdUM7QUFDekM7O0FBRUE7RUFDRSxzQ0FBc0M7RUFDdEMsc0JBQXNCO0VBQ3RCLDBCQUEwQjtFQUcxQixtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLGFBQWE7RUFDYixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxlQUFlO0VBQ2Ysa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsOEJBQThCO0VBQzlCLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsWUFBWTtFQUlaLDJCQUEyQjtFQUczQixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsY0FBYztFQUNkLFlBQVk7RUFDWix5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxjQUFjO0VBQ2QseUJBQXlCO0VBQ3pCLGdCQUFnQjtFQUNoQixpQkFBaUI7RUFDakIsWUFBWTtBQUNkOztBQUNBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGFBQWE7RUFDYixxQkFBcUI7QUFDdkIiLCJmaWxlIjoic3JjL2FwcC9Db21wb25lbnRzL2hvbWUvdGFua3MvdGFua3MuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiN0YW5rQ29udGFpbmVyIHtcclxuICBiYWNrZ3JvdW5kOiByZ2JhKCAwLCAwLCAwLCAwLjEwKTtcclxuICBtYXJnaW4tbGVmdDogYXV0bztcclxuICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgd2lkdGg6IDIwMHB4O1xyXG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2JiYjtcclxuICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjYmJiO1xyXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjYmJiO1xyXG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjY2NjO1xyXG4gIC13ZWJraXQtYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAtbW96LWJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICBwYWRkaW5nLWxlZnQ6IDVweDtcclxuICBwYWRkaW5nLXJpZ2h0OiA1cHg7XHJcbiAgcGFkZGluZy1ib3R0b206IDMwcHg7XHJcbiAgcGFkZGluZy10b3A6IDVweDtcclxufVxyXG5cclxuLndhcm5pbmdDb2xvciB7XHJcbiAgYmFja2dyb3VuZDogcmdiKDE1NiwgMzQsIDM0KSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4jZ2xhc3Mge1xyXG4gIGJhY2tncm91bmQ6IHJnYmEoIDI1NSwgMjU1LCAyNTUsIDAuNTApO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNiYmI7XHJcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlZWU7XHJcbiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gIC1tb3otYm9yZGVyLXJhZGl1czogMTBweDtcclxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gIHdpZHRoOiAxODhweDtcclxuICBoZWlnaHQ6IDMwMHB4O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG5cclxuI2xldmVsIHtcclxuICBmb250LXNpemU6IDI1cHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIG1hcmdpbjogYXV0bztcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbiN3YXRlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzNmNTFiNTtcclxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiB0b3AgcmlnaHQ7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGJvdHRvbTogMHB4O1xyXG4gIHdpZHRoOiAxODhweDtcclxuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAzcyBlYXNlLW91dDtcclxuICAtbW96LXRyYW5zaXRpb246IGFsbCAzcyBlYXNlLW91dDtcclxuICAtby10cmFuc2l0aW9uOiBhbGwgM3MgZWFzZS1vdXQ7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDNzIGVhc2Utb3V0O1xyXG4gIC13ZWJraXQtYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAtbW96LWJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxufVxyXG5cclxubWF0LWdyaWQtdGlsZSB7XHJcbiAgb3ZlcmZsb3c6IHZpc2libGU7XHJcbn1cclxuXHJcbm1hdC1sYWJlbCB7XHJcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMzZjUxYjU7XHJcbn1cclxuXHJcbi5pc2FfZXJyb3Ige1xyXG4gIGNvbG9yOiAjRDgwMDBDO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNGRkQyRDI7XHJcbiAgbWFyZ2luOiAxMHB4IDBweDtcclxuICBtYXJnaW4tcmlnaHQ6IDVweDtcclxuICBwYWRkaW5nOjEycHg7XHJcbn1cclxuLmlzYV9lcnJvciBpIHtcclxuICBtYXJnaW46MTBweCAyMnB4O1xyXG4gIGZvbnQtc2l6ZToyZW07XHJcbiAgdmVydGljYWwtYWxpZ246bWlkZGxlO1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<button mat-raised-button (click)=\\\"setData()\\\">\\n  <mat-icon>refresh</mat-icon>Refresh\\n</button>\\n<mat-grid-list [cols]=\\\"cols\\\">\\n  <mat-grid-tile *ngFor=\\\"let tank of tanks\\\">\\n    <mat-label>Ref: {{tank.tankRef}}<br>\\n      Carburant: {{tank.tankCarburant}}<br>\\n    </mat-label>\\n    <div id=\\\"tankContainer\\\" [class.warningColor]=\\\"tank.warning\\\">\\n      <div id=\\\"glass\\\">\\n        <div id=\\\"water\\\" [style.height.px]=\\\"tank.tankLevel\\\">\\n          <div id=\\\"level\\\">{{tank.percentage}}%</div>\\n        </div>\\n      </div>\\n    </div>\\n  </mat-grid-tile>\\n</mat-grid-list>\\n\"","import { Component, OnInit, HostListener, SimpleChanges, Input } from '@angular/core';\nimport { CiterneService } from 'app/shared/services/citerne.service';\n@Component({\n  selector: 'app-tanks',\n  templateUrl: './tanks.component.html',\n  styleUrls: ['./tanks.component.css']\n})\nexport class TanksComponent implements OnInit {\n\n  @Input() public tanks: any;\n  public tank: {\n    tankRef: string,\n    tankCarburant: string,\n    tankLevel: number,\n    percentage: number,\n    warning: boolean\n  };\n  public cols: number;\n  screenHeight: any;\n  screenWidth: any;\n\n  constructor(private tankService: CiterneService) {\n    this.getScreenSize();\n    this.tank = { tankRef: '', tankCarburant: '', tankLevel: 0, percentage: 0, warning: false };\n    this.tanks = [];\n  }\n\n  setDefault() {\n    this.tanks = [];\n    for (let _i = 0; _i < 4; _i++) {\n      this.tanks.push(this.tank);\n    }\n  }\n\n  @HostListener('window:resize', ['$event'])\n  getScreenSize(event?) {\n    this.screenHeight = window.innerHeight;\n    this.screenWidth = window.innerWidth;\n    if (this.screenWidth < 500) {\n      this.cols = 1;\n    } else if (this.screenWidth < 1000) {\n      this.cols = 2;\n    } else if (this.screenWidth < 1450) {\n      this.cols = 3;\n    } else {\n      this.cols = 4;\n    }\n  }\n\n  setData() {\n    this.tanks = [];\n    let warningValue: boolean;\n    let value: number;\n    let percen: number;\n    this.tankService.citernes.forEach(citerne => {\n      value = (citerne.stock * 300) / citerne.capacite;\n      value = Math.floor(value);\n      percen = parseFloat(((100 * value) / 300).toFixed(3));\n      if (percen < 30) {\n        warningValue = true;\n      } else {\n        warningValue = false;\n      }\n      this.tank = { tankRef: citerne.libelle,\n                    tankCarburant: citerne.carburant,\n                    tankLevel: value,\n                    percentage: percen,\n                    warning: warningValue};\n      this.tanks.push(this.tank);\n    });\n  }\n\n  ngOnInit(): void {\n    this.tankService.getCiternesList();\n    this.setDefault();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvaW52ZW50YWlyZS9Cb24gdmFsZXVyL2Jvbi12YWxldXItbGlzdC9ib24tdmFsZXVyLWVkaXQvYm9uLXZhbGV1ci1lZGl0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-toolbar>\\n  <span>Modifier Bon Valeur</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\n    <mat-icon>clear</mat-icon>\\n  </button>\\n</mat-toolbar>\\n\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\n  <div>\\n    <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Valeur du Bon\\\" required type=\\\"number\\\" name=\\\"cardValue\\\"\\n            [(ngModel)]=\\\"bonValeur.cardValue\\\">\\n          <mat-error>Valeur du Bon est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nombre de bons\\\" required type=\\\"number\\\" name=\\\"numberOfCards\\\"\\n            [(ngModel)]=\\\"bonValeur.numberOfCards\\\">\\n          <mat-error>Nombre de bons est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Date Livraison\\\" required type=\\\"text\\\" name=\\\"date\\\" [(ngModel)]=\\\"bonValeur.date\\\">\\n          <mat-error>Date Livraison est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n    </mat-grid-list>\\n\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"updateBonValeur()\\\"\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Modifier\\n      </button>\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { BonValeur } from 'app/shared/models/bonValeur.model';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { BonValeurService } from 'app/shared/services/bon-valeur.service';\nimport { NotificationService } from 'app/shared/services/notification.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-bon-valeur-edit',\n  templateUrl: './bon-valeur-edit.component.html',\n  styleUrls: ['./bon-valeur-edit.component.css']\n})\nexport class BonValeurEditComponent implements OnInit {\n\n  public bonValeur: BonValeur;\n  public width: number;\n\n  constructor(public dialogRef: MatDialogRef<BonValeurEditComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any,\n              private bonValeurService: BonValeurService,\n              private notifservice: NotificationService) {\n    this.bonValeur = data.bonValeur;\n    this.width = 2;\n  }\n\n  ngOnInit() {\n    if (document.body.clientWidth < 600) {\n      this.width = 1;\n    }\n  }\n\n  onClose(): void {\n    this.dialogRef.close();\n  }\n\n  onClear(form: NgForm): void {\n    form.reset();\n  }\n\n  updateBonValeur(): void {\n    this.bonValeur.totalValue = this.bonValeur.cardValue * this.bonValeur.numberOfCards;\n    this.bonValeurService.updateBonValeur(this.bonValeur._id, this.bonValeur).subscribe(res => {\n      this.bonValeurService.getBonValeursList();\n      this.dialogRef.close();\n      this.notifservice.success('Bon Valeur modifié avec succés');\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvaW52ZW50YWlyZS9Cb24gdmFsZXVyL2Jvbi12YWxldXItbGlzdC9ib24tdmFsZXVyLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"search-div\\\">\\n  <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\n    <input matInput placeholder=\\\"Search\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"search\\\" (keyup)=\\\"filter()\\\">\\n    <button *ngIf=\\\"search\\\" mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"clearSearch()\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </mat-form-field>\\n</div>\\n<div class=\\\"mat-elevation-z8\\\">\\n  <mat-table [dataSource]=\\\"bonValeurService.bonValeursMatTab\\\" matSort>\\n    <ng-container matColumnDef=\\\"cardValue\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Valeur du bon</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.cardValue}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef>Recette bons valeur</mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"numberOfCards\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Nombre de bons</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.numberOfCards}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"date\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Date de livraison</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.date}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"state\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Affectation</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.state}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"totalValue\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Valeur totale</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.totalValue}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef>{{getTotalPrevue()}}</mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <mat-header-cell *matHeaderCellDef>\\n      </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\">\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Editer\\\" color=\\\"primary\\\"\\n          (click)=\\\"updateBonValeurDialog(row)\\\">\\n          <mat-icon>edit</mat-icon>\\n        </button>\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Supprimer\\\" color=\\\"warn\\\"\\n          (click)=\\\"deleteBonValeurDialog(row._id, 'bonValeur')\\\">\\n          <mat-icon>delete_outline</mat-icon>\\n        </button>\\n      </mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"loading\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n        Loading data ...\\n      </mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"noData\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n        No data.\\n      </mat-footer-cell>\\n    </ng-container>\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    <mat-footer-row *matFooterRowDef=\\\"displayedColumns\\\"\\n      [ngClass]=\\\"{'hide':bonValeurService.bonValeursMatTab!=null && bonValeurService.bonValeursMatTab.data.length==0}\\\">\\n    </mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':bonValeurService.bonValeursMatTab!=null}\\\">\\n    </mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\"\\n      [ngClass]=\\\"{'hide':!(bonValeurService.bonValeursMatTab!=null && bonValeurService.bonValeursMatTab.data.length==0)}\\\">\\n    </mat-footer-row>\\n  </mat-table>\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" [pageSize]=\\\"5\\\" showFirstLastButtons></mat-paginator>\\n</div>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSort, MatPaginator, MatDialog } from '@angular/material';\nimport { BonValeurService } from 'app/shared/services/bon-valeur.service';\nimport { ConfirmDeleteComponent } from '@ComShared/confirm-delete/confirm-delete.component';\nimport { BonValeur } from 'app/shared/models/bonValeur.model';\nimport { BonValeurEditComponent } from './bon-valeur-edit/bon-valeur-edit.component';\n\n@Component({\n  selector: 'app-bon-valeur-list',\n  templateUrl: './bon-valeur-list.component.html',\n  styleUrls: ['./bon-valeur-list.component.css']\n})\nexport class BonValeurListComponent implements OnInit {\n\n  public displayedColumns: string[];\n  public search: string;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(public bonValeurService: BonValeurService,\n              private dialog: MatDialog) {\n    this.displayedColumns = ['cardValue', 'numberOfCards', 'date', 'state', 'totalValue', 'actions'];\n  }\n\n  ngOnInit() {\n    this.bonValeurService.getBonValeursList(this.sort, this.paginator);\n  }\n\n  getTotalPrevue() {\n    return this.bonValeurService.getTotalPrevue();\n  }\n\n  deleteBonValeurDialog(id: string, msg: string): void {\n    this.dialog.open(ConfirmDeleteComponent, {\n      data: { id, msg }\n    });\n  }\n\n  updateBonValeurDialog(bonValeur: BonValeur): void {\n    this.dialog.open(BonValeurEditComponent, {\n      panelClass: 'full-width-dialog',\n      data: { bonValeur: Object.assign({}, bonValeur) }\n    });\n  }\n\n  filter(): void {\n    this.bonValeurService.bonValeursMatTab.filter = this.search.trim().toLowerCase();\n  }\n\n  clearSearch(): void {\n    this.search = '';\n    this.filter();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvaW52ZW50YWlyZS9DYXJ0ZSBCb24vY2FyZC1ib24tbGlzdC9jYXJkLWJvbi1lZGl0L2NhcmQtYm9uLWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-toolbar>\\n  <span>Modifier Carte Bon</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\n    <mat-icon>clear</mat-icon>\\n  </button>\\n</mat-toolbar>\\n\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\n  <div>\\n    <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <mat-label>Produit de carburant</mat-label>\\n          <mat-select required name=\\\"cardType\\\" [(ngModel)]=\\\"carteBon.cardType\\\">\\n            <mat-option>None</mat-option>\\n            <mat-option *ngFor=\\\"let c of carteBonTypeService.cardTypes\\\" [value]=\\\"c.cardCode\\\">\\n              {{c.cardCode}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>Produit de carburant est obligatoire.</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Valeur du bon\\\" required type=\\\"number\\\" name=\\\"cardValue\\\"\\n            [(ngModel)]=\\\"carteBon.cardValue\\\">\\n          <mat-error>Valeur du bon est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nombre de bons\\\" required type=\\\"number\\\" name=\\\"numberOfCards\\\"\\n            [(ngModel)]=\\\"carteBon.numberOfCards\\\">\\n          <mat-error>Nombre de bons est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Date Livraison\\\" required type=\\\"text\\\" name=\\\"date\\\" [(ngModel)]=\\\"carteBon.date\\\">\\n          <mat-error>Date Livraison est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n    </mat-grid-list>\\n\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"updateCarteBon()\\\"\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Modifier\\n      </button>\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { CarteBon } from 'app/shared/models/carteBon.model';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { CarteBonService } from 'app/shared/services/carte-bon.service';\nimport { NotificationService } from 'app/shared/services/notification.service';\nimport { NgForm } from '@angular/forms';\nimport { CarteBonTypeService } from 'app/shared/services/carte-bon-type.service';\n\n@Component({\n  selector: 'app-card-bon-edit',\n  templateUrl: './card-bon-edit.component.html',\n  styleUrls: ['./card-bon-edit.component.css']\n})\nexport class CardBonEditComponent implements OnInit {\n\n  public carteBon: CarteBon;\n  public width: number;\n\n  constructor(public dialogRef: MatDialogRef<CardBonEditComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any,\n              private carteBonService: CarteBonService,\n              public carteBonTypeService: CarteBonTypeService,\n              private notifservice: NotificationService) {\n    this.carteBon = data.carteBon;\n    this.width = 2;\n  }\n\n  ngOnInit() {\n    if (document.body.clientWidth < 600) {\n      this.width = 1;\n    }\n    this.carteBonTypeService.getCardTypesList();\n  }\n\n  onClose(): void {\n    this.dialogRef.close();\n  }\n\n  onClear(form: NgForm): void {\n    form.reset();\n  }\n\n  updateCarteBon(): void {\n    this.carteBon.totalValue = parseFloat((this.carteBon.cardValue * this.carteBon.numberOfCards).toFixed(3));\n    this.carteBonService.updateCarteBon(this.carteBon._id, this.carteBon).subscribe(res => {\n      this.carteBonService.getCarteBonsList();\n      this.dialogRef.close();\n      this.notifservice.success('Carte Bon modifié avec succés');\n    },\n      err => {\n        console.log(err);\n      });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvaW52ZW50YWlyZS9DYXJ0ZSBCb24vY2FyZC1ib24tbGlzdC9jYXJkLWJvbi1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"search-div\\\">\\n  <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\n    <input matInput placeholder=\\\"Search\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"search\\\" (keyup)=\\\"filter()\\\">\\n    <button *ngIf=\\\"search\\\" mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"clearSearch()\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </mat-form-field>\\n</div>\\n<div class=\\\"mat-elevation-z8\\\">\\n  <mat-table [dataSource]=\\\"carteBonService.carteBonsMatTab\\\" matSort>\\n\\n    <ng-container matColumnDef=\\\"cardType\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Produit de carburant</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.cardType}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef>Recette Carte bons</mat-footer-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"cardValue\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Valeur du bon</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.cardValue}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"numberOfCards\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Nombre de bons</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.numberOfCards}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"state\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Affectation</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.state}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"totalValue\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Valeur totale </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.totalValue}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef>{{getTotalPrevue()}}</mat-footer-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <mat-header-cell *matHeaderCellDef></mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\">\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Voir plus\\\" (click)=\\\"seeMoreDialog(row)\\\">\\n          <mat-icon>remove_red_eye</mat-icon>\\n        </button>\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Editer\\\" color=\\\"primary\\\" (click)=\\\"updateCarteBonDialog(row)\\\">\\n          <mat-icon>edit</mat-icon>\\n        </button>\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Supprimer\\\" color=\\\"warn\\\"\\n          (click)=\\\"deleteCarteBonDialog(row._id, 'carteBon')\\\">\\n          <mat-icon>delete_outline</mat-icon>\\n        </button>\\n      </mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"loading\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n        Loading data ...\\n      </mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"noData\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n        No data.\\n      </mat-footer-cell>\\n    </ng-container>\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    <mat-footer-row *matFooterRowDef=\\\"displayedColumns\\\"\\n      [ngClass]=\\\"{'hide':carteBonService.carteBonsMatTab!=null && carteBonService.carteBonsMatTab.data.length==0}\\\">\\n    </mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':carteBonService.carteBonsMatTab!=null}\\\">\\n    </mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\"\\n      [ngClass]=\\\"{'hide':!(carteBonService.carteBonsMatTab!=null && carteBonService.carteBonsMatTab.data.length==0)}\\\">\\n    </mat-footer-row>\\n  </mat-table>\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" [pageSize]=\\\"5\\\" showFirstLastButtons></mat-paginator>\\n</div>\\n\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSort, MatPaginator, MatDialog } from '@angular/material';\nimport { CarteBonService } from 'app/shared/services/carte-bon.service';\nimport { CardBonMoreDetailsComponent } from '@ComCarteBon/card-bon-more-details/card-bon-more-details.component';\nimport { ConfirmDeleteComponent } from '@ComShared/confirm-delete/confirm-delete.component';\nimport { CardBonEditComponent } from './card-bon-edit/card-bon-edit.component';\nimport { CarteBon } from 'app/shared/models/carteBon.model';\n\n@Component({\n  selector: 'app-card-bon-list',\n  templateUrl: './card-bon-list.component.html',\n  styleUrls: ['./card-bon-list.component.css']\n})\nexport class CardBonListComponent implements OnInit {\n\n  public displayedColumns: string[];\n  public search: string;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(public carteBonService: CarteBonService,\n              private dialog: MatDialog) {\n    this.displayedColumns = ['cardType', 'cardValue', 'numberOfCards', 'state', 'totalValue', 'actions'];\n  }\n\n  ngOnInit() {\n    this.carteBonService.getCarteBonsList(this.sort, this.paginator);\n  }\n\n  getTotalPrevue() {\n    return this.carteBonService.getTotalPrevue();\n  }\n\n  seeMoreDialog(carteBon): void {\n    this.dialog.open(CardBonMoreDetailsComponent, {\n      panelClass: 'full-width-dialog',\n      height: '500px',\n      data: { carteBon }\n    });\n\n  }\n\n  deleteCarteBonDialog(id: string, msg: string): void {\n    this.dialog.open(ConfirmDeleteComponent, {\n      data: { id, msg }\n    });\n  }\n\n  updateCarteBonDialog(carteBon: CarteBon): void {\n    this.dialog.open(CardBonEditComponent, {\n      panelClass: 'full-width-dialog',\n      data: { carteBon: Object.assign({}, carteBon) }\n    });\n  }\n\n  filter(): void {\n    this.carteBonService.carteBonsMatTab.filter = this.search.trim().toLowerCase();\n  }\n\n  clearSearch(): void {\n    this.search = '';\n    this.filter();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvaW52ZW50YWlyZS9DYXJ0ZSBCb24vY2FyZC1ib24tbGlzdC9jYXJkLWJvbi1tb3JlLWRldGFpbHMvY2FyZC1ib24tbW9yZS1kZXRhaWxzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div mat-dialog-content>\\n  <mat-list>\\n    <mat-list-item>\\n      <h4>Produit de carburant: </h4>&nbsp;&nbsp;{{carteBon.cardType}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Valeur du bon: </h4>&nbsp;&nbsp;{{carteBon.cardValue}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Nombre de bons: </h4>&nbsp;&nbsp;{{carteBon.numberOfCards}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Valeur totale: </h4>&nbsp;&nbsp;{{carteBon.totalValue}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Date de livraison: </h4>&nbsp;&nbsp;{{carteBon.date}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n  </mat-list>\\n</div>\\n<div mat-dialog-actions>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button mat-raised-button (click)=\\\"onNoClick()\\\" color=\\\"primary\\\">Fermer</button>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n</div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { CarteBon } from 'app/shared/models/carteBon.model';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-card-bon-more-details',\n  templateUrl: './card-bon-more-details.component.html',\n  styleUrls: ['./card-bon-more-details.component.css']\n})\nexport class CardBonMoreDetailsComponent implements OnInit {\n\n  public carteBon: CarteBon;\n\n  constructor(public dialogRef: MatDialogRef<CardBonMoreDetailsComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n      this.carteBon = data.carteBon;\n     }\n\n  ngOnInit() {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvaW52ZW50YWlyZS9DaGVxdWUvY2hlcXVlLWxpc3QvY2hlcXVlLWVkaXQvY2hlcXVlLWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-toolbar>\\n    <span>Modifier Cheque</span>\\n    <span class=\\\"fill-remaining-space\\\"></span>\\n    <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\n      <mat-icon>clear</mat-icon>\\n    </button>\\n  </mat-toolbar>\\n\\n  <form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\n    <div>\\n      <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\n\\n          <mat-grid-tile>\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Nom du bénéficiaire\\\" required type=\\\"text\\\" name=\\\"payeeName\\\"\\n                  [(ngModel)]=\\\"cheque.payeeName\\\">\\n                <mat-error>Nom du bénéficiaire est obligatoire</mat-error>\\n              </mat-form-field>\\n            </mat-grid-tile>\\n\\n          <mat-grid-tile>\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"Jour d'encaissement\\\" required type=\\\"text\\\" name=\\\"date\\\"\\n                [(ngModel)]=\\\"cheque.date\\\">\\n              <mat-error>Jour d'encaissement est obligatoire</mat-error>\\n            </mat-form-field>\\n          </mat-grid-tile>\\n\\n          <mat-grid-tile>\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"Numéro du cheque\\\" required type=\\\"text\\\" name=\\\"chequeNumber\\\"\\n                [(ngModel)]=\\\"cheque.chequeNumber\\\">\\n              <mat-error>Numéro du cheque est obligatoire</mat-error>\\n            </mat-form-field>\\n          </mat-grid-tile>\\n\\n          <mat-grid-tile>\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"Nom du bank\\\" required type=\\\"text\\\" name=\\\"bankName\\\"\\n                [(ngModel)]=\\\"cheque.bankName\\\">\\n              <mat-error>Nom du bank est obligatoire</mat-error>\\n            </mat-form-field>\\n          </mat-grid-tile>\\n\\n          <mat-grid-tile>\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"Montant du chèque\\\" required type=\\\"number\\\" name=\\\"chequeValue\\\"\\n                [(ngModel)]=\\\"cheque.chequeValue\\\">\\n              <mat-error>Montant du chèque est obligatoire</mat-error>\\n            </mat-form-field>\\n          </mat-grid-tile>\\n      </mat-grid-list>\\n\\n      <div class=\\\"button-row\\\">\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"updateCheque()\\\"\\n          [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Modifier\\n        </button>\\n        <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\n      </div>\\n    </div>\\n  </form>\\n\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Cheque } from 'app/shared/models/Cheque.model';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { ChequeService } from 'app/shared/services/cheque.service';\nimport { NotificationService } from 'app/shared/services/notification.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-cheque-edit',\n  templateUrl: './cheque-edit.component.html',\n  styleUrls: ['./cheque-edit.component.css']\n})\nexport class ChequeEditComponent implements OnInit {\n\n  public cheque: Cheque;\n  public width: number;\n\n  constructor(public dialogRef: MatDialogRef<ChequeEditComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any,\n              private chequeService: ChequeService,\n              private notifservice: NotificationService) {\n    this.cheque = data.cheque;\n    this.width = 2;\n  }\n\n  ngOnInit() {\n    if (document.body.clientWidth < 600) {\n      this.width = 1;\n    }\n  }\n\n  onClose(): void {\n    this.dialogRef.close();\n  }\n\n  onClear(form: NgForm): void {\n    form.reset();\n  }\n\n  updateCheque(): void {\n    this.chequeService.updateCheque(this.cheque._id, this.cheque).subscribe(res => {\n      this.chequeService.getChequesList();\n      this.dialogRef.close();\n      this.notifservice.success('Cheque modifié avec succés');\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvaW52ZW50YWlyZS9DaGVxdWUvY2hlcXVlLWxpc3QvY2hlcXVlLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"search-div\\\">\\n  <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\n    <input matInput placeholder=\\\"Search\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"search\\\" (keyup)=\\\"filter()\\\">\\n    <button *ngIf=\\\"search\\\" mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"clearSearch()\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </mat-form-field>\\n</div>\\n<div class=\\\"mat-elevation-z8\\\">\\n  <mat-table [dataSource]=\\\"chequeService.chequesMatTab\\\" matSort>\\n    <ng-container matColumnDef=\\\"payeeName\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Nom du bénéficiaire</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.payeeName}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef>Recette Cheques</mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"chequeNumber\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Numéro du chèque</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.chequeNumber}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"bankName\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Nom du bank</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.bankName}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"date\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Jour d'encaissement</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.date}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"state\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Affectation</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.state}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"chequeValue\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Montant du chèque</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.chequeValue}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef>{{getTotalPrevue()}}</mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <mat-header-cell *matHeaderCellDef>\\n      </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\">\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Editer\\\" color=\\\"primary\\\" (click)=\\\"updateChequeDialog(row)\\\">\\n          <mat-icon>edit</mat-icon>\\n        </button>\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Supprimer\\\" color=\\\"warn\\\"\\n          (click)=\\\"deleteChequeDialog(row._id, 'cheque')\\\">\\n          <mat-icon>delete_outline</mat-icon>\\n        </button>\\n      </mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"loading\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n        Loading data ...\\n      </mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"noData\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n        No data.\\n      </mat-footer-cell>\\n    </ng-container>\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    <mat-footer-row *matFooterRowDef=\\\"displayedColumns\\\"\\n      [ngClass]=\\\"{'hide':chequeService.chequesMatTab!=null && chequeService.chequesMatTab.data.length==0}\\\">\\n    </mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':chequeService.chequesMatTab!=null}\\\">\\n    </mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\"\\n      [ngClass]=\\\"{'hide':!(chequeService.chequesMatTab!=null && chequeService.chequesMatTab.data.length==0)}\\\">\\n    </mat-footer-row>\\n  </mat-table>\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" [pageSize]=\\\"5\\\" showFirstLastButtons></mat-paginator>\\n</div>\\n\"","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { ChequeService } from 'app/shared/services/cheque.service';\nimport { MatDialog, MatPaginator } from '@angular/material';\nimport { MatSort } from '@angular/material';\nimport { ConfirmDeleteComponent } from '@ComShared/confirm-delete/confirm-delete.component';\nimport { Cheque } from 'app/shared/models/Cheque.model';\nimport { ChequeEditComponent } from './cheque-edit/cheque-edit.component';\n\n@Component({\n  selector: 'app-cheque-list',\n  templateUrl: './cheque-list.component.html',\n  styleUrls: ['./cheque-list.component.css']\n})\nexport class ChequeListComponent implements OnInit {\n\n  public displayedColumns: string[];\n  public search: string;\n  screenHeight: any;\n  screenWidth: any;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(public chequeService: ChequeService,\n              private dialog: MatDialog) {\n    this.displayedColumns = ['payeeName', 'chequeNumber', 'bankName', 'date', 'state', 'chequeValue', 'actions'];\n  }\n\n  @HostListener('window:resize', ['$event'])\n  getScreenSize(event?) {\n    this.screenHeight = window.innerHeight;\n    this.screenWidth = window.innerWidth;\n    if (this.screenWidth < 650) {\n      this.displayedColumns = ['payeeName', 'bankName', 'chequeValue', 'actions'];\n    } else {\n      this.displayedColumns = ['payeeName', 'chequeNumber', 'bankName', 'date', 'chequeValue', 'actions'];\n    }\n  }\n\n  getTotalPrevue() {\n    return this.chequeService.getTotalPrevue();\n  }\n\n  ngOnInit() {\n    this.chequeService.getChequesList(this.sort, this.paginator);\n  }\n\n  deleteChequeDialog(id: string, msg: string): void {\n    this.dialog.open(ConfirmDeleteComponent, {\n      data: { id, msg }\n    });\n  }\n\n  updateChequeDialog(cheque: Cheque): void {\n    this.dialog.open(ChequeEditComponent, {\n      panelClass: 'full-width-dialog',\n      data: { cheque: Object.assign({}, cheque) }\n    });\n  }\n\n  filter(): void {\n    this.chequeService.chequesMatTab.filter = this.search.trim().toLowerCase();\n  }\n\n  clearSearch(): void {\n    this.search = '';\n    this.filter();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvaW52ZW50YWlyZS9DcmVkaXQvY3JlZGl0LWxpc3QvY3JlZGl0LWFkZC9jcmVkaXQtYWRkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-toolbar>\\n  <span>Ajouter Credit</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\n    <mat-icon>clear</mat-icon>\\n  </button>\\n</mat-toolbar>\\n\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\n  <div>\\n    <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Numéro du client\\\" required type=\\\"text\\\" maxlength=\\\"4\\\" name=\\\"clientNumber\\\" (change)=\\\"getClient(credit.clientNumber)\\\"\\n            [(ngModel)]=\\\"credit.clientNumber\\\">\\n          <mat-error *ngIf=\\\"lengthError\\\">le numéro de client doit être composé de 4 chiffres</mat-error>\\n          <mat-error *ngIf=\\\"notFoundError\\\">ce n'est pas un numéro de client</mat-error>\\n          <mat-error>Numéro du client est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nom du client\\\" required disabled type=\\\"text\\\" name=\\\"clientName\\\"\\n            [(ngModel)]=\\\"credit.clientName\\\">\\n          <mat-error>Nom du client est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"date d'endettement\\\" required disabled type=\\\"text\\\" name=\\\"date\\\"\\n            [(ngModel)]=\\\"credit.date\\\">\\n          <mat-error>date d'endettement est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Valeur initial du crédit\\\" required type=\\\"number\\\" name=\\\"creditOriginalValue\\\"\\n            [(ngModel)]=\\\"credit.creditOriginalValue\\\">\\n          <mat-error>Valeur initial du crédit est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n    </mat-grid-list>\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addCredit()\\\"\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Ajouter\\n      </button>\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Credit } from 'app/shared/models/credit.model';\nimport { MatDialogRef } from '@angular/material';\nimport { CreditService } from 'app/shared/services/credit.service';\nimport { NotificationService } from 'app/shared/services/notification.service';\nimport { NgForm } from '@angular/forms';\nimport { ClientService } from 'app/shared/services/client.service';\n\n@Component({\n  selector: 'app-credit-add',\n  templateUrl: './credit-add.component.html',\n  styleUrls: ['./credit-add.component.css']\n})\nexport class CreditAddComponent implements OnInit {\n\n  public credit: Credit;\n  public width: number;\n  public lengthError: boolean;\n  public notFoundError: boolean;\n\n  constructor(private dialogMat: MatDialogRef<CreditAddComponent>,\n              private creditService: CreditService,\n              private notifService: NotificationService,\n              private clientService: ClientService) {\n    this.credit = new Credit();\n    this.width = 2;\n    this.lengthError = false;\n    this.notFoundError = false;\n  }\n\n  ngOnInit() {\n    if (document.body.clientWidth < 600) {\n      this.width = 1;\n    }\n    const datetime = new Date();\n    const date = datetime.toISOString().slice(0, 10);\n    this.credit.date = date;\n    this.clientService.getClientsList();\n  }\n\n  onClose(): void {\n    this.dialogMat.close();\n  }\n\n  getClient(clientNumber: string) {\n    if (clientNumber.length === 4) {\n      const res = this.clientService.clients.filter(c => c.number === clientNumber);\n      if (res.length === 0) {\n        this.notFoundError = true;\n        this.notifService.warn('ce n\\'est pas un numéro de client');\n        this.credit.clientName = undefined;\n      } else {\n        this.credit.clientName = res[0].name;\n      }\n    } else {\n      this.lengthError = true;\n      this.notifService.warn('le numéro de client doit être composé de 4 chiffres');\n      this.credit.clientName = undefined;\n    }\n\n  }\n\n  onClear(form: NgForm): void {\n    form.reset();\n  }\n\n  addCredit(): void {\n    this.credit.creditRestValue = this.credit.creditOriginalValue;\n    this.creditService.addCredit(this.credit).subscribe(res => {\n      this.creditService.getCreditsList();\n      this.dialogMat.close();\n      this.notifService.success('Credit ajouter avec succés');\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvaW52ZW50YWlyZS9DcmVkaXQvY3JlZGl0LWxpc3QvY3JlZGl0LWVkaXQvY3JlZGl0LWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-toolbar>\\n  <span>Modifier Credit</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\n    <mat-icon>clear</mat-icon>\\n  </button>\\n</mat-toolbar>\\n\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\n  <div>\\n    <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Numéro du client\\\" required type=\\\"text\\\" name=\\\"clientNumber\\\"\\n            [(ngModel)]=\\\"credit.clientNumber\\\">\\n          <mat-error>Numéro du client est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nom du client\\\" required type=\\\"text\\\" name=\\\"clientName\\\"\\n            [(ngModel)]=\\\"credit.clientName\\\">\\n          <mat-error>Nom du client est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"date d'endettement\\\" required disabled type=\\\"text\\\" name=\\\"date\\\"\\n            [(ngModel)]=\\\"credit.date\\\">\\n          <mat-error>date d'endettement est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Valeur initial du crédit\\\" required type=\\\"number\\\" name=\\\"creditOriginalValue\\\"\\n            [(ngModel)]=\\\"credit.creditOriginalValue\\\">\\n          <mat-error>Valeur initial du crédit est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Valeur restante du crédit\\\" required type=\\\"number\\\" name=\\\"creditRestValue\\\"\\n            [(ngModel)]=\\\"credit.creditRestValue\\\">\\n          <mat-error>Valeur restante du crédit est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n    </mat-grid-list>\\n\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"updateCredit()\\\"\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Modifier\\n      </button>\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Credit } from 'app/shared/models/credit.model';\nimport { NotificationService } from 'app/shared/services/notification.service';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { CreditService } from 'app/shared/services/credit.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-credit-edit',\n  templateUrl: './credit-edit.component.html',\n  styleUrls: ['./credit-edit.component.css']\n})\nexport class CreditEditComponent implements OnInit {\n\n  public credit: Credit;\n  public width: number;\n\n  constructor(public dialogRef: MatDialogRef<CreditEditComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any,\n              private creditService: CreditService,\n              private notifservice: NotificationService) {\n    this.credit = data.credit;\n    this.width = 2;\n  }\n\n  ngOnInit() {\n    if (document.body.clientWidth < 600) {\n      this.width = 1;\n    }\n  }\n\n  onClose(): void {\n    this.dialogRef.close();\n  }\n\n  onClear(form: NgForm): void {\n    form.reset();\n  }\n\n  updateCredit(): void {\n    this.creditService.updateCredit(this.credit._id, this.credit).subscribe(res => {\n      this.creditService.getCreditsList();\n      this.dialogRef.close();\n      this.notifservice.success('Credit modifié avec succés');\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvaW52ZW50YWlyZS9DcmVkaXQvY3JlZGl0LWxpc3QvY3JlZGl0LWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"search-div\\\">\\n  <button mat-raised-button (click)=\\\"addCreditDialog()\\\">\\n    <mat-icon>add</mat-icon>Ajouter\\n  </button>\\n  <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\n    <input matInput placeholder=\\\"Search\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"search\\\" (keyup)=\\\"filter()\\\">\\n    <button *ngIf=\\\"search\\\" mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"clearSearch()\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </mat-form-field>\\n</div>\\n<div class=\\\"mat-elevation-z8\\\">\\n  <mat-table [dataSource]=\\\"creditService.creditsMatTab\\\" matSort>\\n    <ng-container matColumnDef=\\\"clientNumber\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Numéro du client</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.clientNumber}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef>Recette Crédits</mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"clientName\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Nom du client</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.clientName}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"date\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>date d'endettement</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.date}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"creditOriginalValue\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Valeur initial du crédit</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.creditOriginalValue}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"creditRestValue\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Valeur restante du crédit</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.creditRestValue}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef>{{getTotalPrevue()}}</mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <mat-header-cell *matHeaderCellDef>\\n      </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\">\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Editer\\\" color=\\\"primary\\\" (click)=\\\"updateCreditDialog(row)\\\">\\n          <mat-icon>edit</mat-icon>\\n        </button>\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Supprimer\\\" color=\\\"warn\\\"\\n          (click)=\\\"deleteCreditDialog(row._id, 'credit')\\\">\\n          <mat-icon>delete_outline</mat-icon>\\n        </button>\\n      </mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"loading\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n        Loading data ...\\n      </mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"noData\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n        No data.\\n      </mat-footer-cell>\\n    </ng-container>\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    <mat-footer-row *matFooterRowDef=\\\"displayedColumns\\\"\\n      [ngClass]=\\\"{'hide':creditService.creditsMatTab!=null && creditService.creditsMatTab.data.length==0}\\\">\\n    </mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':creditService.creditsMatTab!=null}\\\">\\n    </mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\"\\n      [ngClass]=\\\"{'hide':!(creditService.creditsMatTab!=null && creditService.creditsMatTab.data.length==0)}\\\">\\n    </mat-footer-row>\\n  </mat-table>\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" [pageSize]=\\\"5\\\" showFirstLastButtons></mat-paginator>\\n</div>\\n\"","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { MatDialog, MatPaginator, MatSort } from '@angular/material';\nimport { CreditService } from 'app/shared/services/credit.service';\nimport { ConfirmDeleteComponent } from '@ComShared/confirm-delete/confirm-delete.component';\nimport { CreditEditComponent } from './credit-edit/credit-edit.component';\nimport { Credit } from 'app/shared/models/credit.model';\nimport { CreditAddComponent } from './credit-add/credit-add.component';\n\n@Component({\n  selector: 'app-credit-list',\n  templateUrl: './credit-list.component.html',\n  styleUrls: ['./credit-list.component.css']\n})\nexport class CreditListComponent implements OnInit {\n\n  public displayedColumns: string[];\n  public search: string;\n  screenHeight: any;\n  screenWidth: any;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(public creditService: CreditService,\n              private dialog: MatDialog) {\n    this.displayedColumns = ['clientNumber', 'clientName', 'date', 'creditOriginalValue', 'creditRestValue', 'actions'];\n  }\n\n  @HostListener('window:resize', ['$event'])\n  getScreenSize(event?) {\n    this.screenHeight = window.innerHeight;\n    this.screenWidth = window.innerWidth;\n    if (this.screenWidth < 650) {\n      this.displayedColumns = ['clientName', 'date', 'creditRestValue', 'actions'];\n    } else {\n      this.displayedColumns = ['clientNumber', 'clientName', 'date', 'creditOriginalValue', 'creditRestValue', 'actions'];\n    }\n  }\n\n  getTotalPrevue() {\n    return this.creditService.getTotalPrevue();\n  }\n\n  ngOnInit() {\n    this.creditService.getCreditsList(this.sort, this.paginator);\n  }\n\n  addCreditDialog(): void {\n    this.dialog.open(CreditAddComponent, {\n      panelClass: 'full-width-dialog'\n    });\n  }\n\n  deleteCreditDialog(id: string, msg: string): void {\n    this.dialog.open(ConfirmDeleteComponent, {\n      data: { id, msg }\n    });\n  }\n\n  updateCreditDialog(credit: Credit): void {\n    this.dialog.open(CreditEditComponent, {\n      panelClass: 'full-width-dialog',\n      data: { credit: Object.assign({}, credit) }\n    });\n  }\n\n  filter(): void {\n    this.creditService.creditsMatTab.filter = this.search.trim().toLowerCase();\n  }\n\n  clearSearch(): void {\n    this.search = '';\n    this.filter();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvaW52ZW50YWlyZS9Fc3BlY2UvZXNwZWNlLWxpc3QvZXNwZWNlLWVkaXQvZXNwZWNlLWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-toolbar>\\n  <span>Modifier recette espece</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\n    <mat-icon>clear</mat-icon>\\n  </button>\\n</mat-toolbar>\\n\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\n  <div>\\n    <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <mat-label>Valeur en TND</mat-label>\\n          <mat-select required name=\\\"type\\\" [(ngModel)]=\\\"espece.type\\\">\\n            <mat-option>None</mat-option>\\n            <mat-option [value]=\\\"0.05\\\">0.05</mat-option>\\n            <mat-option [value]=\\\"0.1\\\">0.1</mat-option>\\n            <mat-option [value]=\\\"0.2\\\">0.2</mat-option>\\n            <mat-option [value]=\\\"0.5\\\">0.5</mat-option>\\n            <mat-option [value]=\\\"1\\\">1</mat-option>\\n            <mat-option [value]=\\\"2\\\">2</mat-option>\\n            <mat-option [value]=\\\"5\\\">5</mat-option>\\n            <mat-option [value]=\\\"10\\\">10</mat-option>\\n            <mat-option [value]=\\\"20\\\">20</mat-option>\\n            <mat-option [value]=\\\"50\\\">50</mat-option>\\n          </mat-select>\\n          <mat-error>Valeur en TND est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Quantité\\\" required type=\\\"number\\\" name=\\\"quantity\\\" [(ngModel)]=\\\"espece.quantity\\\">\\n          <mat-error>Quantité est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n    </mat-grid-list>\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"updateEspece()\\\"\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Modifier\\n      </button>\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Espece } from 'app/shared/models/espece';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { EspeceService } from 'app/shared/services/espece.service';\nimport { NotificationService } from 'app/shared/services/notification.service';\nimport { SessionService } from 'app/shared/services/session.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-espece-edit',\n  templateUrl: './espece-edit.component.html',\n  styleUrls: ['./espece-edit.component.css']\n})\nexport class EspeceEditComponent implements OnInit {\n\n  public espece: Espece;\n  public width: number;\n\n  constructor(public dialogRef: MatDialogRef<EspeceEditComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any,\n              private especeService: EspeceService,\n              private notifservice: NotificationService) {\n    this.espece = data.espece;\n    this.width = 2;\n  }\n\n  ngOnInit() {\n    if (document.body.clientWidth < 600) {\n      this.width = 1;\n    }\n  }\n\n  onClose(): void {\n    this.dialogRef.close();\n  }\n\n  onClear(form: NgForm): void {\n    form.reset();\n  }\n\n  updateEspece(): void {\n    this.espece.totalValue = this.espece.type * this.espece.quantity;\n    this.especeService.updateEspece(this.espece._id, this.espece).subscribe(res => {\n      this.especeService.getEspecesList();\n      this.dialogRef.close();\n      this.notifservice.success('Recette espece modifié avec succés');\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvaW52ZW50YWlyZS9Fc3BlY2UvZXNwZWNlLWxpc3QvZXNwZWNlLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"search-div\\\">\\n  <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\n    <input matInput placeholder=\\\"Search\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"search\\\" (keyup)=\\\"filter()\\\">\\n    <button *ngIf=\\\"search\\\" mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"clearSearch()\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </mat-form-field>\\n</div>\\n<div class=\\\"mat-elevation-z8\\\">\\n  <mat-table [dataSource]=\\\"especeService.especesMatTab\\\" matSort>\\n    <ng-container matColumnDef=\\\"type\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Valeur en TND</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.type}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef>Recette Espece</mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"quantity\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Quntité</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.quantity}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"totalValue\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Valeur Total</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.totalValue}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef>{{getTotalPrevue()}}</mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"state\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Affectation</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.state}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <mat-header-cell *matHeaderCellDef>\\n      </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\">\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Editer\\\" color=\\\"primary\\\" (click)=\\\"updateEspeceDialog(row)\\\">\\n          <mat-icon>edit</mat-icon>\\n        </button>\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Supprimer\\\" color=\\\"warn\\\"\\n          (click)=\\\"deleteEspeceDialog(row._id, 'recette-espece')\\\">\\n          <mat-icon>delete_outline</mat-icon>\\n        </button>\\n      </mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"loading\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n        Loading data ...\\n      </mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"noData\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n        No data.\\n      </mat-footer-cell>\\n    </ng-container>\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    <mat-footer-row *matFooterRowDef=\\\"displayedColumns\\\"\\n      [ngClass]=\\\"{'hide':especeService.especesMatTab!=null && especeService.especesMatTab.data.length==0}\\\">\\n    </mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':especeService.especesMatTab!=null}\\\">\\n    </mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\"\\n      [ngClass]=\\\"{'hide':!(especeService.especesMatTab!=null && especeService.especesMatTab.data.length==0)}\\\">\\n    </mat-footer-row>\\n  </mat-table>\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" [pageSize]=\\\"5\\\" showFirstLastButtons></mat-paginator>\\n</div>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Espece } from 'app/shared/models/espece';\nimport { EspeceEditComponent } from './espece-edit/espece-edit.component';\nimport { ConfirmDeleteComponent } from '@ComShared/confirm-delete/confirm-delete.component';\nimport { SessionService } from 'app/shared/services/session.service';\nimport { EspeceService } from 'app/shared/services/espece.service';\nimport { MatDialog, MatPaginator, MatSort } from '@angular/material';\n\n@Component({\n  selector: 'app-espece-list',\n  templateUrl: './espece-list.component.html',\n  styleUrls: ['./espece-list.component.css']\n})\nexport class EspeceListComponent implements OnInit {\n\n  public displayedColumns: string[];\n  public search: string;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(public especeService: EspeceService,\n              private dialog: MatDialog) {\n    this.displayedColumns = ['type', 'quantity', 'totalValue', 'state', 'actions'];\n  }\n\n  ngOnInit() {\n    this.especeService.getEspecesList(this.sort, this.paginator);\n  }\n\n  getTotalPrevue() {\n    return this.especeService.getTotalPrevue();\n  }\n\n  deleteEspeceDialog(id: string, msg: string): void {\n    this.dialog.open(ConfirmDeleteComponent, {\n      data: { id, msg }\n    });\n  }\n\n  updateEspeceDialog(espece: Espece): void {\n    this.dialog.open(EspeceEditComponent, {\n      panelClass: 'full-width-dialog',\n      data: { espece: Object.assign({}, espece) }\n    });\n  }\n\n  filter(): void {\n    this.especeService.especesMatTab.filter = this.search.trim().toLowerCase();\n  }\n\n  clearSearch(): void {\n    this.search = '';\n    this.filter();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvaW52ZW50YWlyZS9TdGVnLWV0LWF1dHJlcy9zdGVnLWV0LWF1dHJlcy1saXN0L3N0ZWctZXQtYXV0cmVzLWVkaXQvc3RlZy1ldC1hdXRyZXMtZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-toolbar>\\n  <span>Modifier Bon</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\n    <mat-icon>clear</mat-icon>\\n  </button>\\n</mat-toolbar>\\n\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\n  <div>\\n    <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Numéro du client\\\" required type=\\\"text\\\" name=\\\"clientNumber\\\"\\n            [(ngModel)]=\\\"stegEtAutre.clientNumber\\\">\\n          <mat-error>Numéro du client est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nom du client\\\" required type=\\\"text\\\" name=\\\"clientName\\\"\\n            [(ngModel)]=\\\"stegEtAutre.clientName\\\">\\n          <mat-error>Nom du client est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Chauffeur\\\" required type=\\\"number\\\" name=\\\"chauffeur\\\"\\n            [(ngModel)]=\\\"stegEtAutre.chauffeur\\\">\\n          <mat-error>Chauffeur est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Carburant\\\" required type=\\\"number\\\" name=\\\"carburant\\\"\\n            [(ngModel)]=\\\"stegEtAutre.carburant\\\">\\n          <mat-error>Carburant est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nombre de litres\\\" required type=\\\"number\\\" name=\\\"numberOfLiters\\\"\\n            [(ngModel)]=\\\"stegEtAutre.numberOfLiters\\\">\\n          <mat-error>Nombre de litres est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Prix (L)\\\" required type=\\\"number\\\" name=\\\"literPrice\\\"\\n            [(ngModel)]=\\\"stegEtAutre.literPrice\\\">\\n          <mat-error>Prix d'un litre est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nombre de bons\\\" required type=\\\"number\\\" name=\\\"numberOfCards\\\"\\n            [(ngModel)]=\\\"stegEtAutre.numberOfCards\\\">\\n          <mat-error>Nombre de cartes est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Valeur du bon\\\" required type=\\\"number\\\" name=\\\"cardValue\\\"\\n            [(ngModel)]=\\\"stegEtAutre.cardValue\\\">\\n          <mat-error>Valeur du bon est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"date de livraison\\\" required disabled type=\\\"text\\\" name=\\\"date\\\"\\n            [(ngModel)]=\\\"stegEtAutre.date\\\">\\n          <mat-error>date de livraison est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n    </mat-grid-list>\\n\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"updateStegEtAutre()\\\"\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Modifier\\n      </button>\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { StegEtAutre } from 'app/shared/models/StegEtAutre.model';\nimport { NgForm } from '@angular/forms';\nimport { StegEtAutresService } from 'app/shared/services/steg-et-autres.service';\nimport { NotificationService } from 'app/shared/services/notification.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-steg-et-autres-edit',\n  templateUrl: './steg-et-autres-edit.component.html',\n  styleUrls: ['./steg-et-autres-edit.component.css']\n})\nexport class StegEtAutresEditComponent implements OnInit {\n\n  public stegEtAutre: StegEtAutre;\n  public width: number;\n\n  constructor(public dialogRef: MatDialogRef<StegEtAutresEditComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any,\n              private stegEtAutreService: StegEtAutresService,\n              private notifservice: NotificationService) {\n    this.stegEtAutre = data.stegEtAutre;\n    this.width = 2;\n  }\n\n  ngOnInit() {\n    if (document.body.clientWidth < 600) {\n      this.width = 1;\n    }\n  }\n\n  onClose(): void {\n    this.dialogRef.close();\n  }\n\n  onClear(form: NgForm): void {\n    form.reset();\n  }\n\n  updateStegEtAutre(): void {\n    this.stegEtAutreService.updateStegEtAutre(this.stegEtAutre._id, this.stegEtAutre).subscribe(res => {\n      this.stegEtAutreService.getStegEtAutresList();\n      this.dialogRef.close();\n      this.notifservice.success('stegEtAutre modifié avec succés');\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvaW52ZW50YWlyZS9TdGVnLWV0LWF1dHJlcy9zdGVnLWV0LWF1dHJlcy1saXN0L3N0ZWctZXQtYXV0cmVzLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"search-div\\\">\\n  <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\n    <input matInput placeholder=\\\"Search\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"search\\\" (keyup)=\\\"filter()\\\">\\n    <button *ngIf=\\\"search\\\" mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"clearSearch()\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </mat-form-field>\\n</div>\\n<div class=\\\"mat-elevation-z8\\\">\\n  <mat-table [dataSource]=\\\"stegEtAutreService.stegEtAutresMatTab\\\" matSort>\\n    <ng-container matColumnDef=\\\"clientNumber\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Numéro du client</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.clientNumber}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef>Recette Crédits</mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"clientName\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Nom du client</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.clientName}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"carburant\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Code Carburant</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.carburant}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"numberOfCards\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Nombre des bons</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.numberOfCards}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"totalValue\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Total bons</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.totalValue}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef>\\n        <!--{{getTotalPrevue()}}-->\\n      </mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <mat-header-cell *matHeaderCellDef>\\n      </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\">\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Voir plus\\\" (click)=\\\"seeMoreDialog(row)\\\">\\n          <mat-icon>remove_red_eye</mat-icon>\\n        </button>\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Editer\\\" color=\\\"primary\\\"\\n          (click)=\\\"updateStegEtAutreDialog(row)\\\">\\n          <mat-icon>edit</mat-icon>\\n        </button>\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Supprimer\\\" color=\\\"warn\\\"\\n          (click)=\\\"deleteStegEtAutreDialog(row._id, 'stegEtAutre')\\\">\\n          <mat-icon>delete_outline</mat-icon>\\n        </button>\\n      </mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"loading\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n        Loading data ...\\n      </mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"noData\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n        No data.\\n      </mat-footer-cell>\\n    </ng-container>\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    <mat-footer-row *matFooterRowDef=\\\"displayedColumns\\\"\\n      [ngClass]=\\\"{'hide':stegEtAutreService.stegEtAutresMatTab!=null && stegEtAutreService.stegEtAutresMatTab.data.length==0}\\\">\\n    </mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':stegEtAutreService.stegEtAutresMatTab!=null}\\\">\\n    </mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\"\\n      [ngClass]=\\\"{'hide':!(stegEtAutreService.stegEtAutresMatTab!=null && stegEtAutreService.stegEtAutresMatTab.data.length==0)}\\\">\\n    </mat-footer-row>\\n  </mat-table>\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" [pageSize]=\\\"5\\\" showFirstLastButtons></mat-paginator>\\n</div>\\n\"","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { MatSort, MatPaginator, MatDialog } from '@angular/material';\nimport { StegEtAutresService } from 'app/shared/services/steg-et-autres.service';\nimport { StegEtAutresEditComponent } from './steg-et-autres-edit/steg-et-autres-edit.component';\nimport { StegEtAutre } from 'app/shared/models/StegEtAutre.model';\nimport { ConfirmDeleteComponent } from '@ComShared/confirm-delete/confirm-delete.component';\nimport { StegEtAutresMoreDetailsComponent } from './steg-et-autres-more-details/steg-et-autres-more-details.component';\n\n@Component({\n  selector: 'app-steg-et-autres-list',\n  templateUrl: './steg-et-autres-list.component.html',\n  styleUrls: ['./steg-et-autres-list.component.css']\n})\nexport class StegEtAutresListComponent implements OnInit {\n\n  public displayedColumns: string[];\n  public search: string;\n  screenHeight: any;\n  screenWidth: any;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(public stegEtAutreService: StegEtAutresService,\n              private dialog: MatDialog) {\n    this.displayedColumns = ['clientNumber', 'clientName', 'carburant', 'numberOfCards', 'totalValue', 'actions'];\n  }\n\n  @HostListener('window:resize', ['$event'])\n  getScreenSize(event?) {\n    this.screenHeight = window.innerHeight;\n    this.screenWidth = window.innerWidth;\n    if (this.screenWidth < 650) {\n      this.displayedColumns = ['clientName', 'carburant', 'totalValue', 'actions'];\n    } else {\n      this.displayedColumns = ['clientNumber', 'clientName', 'carburant', 'numberOfCards', 'totalValue', 'actions'];\n    }\n  }\n\n  getTotalPrevue() {\n    return this.stegEtAutreService.getTotalPrevue();\n  }\n\n  ngOnInit() {\n    this.stegEtAutreService.getStegEtAutresList(this.sort, this.paginator);\n  }\n\n  deleteStegEtAutreDialog(id: string, msg: string): void {\n    this.dialog.open(ConfirmDeleteComponent, {\n      data: { id, msg }\n    });\n  }\n\n  seeMoreDialog(stegEtAutre): void {\n    this.dialog.open(StegEtAutresMoreDetailsComponent, {\n      panelClass: 'full-width-dialog',\n      data: { stegEtAutre }\n    });\n\n  }\n\n  updateStegEtAutreDialog(stegEtAutre: StegEtAutre): void {\n    this.dialog.open(StegEtAutresEditComponent, {\n      panelClass: 'full-width-dialog',\n      data: { stegEtAutre: Object.assign({}, stegEtAutre) }\n    });\n  }\n\n  filter(): void {\n    this.stegEtAutreService.stegEtAutresMatTab.filter = this.search.trim().toLowerCase();\n  }\n\n  clearSearch(): void {\n    this.search = '';\n    this.filter();\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvaW52ZW50YWlyZS9TdGVnLWV0LWF1dHJlcy9zdGVnLWV0LWF1dHJlcy1saXN0L3N0ZWctZXQtYXV0cmVzLW1vcmUtZGV0YWlscy9zdGVnLWV0LWF1dHJlcy1tb3JlLWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div mat-dialog-content>\\n  <mat-list>\\n    <mat-list-item>\\n      <h4>Code client: </h4>&nbsp;&nbsp;{{stegEtAutre.clientNumber}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Nom client: </h4>&nbsp;&nbsp;{{stegEtAutre.clientName}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Chauffeur: </h4>&nbsp;&nbsp;{{stegEtAutre.chauffeur}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>carburant: </h4>&nbsp;&nbsp;{{stegEtAutre.carburant}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Nombre de litres: </h4>&nbsp;&nbsp;{{stegEtAutre.numberOfLiters}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Prix par litre: </h4>&nbsp;&nbsp;{{stegEtAutre.literPrice}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Nombre de cartes: </h4>&nbsp;&nbsp;{{stegEtAutre.numberOfCards}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Valeur du carte: </h4>&nbsp;&nbsp;{{stegEtAutre.cardValue}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Valeur total: </h4>&nbsp;&nbsp;{{stegEtAutre.totalValue}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Date de livraison: </h4>&nbsp;&nbsp;{{stegEtAutre.date}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n  </mat-list>\\n</div>\\n<div mat-dialog-actions>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button mat-raised-button (click)=\\\"onNoClick()\\\" color=\\\"primary\\\">Fermer</button>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n</div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { StegEtAutre } from 'app/shared/models/StegEtAutre.model';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-steg-et-autres-more-details',\n  templateUrl: './steg-et-autres-more-details.component.html',\n  styleUrls: ['./steg-et-autres-more-details.component.css']\n})\nexport class StegEtAutresMoreDetailsComponent implements OnInit {\n\n  public stegEtAutre: StegEtAutre;\n\n  constructor(public dialogRef: MatDialogRef<StegEtAutresMoreDetailsComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n      this.stegEtAutre = data.stegEtAutre;\n     }\n\n  ngOnInit() {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvaW52ZW50YWlyZS9TdWJ2ZW50aW9uIFBlY2hlL3N1YnZlbnRpb24tcGVjaGUtbGlzdC9zdWJ2ZW50aW9uLXBlY2hlLWVkaXQvc3VidmVudGlvbi1wZWNoZS1lZGl0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-toolbar>\\n  <span>Modifier subvention peche bon</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\n    <mat-icon>clear</mat-icon>\\n  </button>\\n</mat-toolbar>\\n\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\n  <div>\\n    <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Numéro du bon\\\" required type=\\\"number\\\" name=\\\"cardNumber\\\"\\n            [(ngModel)]=\\\"subventionPeche.cardNumber\\\">\\n          <mat-error>Numéro du bon est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nom de bénéficiaire\\\" required type=\\\"text\\\" name=\\\"payeeName\\\"\\n            [(ngModel)]=\\\"subventionPeche.payeeName\\\">\\n          <mat-error>Nom de bénéficiaire est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Puissance du moteur\\\" required type=\\\"number\\\" name=\\\"motorPower\\\"\\n            [(ngModel)]=\\\"subventionPeche.motorPower\\\">\\n          <mat-error>Puissance du moteur est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nom du bateau\\\" required type=\\\"text\\\" name=\\\"boatName\\\"\\n            [(ngModel)]=\\\"subventionPeche.boatName\\\">\\n          <mat-error>Nom du bateau est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nombre de litres\\\" required type=\\\"number\\\" name=\\\"numberOfLiters\\\"\\n            [(ngModel)]=\\\"subventionPeche.numberOfLiters\\\">\\n          <mat-error>Nombre de litres est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Valeur du bon\\\" required type=\\\"number\\\" name=\\\"cardValue\\\"\\n            [(ngModel)]=\\\"subventionPeche.cardValue\\\">\\n          <mat-error>Valeur du bon est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Prix (L)\\\" required type=\\\"number\\\" name=\\\"literPrice\\\"\\n            [(ngModel)]=\\\"subventionPeche.literPrice\\\">\\n          <mat-error>Prix (L) est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Date Livraison\\\" required type=\\\"text\\\" name=\\\"date\\\" [(ngModel)]=\\\"subventionPeche.date\\\">\\n          <mat-error>Date Livraison est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n    </mat-grid-list>\\n\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"updateSubventionPeche()\\\"\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Modifier\\n      </button>\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\n    </div>\\n  </div>\\n</form>\\n\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { SubventionPeche } from 'app/shared/models/subventionPeche';\nimport { SubventionPecheService } from 'app/shared/services/subvention-peche.service';\nimport { NotificationService } from 'app/shared/services/notification.service';\nimport { SessionService } from 'app/shared/services/session.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-subvention-peche-edit',\n  templateUrl: './subvention-peche-edit.component.html',\n  styleUrls: ['./subvention-peche-edit.component.css']\n})\nexport class SubventionPecheEditComponent implements OnInit {\n\n  public subventionPeche: SubventionPeche;\n  public width: number;\n\n  constructor(public dialogRef: MatDialogRef<SubventionPecheEditComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any,\n              private subventionPecheService: SubventionPecheService,\n              private notifservice: NotificationService,\n              private sessionService: SessionService) {\n    this.subventionPeche = data.subventionPeche;\n    this.width = 2;\n  }\n\n  ngOnInit() {\n    if (document.body.clientWidth < 600) {\n      this.width = 1;\n    }\n  }\n\n  onClose(): void {\n    this.dialogRef.close();\n  }\n\n  onClear(form: NgForm): void {\n    form.reset();\n  }\n\n  updateSubventionPeche(): void {\n    this.subventionPecheService.updateSubventionPeche(this.subventionPeche._id, this.subventionPeche).subscribe(res => {\n      this.subventionPecheService.getSubventionPechesListById(this.sessionService.currentSessionId);\n      this.dialogRef.close();\n      this.notifservice.success('Bon subvention peche modifié avec succés');\n    },\n      err => {\n        console.log(err);\n      });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvaW52ZW50YWlyZS9TdWJ2ZW50aW9uIFBlY2hlL3N1YnZlbnRpb24tcGVjaGUtbGlzdC9zdWJ2ZW50aW9uLXBlY2hlLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"search-div\\\">\\n  <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\n    <input matInput placeholder=\\\"Search\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"search\\\" (keyup)=\\\"filter()\\\">\\n    <button *ngIf=\\\"search\\\" mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"clearSearch()\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </mat-form-field>\\n</div>\\n<div class=\\\"mat-elevation-z8\\\">\\n  <mat-table [dataSource]=\\\"subventionPecheService.subventionPechesMatTab\\\" matSort>\\n\\n    <ng-container matColumnDef=\\\"cardNumber\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Numéro du bon</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.cardNumber}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef>Recette subvention peche</mat-footer-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"payeeName\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Nom de bénéficiaire</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.payeeName}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"cardValue\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Valeur du bon</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.cardValue}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef>{{getTotalPrevue()}}</mat-footer-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"date\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Date de livraison</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.date}}</mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <mat-header-cell *matHeaderCellDef></mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\">\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Voir plus\\\" (click)=\\\"seeMoreDialog(row)\\\">\\n          <mat-icon>remove_red_eye</mat-icon>\\n        </button>\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Editer\\\" color=\\\"primary\\\" (click)=\\\"updateSubventionPecheDialog(row)\\\">\\n          <mat-icon>edit</mat-icon>\\n        </button>\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Supprimer\\\" color=\\\"warn\\\"\\n          (click)=\\\"deleteSubventionPecheDialog(row._id, 'recette-subventionPeche')\\\">\\n          <mat-icon>delete_outline</mat-icon>\\n        </button>\\n      </mat-cell>\\n      <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"loading\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n        Loading data ...\\n      </mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"noData\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n        No data.\\n      </mat-footer-cell>\\n    </ng-container>\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    <mat-footer-row *matFooterRowDef=\\\"displayedColumns\\\"\\n      [ngClass]=\\\"{'hide':subventionPecheService.subventionPechesMatTab!=null && subventionPecheService.subventionPechesMatTab.data.length==0}\\\">\\n    </mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':subventionPecheService.subventionPechesMatTab!=null}\\\">\\n    </mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\"\\n      [ngClass]=\\\"{'hide':!(subventionPecheService.subventionPechesMatTab!=null && subventionPecheService.subventionPechesMatTab.data.length==0)}\\\">\\n    </mat-footer-row>\\n  </mat-table>\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" [pageSize]=\\\"5\\\" showFirstLastButtons></mat-paginator>\\n</div>\\n\\n\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort, MatDialog } from '@angular/material';\nimport { SubventionPecheMoreDetailsComponent } from './subvention-peche-more-details/subvention-peche-more-details.component';\nimport { ConfirmDeleteComponent } from '@ComShared/confirm-delete/confirm-delete.component';\nimport { SubventionPecheService } from 'app/shared/services/subvention-peche.service';\nimport { SessionService } from 'app/shared/services/session.service';\nimport { SubventionPecheEditComponent } from './subvention-peche-edit/subvention-peche-edit.component';\nimport { SubventionPeche } from 'app/shared/models/subventionPeche';\n\n@Component({\n  selector: 'app-subvention-peche-list',\n  templateUrl: './subvention-peche-list.component.html',\n  styleUrls: ['./subvention-peche-list.component.css']\n})\nexport class SubventionPecheListComponent implements OnInit {\n\n  public displayedColumns: string[];\n  public search: string;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(public subventionPecheService: SubventionPecheService,\n              private dialog: MatDialog,\n              private sessionService: SessionService) {\n    this.displayedColumns = ['cardNumber', 'payeeName', 'cardValue', 'date', 'actions'];\n  }\n\n  ngOnInit() {\n    this.subventionPecheService.getSubventionPechesListById(this.sessionService.currentSessionId, this.sort, this.paginator);\n  }\n\n  getTotalPrevue() {\n    return this.subventionPecheService.getTotalPrevue();\n  }\n\n  seeMoreDialog(subventionPeche): void {\n    this.dialog.open(SubventionPecheMoreDetailsComponent, {\n      panelClass: 'full-width-dialog',\n      height: '500px',\n      data: { subventionPeche }\n    });\n\n  }\n\n  deleteSubventionPecheDialog(id: string, msg: string): void {\n    this.dialog.open(ConfirmDeleteComponent, {\n      data: { id, msg }\n    });\n  }\n\n  updateSubventionPecheDialog(subventionPeche: SubventionPeche): void {\n    this.dialog.open(SubventionPecheEditComponent, {\n      panelClass: 'full-width-dialog',\n      data: { subventionPeche: Object.assign({}, subventionPeche) }\n    });\n  }\n\n  filter(): void {\n    this.subventionPecheService.subventionPechesMatTab.filter = this.search.trim().toLowerCase();\n  }\n\n  clearSearch(): void {\n    this.search = '';\n    this.filter();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvaW52ZW50YWlyZS9TdWJ2ZW50aW9uIFBlY2hlL3N1YnZlbnRpb24tcGVjaGUtbGlzdC9zdWJ2ZW50aW9uLXBlY2hlLW1vcmUtZGV0YWlscy9zdWJ2ZW50aW9uLXBlY2hlLW1vcmUtZGV0YWlscy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div mat-dialog-content>\\n  <mat-list>\\n    <mat-list-item>\\n      <h4>Numéro du bon: </h4>&nbsp;&nbsp;{{subventionPeche.cardNumber}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Nom de bénéficiaire: </h4>&nbsp;&nbsp;{{subventionPeche.payeeName}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Puissance du moteur: </h4>&nbsp;&nbsp;{{subventionPeche.motorPower}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Nom du bateau: </h4>&nbsp;&nbsp;{{subventionPeche.boatName}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Nombre de litres: </h4>&nbsp;&nbsp;{{subventionPeche.numberOfLitters}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Affecté: </h4>&nbsp;&nbsp;{{subventionPeche.state}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Valeur du bon: </h4>&nbsp;&nbsp;{{subventionPeche.cardValue}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Prix (L): </h4>&nbsp;&nbsp;{{subventionPeche.literPrice}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Date de livraison: </h4>&nbsp;&nbsp;{{subventionPeche.date}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n  </mat-list>\\n</div>\\n<div mat-dialog-actions>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button mat-raised-button (click)=\\\"onNoClick()\\\" color=\\\"primary\\\">Fermer</button>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n</div>\\n\\n\\n\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { SubventionPeche } from 'app/shared/models/subventionPeche';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { MatDialogRef } from '@angular/material';\n\n\n@Component({\n  selector: 'app-subvention-peche-more-details',\n  templateUrl: './subvention-peche-more-details.component.html',\n  styleUrls: ['./subvention-peche-more-details.component.css']\n})\nexport class SubventionPecheMoreDetailsComponent implements OnInit {\n\n  public subventionPeche: SubventionPeche;\n\n  constructor(public dialogRef: MatDialogRef<SubventionPecheMoreDetailsComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n    this.subventionPeche = data.subventionPeche;\n  }\n\n  ngOnInit() {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvaW52ZW50YWlyZS9pbnZlbnRhaXJlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<ng-progress [positionUsing]=\\\"'marginLeft'\\\" [direction]=\\\"'leftToRightIncreased'\\\" [color]=\\\"'#4286f4'\\\"\\n  [trickleSpeed]=\\\"500\\\" [thick]=\\\"true\\\" [ease]=\\\"'easeInSine'\\\"></ng-progress>\\n<div class=\\\"container\\\">\\n  <mat-accordion>\\n    <div class=\\\"margin-param\\\">\\n      <mat-expansion-panel>\\n        <mat-expansion-panel-header>\\n          <span>Carte Bon </span>\\n        </mat-expansion-panel-header>\\n        <app-card-bon-list></app-card-bon-list>\\n      </mat-expansion-panel>\\n    </div>\\n\\n    <div class=\\\"margin-param\\\">\\n      <mat-expansion-panel>\\n        <mat-expansion-panel-header>\\n          <span>Bon Valeur</span>\\n        </mat-expansion-panel-header>\\n        <app-bon-valeur-list></app-bon-valeur-list>\\n      </mat-expansion-panel>\\n    </div>\\n\\n    <div class=\\\"margin-param\\\">\\n      <mat-expansion-panel>\\n        <mat-expansion-panel-header>\\n          <span>Cheque</span>\\n        </mat-expansion-panel-header>\\n        <app-cheque-list></app-cheque-list>\\n      </mat-expansion-panel>\\n    </div>\\n\\n    <div class=\\\"margin-param\\\">\\n      <mat-expansion-panel>\\n        <mat-expansion-panel-header>\\n          <span>Credit</span>\\n        </mat-expansion-panel-header>\\n        <app-credit-list></app-credit-list>\\n      </mat-expansion-panel>\\n    </div>\\n\\n    <div class=\\\"margin-param\\\">\\n      <mat-expansion-panel>\\n        <mat-expansion-panel-header>\\n          <span>STEG et autres</span>\\n        </mat-expansion-panel-header>\\n        <app-steg-et-autres-list></app-steg-et-autres-list>\\n      </mat-expansion-panel>\\n    </div>\\n\\n    <div class=\\\"margin-param\\\">\\n      <mat-expansion-panel>\\n        <mat-expansion-panel-header>\\n          <span>Espèces</span>\\n        </mat-expansion-panel-header>\\n        <app-espece-list></app-espece-list>\\n      </mat-expansion-panel>\\n    </div>\\n\\n    <div class=\\\"margin-param\\\">\\n      <mat-expansion-panel>\\n        <mat-expansion-panel-header>\\n          <span>Subvention pêche</span>\\n        </mat-expansion-panel-header>\\n        <app-subvention-peche-list></app-subvention-peche-list>\\n      </mat-expansion-panel>\\n    </div>\\n\\n  </mat-accordion>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inventaire',\n  templateUrl: './inventaire.component.html',\n  styleUrls: ['./inventaire.component.css']\n})\nexport class InventaireComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvcGFyYW1ldGVycy9DYXJ0ZSBCb24vY2FyZC10eXBlLWxpc3QvY2FyZC10eXBlLWFkZC9jYXJkLXR5cGUtYWRkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-toolbar>\\n  <span>Ajouter type carte bon</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\n    <mat-icon>clear</mat-icon>\\n  </button>\\n</mat-toolbar>\\n\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\n  <div>\\n    <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Code carte Bon\\\" required type=\\\"text\\\" name=\\\"cardCode\\\"\\n            [(ngModel)]=\\\"cardType.cardCode\\\">\\n          <mat-error>code carte bon is required.</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <mat-label>Carburant</mat-label>\\n          <mat-select required name=\\\"Carburant\\\" [(ngModel)]=\\\"cardType.cardCarburant\\\">\\n            <mat-option>None</mat-option>\\n            <mat-option *ngFor=\\\"let c of carburantService.carburants\\\" [value]=\\\"c._id\\\">\\n              {{c.ref}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>Ce champ est obligatoire.</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nombre de litres\\\" required type=\\\"number\\\" name=\\\"numberOfLiters\\\"\\n            [(ngModel)]=\\\"cardType.numberOfLiters\\\">\\n          <mat-error>Nombre de litres is required.</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Description\\\" required type=\\\"text\\\" name=\\\"cardDescription\\\"\\n            [(ngModel)]=\\\"cardType.cardDescription\\\">\\n          <mat-error>description carte bon is required.</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n    </mat-grid-list>\\n\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"angForm.pristine || angForm.invalid\\\"\\n        (click)=\\\"addCardType()\\\">Ajouter\\n        type</button>\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\n    </div>\\n  </div>\\n\\n</form>\\n\"","import { Component, OnInit, HostListener } from '@angular/core';\r\nimport { FormGroup, Validators, FormControl, NgForm } from '@angular/forms';\r\nimport { CarteBonTypeService } from 'app/shared/services/carte-bon-type.service';\r\nimport { MatDialogRef } from '@angular/material';\r\nimport { CardType } from 'app/shared/models/cardType.model';\r\nimport { NotificationService } from 'app/shared/services/notification.service';\r\nimport { CarburantService } from 'app/shared/services/carburant.service';\r\n\r\n@Component({\r\n  selector: 'app-card-type-add',\r\n  templateUrl: './card-type-add.component.html',\r\n  styleUrls: ['./card-type-add.component.css']\r\n})\r\nexport class CardTypeAddComponent implements OnInit {\r\n\r\n  public cardType: CardType;\r\n  public width: number;\r\n  public screenHeight: number;\r\n  public screenWidth: number;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<CardTypeAddComponent>,\r\n    private cardTypeService: CarteBonTypeService,\r\n    private notifService: NotificationService,\r\n    public carburantService: CarburantService) {\r\n    this.cardType = new CardType();\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  getScreenSize(event?) {\r\n    this.screenHeight = window.innerHeight;\r\n    this.screenWidth = window.innerWidth;\r\n    if (this.screenWidth < 650) {\r\n      this.width =  1;\r\n    } else {\r\n      this.width =  2;\r\n    }\r\n  }\r\n\r\n  addCardType() {\r\n    this.cardTypeService.addCardType(this.cardType)\r\n      .subscribe(\r\n        res => {\r\n          this.cardTypeService.getCardTypesList();\r\n          this.dialogRef.close();\r\n          this.notifService.success('Carte Bon Type ajouter avec succés');\r\n        },\r\n        err => {\r\n          this.notifService.warn('Error');\r\n          console.log(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  onClose() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onClear(form: NgForm): void {\r\n    form.reset();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.carburantService.getCarburantsList();\r\n    this.getScreenSize();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvcGFyYW1ldGVycy9DYXJ0ZSBCb24vY2FyZC10eXBlLWxpc3QvY2FyZC10eXBlLWVkaXQvY2FyZC10eXBlLWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-toolbar>\\n  <span>Modifier type carte bon</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\n    <mat-icon>clear</mat-icon>\\n  </button>\\n</mat-toolbar>\\n\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\n  <div>\\n    <mat-grid-list cols=\\\"width\\\" rowHeight=\\\"100px\\\">\\n\\n      <mat-grid-tile>\\n        <input type=\\\"hidden\\\">\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Code carte Bon\\\" required type=\\\"text\\\" name=\\\"cardCode\\\"\\n            [(ngModel)]=\\\"cardType.cardCode\\\">\\n          <mat-error>code carte bon is required.</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <mat-label>Carburant</mat-label>\\n          <mat-select required name=\\\"Carburant\\\" [(ngModel)]=\\\"cardType.cardCarburant\\\">\\n            <mat-option>None</mat-option>\\n            <mat-option *ngFor=\\\"let c of carburantService.carburants\\\" [value]=\\\"c._id\\\">\\n              {{c.ref}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>Ce champ est obligatoire.</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nombre de litres\\\" required type=\\\"text\\\" name=\\\"numberOfLiters\\\"\\n            [(ngModel)]=\\\"cardType.numberOfLiters\\\">\\n          <mat-error>Nombre de litres carte bon is required.</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Description\\\" required type=\\\"text\\\" name=\\\"cardDescription\\\"\\n            [(ngModel)]=\\\"cardType.cardDescription\\\">\\n          <mat-error>description carte bon is required.</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n    </mat-grid-list>\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"angForm.pristine || angForm.invalid\\\"\\n        (click)=\\\"updateCardType()\\\">Modifier type</button>\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit, Inject, HostListener } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators, FormControl, NgForm } from '@angular/forms';\nimport { CarteBonTypeService } from '../../../../../shared/services/carte-bon-type.service';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { CardType } from 'app/shared/models/cardType.model';\nimport { NotificationService } from 'app/shared/services/notification.service';\nimport { CarburantService } from 'app/shared/services/carburant.service';\n\n\n@Component({\n  selector: 'app-card-type-edit',\n  templateUrl: './card-type-edit.component.html',\n  styleUrls: ['./card-type-edit.component.css']\n})\nexport class CardTypeEditComponent implements OnInit {\n\n  public cardType: CardType;\n  public width: number;\n  public screenHeight: number;\n  public screenWidth: number;\n\n  constructor(\n    public dialogRef: MatDialogRef<CardTypeEditComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private cardTypeService: CarteBonTypeService,\n    private notifservice: NotificationService,\n    public carburantService: CarburantService) {\n    this.cardType = data.cardType;\n  }\n\n  @HostListener('window:resize', ['$event'])\n  getScreenSize(event?) {\n    this.screenHeight = window.innerHeight;\n    this.screenWidth = window.innerWidth;\n    if (this.screenWidth < 650) {\n      this.width = 1;\n    } else {\n      this.width = 2;\n    }\n  }\n\n  updateCardType(): void {\n    this.cardTypeService.updateCardType(this.cardType._id, this.cardType)\n      .subscribe(res => {\n        this.cardTypeService.getCardTypesList();\n        this.dialogRef.close();\n        this.notifservice.success('Carte Bon type modifié avec succés');\n      },\n        err => {\n          console.log(err);\n        });\n  }\n\n  onClose() {\n    this.dialogRef.close();\n  }\n\n  onClear(form: NgForm): void {\n    form.reset();\n  }\n\n  ngOnInit() {\n    this.carburantService.getCarburantsList();\n    this.getScreenSize();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvcGFyYW1ldGVycy9DYXJ0ZSBCb24vY2FyZC10eXBlLWxpc3QvY2FyZC10eXBlLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"search-div\\\">\\n  <button mat-raised-button (click)=\\\"addCardTypeDialog()\\\">\\n    <mat-icon>add</mat-icon>Ajouter\\n  </button>\\n  <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\n    <input matInput placeholder=\\\"Search\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"search\\\" (keyup)=\\\"filter()\\\">\\n    <button *ngIf=\\\"search\\\" mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"clearSearch()\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </mat-form-field>\\n</div>\\n<div class=\\\"mat-elevation-z8\\\">\\n  <mat-table [dataSource]=\\\"cardTypeService.cardTypesMatTab\\\" matSort>\\n    <ng-container matColumnDef=\\\"cardCode\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Code</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.cardCode}}</mat-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"cardCarburant\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Carburant</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.cardCarburant}}</mat-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"numberOfLiters\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Nombre de litres</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.numberOfLiters}}</mat-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"cardDescription\\\">\\n      <mat-header-cell *matHeaderCellDef>Description</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.cardDescription}}</mat-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <mat-header-cell *matHeaderCellDef></mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\">\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"updateCardTypeDialog(row)\\\">\\n          <mat-icon>edit</mat-icon>\\n        </button>\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteCardTypeDialog(row._id, 'type carte bon')\\\">\\n          <mat-icon>delete_outline</mat-icon>\\n        </button>\\n      </mat-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"loading\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n        Loading data ...\\n      </mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"noData\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n        No data.\\n      </mat-footer-cell>\\n    </ng-container>\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':cardTypeService.cardTypesMatTab!=null}\\\">\\n    </mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\"\\n      [ngClass]=\\\"{'hide':!(cardTypeService.cardTypesMatTab!=null && cardTypeService.cardTypesMatTab.data.length==0)}\\\">\\n    </mat-footer-row>\\n  </mat-table>\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" [pageSize]=\\\"5\\\" showFirstLastButtons></mat-paginator>\\n</div>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { CarteBonTypeService } from 'app/shared/services/carte-bon-type.service';\r\nimport { MatDialog, MatSort, MatPaginator } from '@angular/material';\r\nimport { CardTypeAddComponent } from './card-type-add/card-type-add.component';\r\nimport { ConfirmDeleteComponent } from '../../../Shared/confirm-delete/confirm-delete.component';\r\nimport { CardType } from 'app/shared/models/cardType.model';\r\nimport { CardTypeEditComponent } from './card-type-edit/card-type-edit.component';\r\n\r\n@Component({\r\n  selector: 'app-card-type-list',\r\n  templateUrl: './card-type-list.component.html',\r\n  styleUrls: ['./card-type-list.component.css']\r\n})\r\nexport class CardTypeListComponent implements OnInit {\r\n\r\n  public displayedColumns: string[];\r\n  public search: string;\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  constructor(public cardTypeService: CarteBonTypeService,\r\n              private dialog: MatDialog) {\r\n    this.displayedColumns = ['cardCode', 'cardCarburant', 'numberOfLiters', 'cardDescription', 'actions'];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.cardTypeService.getCardTypesList(this.sort, this.paginator);\r\n  }\r\n\r\n  addCardTypeDialog(): void {\r\n    this.dialog.open(CardTypeAddComponent, {\r\n      panelClass: 'full-width-dialog'\r\n    });\r\n  }\r\n\r\n  deleteCardTypeDialog(id: string, msg: string): void {\r\n\r\n    this.dialog.open(ConfirmDeleteComponent, {\r\n      data: { id, msg }\r\n    });\r\n  }\r\n\r\n  updateCardTypeDialog(cardType: CardType): void {\r\n    this.dialog.open(CardTypeEditComponent, {\r\n      panelClass: 'full-width-dialog',\r\n      data: { cardType : Object.assign({}, cardType) }\r\n    });\r\n  }\r\n\r\n  filter(): void {\r\n    this.cardTypeService.cardTypesMatTab.filter = this.search.trim().toLowerCase();\r\n  }\r\n\r\n  clearSearch(): void {\r\n    this.search = '';\r\n    this.filter();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvcGFyYW1ldGVycy9iYW5rL2JhbmstbGlzdC9iYW5rLWFkZC9iYW5rLWFkZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-toolbar>\\n  <span>Ajouter Bank</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\n    <mat-icon>clear</mat-icon>\\n  </button>\\n</mat-toolbar>\\n\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\n  <div>\\n    <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Code bank\\\" required type=\\\"number\\\" name=\\\"bankCode\\\" [(ngModel)]=\\\"bank.bankCode\\\">\\n          <mat-error>Code bank est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nom bank\\\" required type=\\\"text\\\" name=\\\"bankName\\\" [(ngModel)]=\\\"bank.bankName\\\">\\n          <mat-error>Nom bank est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Code agence\\\" required type=\\\"number\\\" name=\\\"agencyCode\\\"\\n            [(ngModel)]=\\\"bank.agencyCode\\\">\\n          <mat-error>Code agence est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nom de l'agence\\\" required type=\\\"text\\\" name=\\\"agencName\\\"\\n            [(ngModel)]=\\\"bank.agencyName\\\">\\n          <mat-error>Nom du l'agence est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Comptoir\\\" type=\\\"number\\\" name=\\\"comptoir\\\" [(ngModel)]=\\\"bank.comptoir\\\">\\n          <mat-error>Comptoir est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Adress\\\" type=\\\"text\\\" name=\\\"adress\\\" [(ngModel)]=\\\"bank.adress\\\">\\n          <mat-error>Adress est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Tel\\\" type=\\\"number\\\" name=\\\"tel\\\" [(ngModel)]=\\\"bank.tel\\\">\\n          <mat-error>Tel est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nom du responsable\\\" type=\\\"text\\\" name=\\\"responsibleName\\\"\\n            [(ngModel)]=\\\"bank.responsibleName\\\">\\n          <mat-error>Nom du responsable est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"D. agrem\\\" type=\\\"text\\\" name=\\\"dAgrem\\\" [(ngModel)]=\\\"bank.dAgrem\\\">\\n          <mat-error>D. agrem est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"D. Ouv\\\" type=\\\"text\\\" name=\\\"dOuv\\\" [(ngModel)]=\\\"bank.dOuv\\\">\\n          <mat-error>D. Ouv est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"D. Ferm\\\" type=\\\"text\\\" name=\\\"dFerm\\\" [(ngModel)]=\\\"bank.dFerm\\\">\\n          <mat-error>D. Ferm est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n    </mat-grid-list>\\n    <div>\\n      <span class=\\\"error-message\\\" *ngIf=\\\"error\\\">{{errorMessage}}</span>\\n    </div>\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addBank()\\\"\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Ajouter\\n      </button>\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Bank } from 'app/shared/models/bank';\nimport { MatDialogRef } from '@angular/material';\nimport { BankService } from 'app/shared/services/bank.service';\nimport { NotificationService } from 'app/shared/services/notification.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-bank-add',\n  templateUrl: './bank-add.component.html',\n  styleUrls: ['./bank-add.component.css']\n})\nexport class BankAddComponent implements OnInit {\n\n  public bank: Bank;\n  public width: number;\n  public error: boolean;\n  public errorMessage: string;\n  public prices: number[];\n\n\n  constructor(private dialogMat: MatDialogRef<BankAddComponent>,\n              private bankService: BankService,\n              private notifService: NotificationService) {\n    this.bank = new Bank();\n    this.width = 2;\n    this.prices = [];\n  }\n\n  ngOnInit() {\n    if (document.body.clientWidth < 600) {\n      this.width = 1;\n    }\n  }\n\n  onClose(): void {\n    this.dialogMat.close();\n  }\n\n  onClear(form: NgForm): void {\n    form.reset();\n  }\n\n  addBank(): void {\n    this.bankService.addBank(this.bank).subscribe(res => {\n      this.bankService.getBanksList();\n      this.dialogMat.close();\n      this.notifService.success('Bank ajouter avec succés');\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvcGFyYW1ldGVycy9iYW5rL2JhbmstbGlzdC9iYW5rLWVkaXQvYmFuay1lZGl0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-toolbar>\\n  <span>Modifier Bank</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\n    <mat-icon>clear</mat-icon>\\n  </button>\\n</mat-toolbar>\\n\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\n  <div>\\n    <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Code bank\\\" required type=\\\"text\\\" name=\\\"bankCode\\\"\\n            [(ngModel)]=\\\"bank.bankCode\\\">\\n          <mat-error>Code bank est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nom bank\\\" required type=\\\"text\\\" name=\\\"bankName\\\"\\n            [(ngModel)]=\\\"bank.bankName\\\">\\n          <mat-error>Nom bank est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Code agence\\\" required type=\\\"text\\\" name=\\\"agencyCode\\\"\\n            [(ngModel)]=\\\"bank.agencyCode\\\">\\n          <mat-error>Code agence est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nom de l'agence\\\" required type=\\\"text\\\" name=\\\"agencName\\\"\\n            [(ngModel)]=\\\"bank.agencyName\\\">\\n          <mat-error>Nom du l'agence est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Comptoir\\\" type=\\\"number\\\" name=\\\"comptoir\\\"\\n            [(ngModel)]=\\\"bank.comptoir\\\">\\n          <mat-error>Comptoir est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Adress\\\" type=\\\"number\\\" name=\\\"adress\\\"\\n            [(ngModel)]=\\\"bank.adress\\\">\\n          <mat-error>Adress est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Tel\\\" type=\\\"number\\\" name=\\\"tel\\\"\\n            [(ngModel)]=\\\"bank.tel\\\">\\n          <mat-error>Tel est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Nom du responsable\\\" type=\\\"number\\\" name=\\\"responsibleName\\\"\\n            [(ngModel)]=\\\"bank.responsibleName\\\">\\n          <mat-error>Nom du responsable est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"D. agrem\\\" type=\\\"number\\\" name=\\\"dAgrem\\\"\\n            [(ngModel)]=\\\"bank.dAgrem\\\">\\n          <mat-error>D. agrem est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"D. Ouv\\\" type=\\\"number\\\" name=\\\"dOuv\\\"\\n            [(ngModel)]=\\\"bank.dOuv\\\">\\n          <mat-error>D. Ouv est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n      <mat-grid-tile>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"D. Ferm\\\" type=\\\"text\\\" name=\\\"dFerm\\\"\\n            [(ngModel)]=\\\"bank.dFerm\\\">\\n          <mat-error>D. Ferm est obligatoire</mat-error>\\n        </mat-form-field>\\n      </mat-grid-tile>\\n\\n    </mat-grid-list>\\n\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"updateBank()\\\"\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Modifier\\n      </button>\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\n    </div>\\n  </div>\\n</form>\\n\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Bank } from 'app/shared/models/bank';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { BankService } from 'app/shared/services/bank.service';\nimport { SessionService } from 'app/shared/services/session.service';\nimport { NotificationService } from 'app/shared/services/notification.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-bank-edit',\n  templateUrl: './bank-edit.component.html',\n  styleUrls: ['./bank-edit.component.css']\n})\nexport class BankEditComponent implements OnInit {\n\n  public bank: Bank;\n  public width: number;\n\n  constructor(public dialogRef: MatDialogRef<BankEditComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any,\n              private bankService: BankService,\n              private sessionService: SessionService,\n              private notifservice: NotificationService) {\n    this.bank = data.bank;\n    this.width = 2;\n  }\n\n  ngOnInit() {\n    if (document.body.clientWidth < 600) {\n      this.width = 1;\n    }\n  }\n\n  onClose(): void {\n    this.dialogRef.close();\n  }\n\n  onClear(form: NgForm): void {\n    form.reset();\n  }\n\n  updateBank(): void {\n    this.bankService.updateBank(this.bank._id, this.bank).subscribe(res => {\n      this.bankService.getBanksList();\n      this.dialogRef.close();\n      this.notifservice.success('Bank modifié avec succés');\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvcGFyYW1ldGVycy9iYW5rL2JhbmstbGlzdC9iYW5rLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"search-div\\\">\\n    <button mat-raised-button (click)=\\\"addBankDialog()\\\">\\n      <mat-icon>add</mat-icon>Ajouter\\n    </button>\\n    <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\n      <input matInput placeholder=\\\"Search\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"search\\\" (keyup)=\\\"filter()\\\">\\n      <button *ngIf=\\\"search\\\" mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"clearSearch()\\\">\\n        <mat-icon>close</mat-icon>\\n      </button>\\n    </mat-form-field>\\n  </div>\\n  <div class=\\\"mat-elevation-z8\\\">\\n    <mat-table [dataSource]=\\\"bankService.banksMatTab\\\" matSort>\\n      <ng-container matColumnDef=\\\"bankName\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Nom du banque</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\">{{element.bankName}}</mat-cell>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"bankCode\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Code du banque</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\">{{element.bankCode}}</mat-cell>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"agencyCode\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Code de l'agence</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\">{{element.agencyCode}}</mat-cell>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"agencyName\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Nom de l'agence</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\">{{element.agencyName}}</mat-cell>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"actions\\\">\\n        <mat-header-cell *matHeaderCellDef>\\n        </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\">\\n          <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Voir plus\\\" (click)=\\\"seeMoreDialog(row)\\\">\\n            <mat-icon>remove_red_eye</mat-icon>\\n          </button>\\n          <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Editer\\\" color=\\\"primary\\\"\\n            (click)=\\\"updateBankDialog(row)\\\">\\n            <mat-icon>edit</mat-icon>\\n          </button>\\n          <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Supprimer\\\" color=\\\"warn\\\"\\n            (click)=\\\"deleteBankDialog(row._id, 'bank')\\\">\\n            <mat-icon>delete_outline</mat-icon>\\n          </button>\\n        </mat-cell>\\n        <mat-footer-cell *matFooterCellDef></mat-footer-cell>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"loading\\\">\\n        <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n          Loading data ...\\n        </mat-footer-cell>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"noData\\\">\\n        <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n          No data.\\n        </mat-footer-cell>\\n      </ng-container>\\n      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n      <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':bankService.banksMatTab!=null}\\\">\\n      </mat-footer-row>\\n      <mat-footer-row *matFooterRowDef=\\\"['noData']\\\"\\n        [ngClass]=\\\"{'hide':!(bankService.banksMatTab!=null && bankService.banksMatTab.data.length==0)}\\\">\\n      </mat-footer-row>\\n    </mat-table>\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" [pageSize]=\\\"5\\\" showFirstLastButtons></mat-paginator>\\n  </div>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSort, MatPaginator, MatDialog } from '@angular/material';\nimport { BankService } from 'app/shared/services/bank.service';\nimport { SessionService } from 'app/shared/services/session.service';\nimport { BankAddComponent } from './bank-add/bank-add.component';\nimport { ConfirmDeleteComponent } from '@ComShared/confirm-delete/confirm-delete.component';\nimport { BankMoreDetailsComponent } from './bank-more-details/bank-more-details.component';\nimport { Bank } from 'app/shared/models/bank';\nimport { BankEditComponent } from './bank-edit/bank-edit.component';\n\n@Component({\n  selector: 'app-bank-list',\n  templateUrl: './bank-list.component.html',\n  styleUrls: ['./bank-list.component.css']\n})\nexport class BankListComponent implements OnInit {\n\n  public displayedColumns: string[];\n  public search: string;\n  screenHeight: any;\n  screenWidth: any;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(public bankService: BankService,\n              private dialog: MatDialog) {\n    this.displayedColumns = ['bankName', 'bankCode', 'agencyName', 'agencyCode', 'actions'];\n  }\n\n  ngOnInit() {\n    this.bankService.getBanksList(this.sort, this.paginator);\n  }\n\n  addBankDialog(): void {\n    this.dialog.open(BankAddComponent, {\n      panelClass: 'full-width-dialog'\n    });\n  }\n\n  deleteBankDialog(id: string, msg: string): void {\n    this.dialog.open(ConfirmDeleteComponent, {\n      data: { id, msg }\n    });\n  }\n\n  seeMoreDialog(bank): void {\n    this.dialog.open(BankMoreDetailsComponent, {\n      panelClass: 'full-width-dialog',\n      data: { bank }\n    });\n\n  }\n\n  updateBankDialog(bank: Bank): void {\n    this.dialog.open(BankEditComponent, {\n      panelClass: 'full-width-dialog',\n      data: { bank: Object.assign({}, bank) }\n    });\n  }\n\n  filter(): void {\n    this.bankService.banksMatTab.filter = this.search.trim().toLowerCase();\n  }\n\n  clearSearch(): void {\n    this.search = '';\n    this.filter();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvcGFyYW1ldGVycy9iYW5rL2JhbmstbGlzdC9iYW5rLW1vcmUtZGV0YWlscy9iYW5rLW1vcmUtZGV0YWlscy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div mat-dialog-content>\\n  <mat-list>\\n    <mat-list-item>\\n      <h4>Nom du bank: </h4>&nbsp;&nbsp;{{bank.bankName}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Code bank: </h4>&nbsp;&nbsp;{{bank.bankCode}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Code agence: </h4>&nbsp;&nbsp;{{bank.agencyCode}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Nom agence: </h4>&nbsp;&nbsp;{{bank.agencyName}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Comptoir: </h4>&nbsp;&nbsp;{{bank.comptoir}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Adress: </h4>&nbsp;&nbsp;{{bank.adress}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Tel: </h4>&nbsp;&nbsp;{{bank.tel}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>Nom du responsable: </h4>&nbsp;&nbsp;{{bank.responsibleName}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>D. agrem: </h4>&nbsp;&nbsp;{{bank.dAgrem}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>D. Ouv: </h4>&nbsp;&nbsp;{{bank.dOuv}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n    <mat-list-item>\\n      <h4>D. Ferm: </h4>&nbsp;&nbsp;{{bank.dFerm}}\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n  </mat-list>\\n</div>\\n<div mat-dialog-actions>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button mat-raised-button (click)=\\\"onNoClick()\\\" color=\\\"primary\\\">Fermer</button>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n</div>\\n\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Bank } from 'app/shared/models/bank';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-bank-more-details',\n  templateUrl: './bank-more-details.component.html',\n  styleUrls: ['./bank-more-details.component.css']\n})\nexport class BankMoreDetailsComponent implements OnInit {\n\n  public bank: Bank;\n\n  constructor(public dialogRef: MatDialogRef<BankMoreDetailsComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n      this.bank = data.bank;\n     }\n\n  ngOnInit() {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvcGFyYW1ldGVycy9jYXJidXJhbnQvYWRkLWNhcmJ1cmFudC9hZGQtY2FyYnVyYW50LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-toolbar>\\r\\n  <span>Ajouter Carburant</span>\\r\\n  <span class=\\\"fill-remaining-space\\\"></span>\\r\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\r\\n    <mat-icon>clear</mat-icon>\\r\\n  </button>\\r\\n</mat-toolbar>\\r\\n\\r\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\r\\n  <div>\\r\\n    <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"carburant\\\" (keydown.space)=\\\"$event.preventDefault()\\\" required type=\\\"text\\\" name=\\\"ref\\\"\\r\\n            [(ngModel)]=\\\"carburant.ref\\\">\\r\\n          <mat-error>Ce champ est obligatoire!</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"description\\\" required type=\\\"text\\\" name=\\\"description\\\"\\r\\n            [(ngModel)]=\\\"carburant.description\\\">\\r\\n          <mat-error>Ce champ est obligatoire!</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n      \\r\\n    </mat-grid-list>\\r\\n\\r\\n    \\r\\n    <div class=\\\"button-row\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addCarburant()\\\"\\r\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Ajouter\\r\\n      </button>\\r\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Annuler</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Carburant } from 'app/shared/models/carburant';\r\nimport { MatSort, MatPaginator, MatDialogRef } from '@angular/material';\r\nimport { CarburantService } from 'app/shared/services/carburant.service';\r\nimport { NotificationService } from 'app/shared/services/notification.service';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-add-carburant',\r\n  templateUrl: './add-carburant.component.html',\r\n  styleUrls: ['./add-carburant.component.css']\r\n})\r\nexport class AddCarburantComponent implements OnInit {\r\n\r\n  public carburant: Carburant;\r\n  public width: number;\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  constructor(\r\n    private dialogMat: MatDialogRef<AddCarburantComponent>,\r\n    private carburantService: CarburantService,\r\n    private notifService: NotificationService\r\n  ) {\r\n    this.carburant = new Carburant();\r\n    this.width = 2;\r\n   }\r\n\r\n  ngOnInit() {\r\n    if (document.body.clientWidth < 600) {\r\n      this.width = 1;\r\n    }\r\n  }\r\n\r\n  onClose(): void {\r\n    this.dialogMat.close();\r\n  }\r\n\r\n  onClear(form: NgForm): void {\r\n    form.reset();\r\n  }\r\n\r\n  addCarburant(): void {\r\n    console.log(this.carburant);\r\n    this.carburantService.addCarburant(this.carburant).subscribe(res => {\r\n      this.carburantService.getCarburantsList();\r\n      this.dialogMat.close();\r\n      this.notifService.success('Carburant ajouter avec succés');\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvcGFyYW1ldGVycy9jYXJidXJhbnQvY2FyYnVyYW50LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"search-div\\\">\\r\\n  <button mat-raised-button (click)=\\\"addCarburantDialog()\\\">\\r\\n    <mat-icon>add</mat-icon>Ajouter\\r\\n  </button>\\r\\n  <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\r\\n    <input matInput placeholder=\\\"Search\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"search\\\" (keyup)=\\\"filter()\\\">\\r\\n    <button *ngIf=\\\"search\\\" mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"clearSearch()\\\">\\r\\n      <mat-icon>close</mat-icon>\\r\\n    </button>\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n<div class=\\\"mat-elevation-z8\\\">\\r\\n  <mat-table [dataSource]=\\\"carburantService.carburantsMatTab\\\" matSort>\\r\\n    <ng-container matColumnDef=\\\"carburant\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Carburant</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.ref}}</mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"description\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Description</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.description}}</mat-cell>\\r\\n    </ng-container>\\r\\n    \\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <mat-header-cell *matHeaderCellDef>\\r\\n      </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let row\\\" [ngClass]=\\\"{'hide':row.ref === 'NA'}\\\">\\r\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Editer\\\" color=\\\"primary\\\" (click)=\\\"updateCarburantDialog(row)\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </button>\\r\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Supprimer\\\" color=\\\"warn\\\"\\r\\n          (click)=\\\"deleteCarburantDialog(row._id, 'carburant')\\\">\\r\\n          <mat-icon>delete_outline</mat-icon>\\r\\n        </button>\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"loading\\\">\\r\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\r\\n        Loading data ...\\r\\n      </mat-footer-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"noData\\\">\\r\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\r\\n        No data.\\r\\n      </mat-footer-cell>\\r\\n    </ng-container>\\r\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':carburantService.carburantsMatTab!=null}\\\">\\r\\n    </mat-footer-row>\\r\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\"\\r\\n      [ngClass]=\\\"{'hide':!(carburantService.carburantsMatTab!=null && carburantService.carburantsMatTab.data.length==0)}\\\">\\r\\n    </mat-footer-row>\\r\\n  </mat-table>\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" [pageSize]=\\\"5\\\" showFirstLastButtons></mat-paginator>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort, MatPaginator, MatDialog } from '@angular/material';\r\nimport { CarburantService } from 'app/shared/services/carburant.service';\r\nimport { AddCarburantComponent } from './add-carburant/add-carburant.component';\r\nimport { ConfirmDeleteComponent } from '@ComShared/confirm-delete/confirm-delete.component';\r\nimport { Carburant } from 'app/shared/models/carburant';\r\nimport { UpdateCarburantComponent } from './update-carburant/update-carburant.component';\r\nimport { PrixCarburantListComponent } from '@ComCarburant/prix-carburant-list.component';\r\nimport { CiterneListComponent } from '@ComCiterne/citerne-list.component';\r\n\r\n@Component({\r\n  providers: [PrixCarburantListComponent, CiterneListComponent],\r\n  selector: 'app-carburant',\r\n  templateUrl: './carburant.component.html',\r\n  styleUrls: ['./carburant.component.css']\r\n})\r\nexport class CarburantComponent implements OnInit {\r\n  public displayedColumns: string[];\r\n  public search: string;\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  constructor(public carburantService: CarburantService,\r\n              private dialog: MatDialog,\r\n              private citernecomp: CiterneListComponent,\r\n              private carburantcomp: PrixCarburantListComponent ) {\r\n    this.displayedColumns = ['carburant', 'description', 'actions'];\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.carburantService.getCarburantsList(this.sort, this.paginator);\r\n  }\r\n\r\n  addCarburantDialog(): void {\r\n    this.dialog.open(AddCarburantComponent, {\r\n      panelClass: 'full-width-dialog'\r\n    });\r\n  }\r\n\r\n  deleteCarburantDialog(id: string, msg: string): void {\r\n    this.dialog.afterAllClosed.subscribe(() => {\r\n      this.citernecomp.ngOnInit();\r\n      this.carburantcomp.ngOnInit();\r\n    });\r\n    this.dialog.open(ConfirmDeleteComponent, {\r\n      data: { id, msg }\r\n    });\r\n  }\r\n\r\n  updateCarburantDialog(carburant: Carburant): void {\r\n    this.dialog.afterAllClosed.subscribe(() => {\r\n      this.citernecomp.ngOnInit();\r\n      this.carburantcomp.ngOnInit();\r\n    });\r\n    this.dialog.open(UpdateCarburantComponent, {\r\n      panelClass: 'full-width-dialog',\r\n      data: { carburant: Object.assign({}, carburant) }\r\n    });\r\n  }\r\n\r\n  filter(): void {\r\n    this.carburantService.carburantsMatTab.filter = this.search.trim().toLowerCase();\r\n  }\r\n\r\n  clearSearch(): void {\r\n    this.search = '';\r\n    this.filter();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvcGFyYW1ldGVycy9jYXJidXJhbnQvdXBkYXRlLWNhcmJ1cmFudC91cGRhdGUtY2FyYnVyYW50LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-toolbar>\\r\\n  <span>Modifier Carburant</span>\\r\\n  <span class=\\\"fill-remaining-space\\\"></span>\\r\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\r\\n    <mat-icon>clear</mat-icon>\\r\\n  </button>\\r\\n</mat-toolbar>\\r\\n\\r\\n\\r\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\r\\n  <div>\\r\\n    <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\r\\n\\r\\n      \\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"ref\\\" (keydown.space)=\\\"$event.preventDefault()\\\" required type=\\\"text\\\" name=\\\"ref\\\"\\r\\n            [(ngModel)]=\\\"carburant.ref\\\">\\r\\n          <mat-error>Ce champ est obligatoire!</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"description\\\" required type=\\\"text\\\" name=\\\"description\\\"\\r\\n            [(ngModel)]=\\\"carburant.description\\\">\\r\\n          <mat-error>Ce champ est obligatoire!</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n    </mat-grid-list>\\r\\n\\r\\n    <div class=\\\"button-row\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"updateCarburant()\\\"\\r\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Modifier\\r\\n      </button>\\r\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Annuler</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { Carburant } from 'app/shared/models/carburant';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { CarburantService } from 'app/shared/services/carburant.service';\r\nimport { NotificationService } from 'app/shared/services/notification.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { PrixCarburantListComponent } from '@ComCarburant/prix-carburant-list.component';\r\nimport { CiterneListComponent } from '@ComCiterne/citerne-list.component';\r\n\r\n@Component({\r\n  providers: [PrixCarburantListComponent, CiterneListComponent],\r\n  selector: 'app-update-carburant',\r\n  templateUrl: './update-carburant.component.html',\r\n  styleUrls: ['./update-carburant.component.css']\r\n})\r\nexport class UpdateCarburantComponent implements OnInit {\r\n\r\n  public carburant: Carburant;\r\n  public width: number;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<UpdateCarburantComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private carburantService: CarburantService,\r\n    private notifservice: NotificationService,\r\n    private comp: PrixCarburantListComponent,\r\n    private compciterne: CiterneListComponent) {\r\n    this.carburant = data.carburant;\r\n    this.width = 2;\r\n   }\r\n\r\n  ngOnInit() {\r\n    if (document.body.clientWidth < 600) {\r\n      this.width = 1;\r\n    }\r\n  }\r\n\r\n  onClose(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onClear(form: NgForm): void {\r\n    form.reset();\r\n  }\r\n\r\n  updateCarburant(): void {\r\n    this.carburantService.updateCarburant(this.carburant._id, this.carburant).subscribe(res => {\r\n      this.carburantService.getCarburantsList();\r\n      this.dialogRef.close();\r\n      this.notifservice.success('Carburant modifié avec succés');\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n    this.comp.ngOnInit();\r\n    this.compciterne.ngOnInit();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvcGFyYW1ldGVycy9jaXRlcm5lL2NpdGVybmUtbGlzdC9hZGQtY2l0ZXJuZS9hZGQtY2l0ZXJuZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-toolbar>\\r\\n  <span>Ajouter Citerne</span>\\r\\n  <span class=\\\"fill-remaining-space\\\"></span>\\r\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\r\\n    <mat-icon>clear</mat-icon>\\r\\n  </button>\\r\\n</mat-toolbar>\\r\\n\\r\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\r\\n  <div>\\r\\n    <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"code\\\" (keydown.space)=\\\"$event.preventDefault()\\\" required type=\\\"text\\\" name=\\\"code\\\"\\r\\n            [(ngModel)]=\\\"citerne.code\\\">\\r\\n          <mat-error>Ce champ est obligatoire.</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"libelle\\\" required type=\\\"text\\\" name=\\\"libelle\\\"\\r\\n            [(ngModel)]=\\\"citerne.libelle\\\">\\r\\n          <mat-error>Ce champ est obligatoire.</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"capacite\\\" required type=\\\"number\\\" name=\\\"capacite\\\" [(ngModel)]=\\\"citerne.capacite\\\">\\r\\n          <mat-error>Ce champ est obligatoire.</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Type carburant</mat-label>\\r\\n          <mat-select required [(ngModel)]=\\\"citerne.carburant\\\" name=\\\"carburant\\\">\\r\\n            <mat-option>None</mat-option>\\r\\n            <mat-option *ngFor=\\\"let p of carburantService.carburants\\\" [value]=\\\"p._id\\\">{{p.ref}}</mat-option>\\r\\n          </mat-select>\\r\\n\\r\\n          <mat-error>Ce champ est obligatoire.</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"tolerance\\\" required type=\\\"number\\\" name=\\\"tolerance\\\" [(ngModel)]=\\\"citerne.tolerance\\\">\\r\\n          <mat-error>Ce champ est obligatoire.</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"stock\\\" required type=\\\"number\\\" name=\\\"stock\\\" [(ngModel)]=\\\"citerne.stock\\\">\\r\\n          <mat-error>Ce champ est obligatoire.</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"ordre\\\" required type=\\\"number\\\" name=\\\"ordre\\\" [(ngModel)]=\\\"citerne.ordre\\\">\\r\\n          <mat-error>Ce champ est obligatoire.</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Etat</mat-label>\\r\\n          <mat-select required [(ngModel)]=\\\"citerne.etat\\\" name=\\\"etat\\\">\\r\\n            <mat-option value=\\\"actif\\\">Actif</mat-option>\\r\\n            <mat-option value=\\\"non actif\\\">Non Actif</mat-option>\\r\\n          </mat-select>\\r\\n\\r\\n          <mat-error>Ce champ est obligatoire.</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n      \\r\\n    </mat-grid-list>\\r\\n\\r\\n    \\r\\n    <div class=\\\"button-row\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addCiterne()\\\"\\r\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Ajouter\\r\\n      </button>\\r\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Annuler</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Citerne } from 'app/shared/models/citerne.model';\r\nimport { MatDialogRef, MatSort, MatPaginator } from '@angular/material';\r\nimport { NgForm } from '@angular/forms';\r\nimport { NotificationService } from 'app/shared/services/notification.service';\r\nimport { CiterneService } from 'app/shared/services/citerne.service';\r\nimport { CarburantService } from 'app/shared/services/carburant.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-citerne',\r\n  templateUrl: './add-citerne.component.html',\r\n  styleUrls: ['./add-citerne.component.css']\r\n})\r\nexport class AddCiterneComponent implements OnInit {\r\n\r\n\r\n  public citerne: Citerne;\r\n  public width: number;\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  constructor(\r\n    private dialogMat: MatDialogRef<AddCiterneComponent>,\r\n    private citerneService: CiterneService,\r\n    private notifService: NotificationService,\r\n    public carburantService: CarburantService) {\r\n    this.citerne = new Citerne();\r\n    this.width = 2;\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (document.body.clientWidth < 600) {\r\n      this.width = 1;\r\n    }\r\n    this.carburantService.getCarburantsList();\r\n  }\r\n  onClose(): void {\r\n    this.dialogMat.close();\r\n  }\r\n\r\n  onClear(form: NgForm): void {\r\n    form.reset();\r\n  }\r\n\r\n  addCiterne(): void {\r\n    console.log(this.citerne);\r\n    this.citerneService.addCiterne(this.citerne).subscribe(res => {\r\n      this.citerneService.getCiternesList();\r\n      this.dialogMat.close();\r\n      this.notifService.success('Citerne ajouter avec succés');\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvcGFyYW1ldGVycy9jaXRlcm5lL2NpdGVybmUtbGlzdC9jaXRlcm5lLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"search-div\\\">\\r\\n  <button mat-raised-button (click)=\\\"addCiterneDialog()\\\">\\r\\n    <mat-icon>add</mat-icon>Ajouter\\r\\n  </button>\\r\\n  <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\r\\n    <input matInput placeholder=\\\"Search\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"search\\\" (keyup)=\\\"filter()\\\">\\r\\n    <button *ngIf=\\\"search\\\" mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"clearSearch()\\\">\\r\\n      <mat-icon>close</mat-icon>\\r\\n    </button>\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n<div class=\\\"mat-elevation-z8\\\">\\r\\n  <mat-table [dataSource]=\\\"citerneService.citernesMatTab\\\" matSort>\\r\\n    <ng-container matColumnDef=\\\"code\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Code</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.code}}</mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"libelle\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Libelle</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.libelle}}</mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"carburant\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Carburant</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.carburant}}</mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"capacite\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Capacité</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.capacite}}</mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <mat-header-cell *matHeaderCellDef>\\r\\n      </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let row\\\">\\r\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Voir plus\\\" (click)=\\\"seeMoreDialog(row)\\\">\\r\\n          <mat-icon>remove_red_eye</mat-icon>\\r\\n        </button>\\r\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Editer\\\" color=\\\"primary\\\" (click)=\\\"updateCiterneDialog(row)\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </button>\\r\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Supprimer\\\" color=\\\"warn\\\"\\r\\n          (click)=\\\"deleteCiterneDialog(row._id, 'citerne')\\\">\\r\\n          <mat-icon>delete_outline</mat-icon>\\r\\n        </button>\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"loading\\\">\\r\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\r\\n        Loading data ...\\r\\n      </mat-footer-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"noData\\\">\\r\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\r\\n        No data.\\r\\n      </mat-footer-cell>\\r\\n    </ng-container>\\r\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':citerneService.citernesMatTab!=null}\\\">\\r\\n    </mat-footer-row>\\r\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\"\\r\\n      [ngClass]=\\\"{'hide':!(citerneService.citernesMatTab!=null && citerneService.citernesMatTab.data.length==0)}\\\">\\r\\n    </mat-footer-row>\\r\\n  </mat-table>\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" [pageSize]=\\\"5\\\" showFirstLastButtons></mat-paginator>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog, MatSort, MatPaginator } from '@angular/material';\r\nimport { AddCiterneComponent } from './add-citerne/add-citerne.component';\r\nimport { ConfirmDeleteComponent } from '../../../Shared/confirm-delete/confirm-delete.component';\r\nimport { UpdateCiterneComponent } from './update-citerne/update-citerne.component';\r\nimport { Citerne } from 'app/shared/models/citerne.model';\r\nimport { CiterneService } from 'app/shared/services/citerne.service';\r\nimport { MoreCiterneDetailsComponent } from './more-citerne-details/more-citerne-details.component';\r\nimport { CarburantService } from 'app/shared/services/carburant.service';\r\nimport { IndexListComponent } from '@ComIndex/index-list.component';\r\nimport { IndexService } from 'app/shared/services/index.service';\r\nimport { Index } from 'app/shared/models/Index.model';\r\n\r\n@Component({\r\n  selector: 'app-citerne-list',\r\n  templateUrl: './citerne-list.component.html',\r\n  styleUrls: ['./citerne-list.component.css'],\r\n  providers: [IndexListComponent]\r\n})\r\nexport class CiterneListComponent implements OnInit {\r\n\r\n  public displayedColumns: string[];\r\n  public search: string;\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  constructor(public citerneService: CiterneService,\r\n              private dialog: MatDialog,\r\n              private carburantService: CarburantService,\r\n              private indexService: IndexService,\r\n              private comp: IndexListComponent) {\r\n    this.displayedColumns = ['code', 'libelle', 'carburant', 'capacite', 'actions'];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.citerneService.getCiternesList(this.sort, this.paginator);\r\n  }\r\n\r\n  seeMoreDialog(citerne): void {\r\n    this.dialog.open(MoreCiterneDetailsComponent, {\r\n      panelClass: 'full-width-dialog',\r\n      height: '500px',\r\n      data: { citerne }\r\n    });\r\n\r\n  }\r\n\r\n  addCiterneDialog(): void {\r\n    this.dialog.open(AddCiterneComponent, {\r\n      panelClass: 'full-width-dialog'\r\n    });\r\n  }\r\n\r\n  deleteCiterneDialog(id: string, msg: string): void {\r\n    this.dialog.afterAllClosed.subscribe(() => {\r\n      this.comp.ngOnInit();\r\n    });\r\n    this.dialog.open(ConfirmDeleteComponent, {\r\n      data: { id, msg }\r\n    });\r\n  }\r\n\r\n  updateCiterneDialog(citerne: Citerne): void {\r\n    let ref: string;\r\n    ref = citerne.carburant;\r\n    this.carburantService.getByRef(ref).subscribe(res => {\r\n      citerne.carburant = res._id;\r\n      this.dialog.open(UpdateCiterneComponent, {\r\n        panelClass: 'full-width-dialog',\r\n        data: { citerne: Object.assign({}, citerne) }\r\n      });\r\n      citerne.carburant = ref;\r\n    });\r\n  }\r\n\r\n  filter(): void {\r\n    this.citerneService.citernesMatTab.filter = this.search.trim().toLowerCase();\r\n  }\r\n\r\n  clearSearch(): void {\r\n    this.search = '';\r\n    this.filter();\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvcGFyYW1ldGVycy9jaXRlcm5lL2NpdGVybmUtbGlzdC9tb3JlLWNpdGVybmUtZGV0YWlscy9tb3JlLWNpdGVybmUtZGV0YWlscy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div mat-dialog-content>\\r\\n  <mat-list>\\r\\n      <mat-list-item><h4>Tolérance : </h4>&nbsp;&nbsp;{{citerne.tolerance}}</mat-list-item>\\r\\n      <mat-divider></mat-divider>\\r\\n      <mat-list-item><h4>Stock : </h4>&nbsp;&nbsp;{{citerne.stock}}</mat-list-item>\\r\\n      <mat-divider></mat-divider>\\r\\n      <mat-list-item><h4>Ordre : </h4>&nbsp;&nbsp;{{citerne.ordre}}</mat-list-item>\\r\\n      <mat-divider></mat-divider>\\r\\n      <mat-list-item><h4>Etat : </h4>&nbsp;&nbsp;{{citerne.etat}}</mat-list-item>\\r\\n      <mat-divider></mat-divider>\\r\\n      \\r\\n  </mat-list>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-raised-button (click)=\\\"onNoClick()\\\" color=\\\"primary\\\">Fermer</button>\\r\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Citerne } from 'app/shared/models/citerne.model';\r\n\r\n@Component({\r\n  selector: 'app-more-citerne-details',\r\n  templateUrl: './more-citerne-details.component.html',\r\n  styleUrls: ['./more-citerne-details.component.css']\r\n})\r\nexport class MoreCiterneDetailsComponent implements OnInit {\r\n\r\n  public citerne: Citerne;\r\n  constructor(public dialogRef: MatDialogRef<MoreCiterneDetailsComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: any) {\r\n                this.citerne = data.citerne;\r\n              }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvcGFyYW1ldGVycy9jaXRlcm5lL2NpdGVybmUtbGlzdC91cGRhdGUtY2l0ZXJuZS91cGRhdGUtY2l0ZXJuZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-toolbar>\\r\\n  <span>Modifier Citerne</span>\\r\\n  <span class=\\\"fill-remaining-space\\\"></span>\\r\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\r\\n    <mat-icon>clear</mat-icon>\\r\\n  </button>\\r\\n</mat-toolbar>\\r\\n\\r\\n\\r\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\r\\n  <div>\\r\\n    <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\r\\n\\r\\n      \\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"code\\\" (keydown.space)=\\\"$event.preventDefault()\\\" required type=\\\"text\\\" name=\\\"code\\\"\\r\\n            [(ngModel)]=\\\"citerne.code\\\">\\r\\n          <mat-error>Ce champ est obligatoire.</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"libelle\\\" required type=\\\"text\\\" name=\\\"libelle\\\"\\r\\n            [(ngModel)]=\\\"citerne.libelle\\\">\\r\\n          <mat-error>Ce champ est obligatoire.</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"capacite\\\" required type=\\\"number\\\" name=\\\"capacite\\\" [(ngModel)]=\\\"citerne.capacite\\\">\\r\\n          <mat-error>Ce champ est obligatoire.</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Carburant</mat-label>\\r\\n          <mat-select required [(ngModel)]=\\\"citerne.carburant\\\" name=\\\"carburant\\\">\\r\\n            <mat-option>None</mat-option>\\r\\n            <mat-option *ngFor=\\\"let p of carburantService.carburants\\\" [value]=\\\"p._id\\\">{{p.ref}}</mat-option>\\r\\n          </mat-select>\\r\\n\\r\\n          <mat-error>Ce champ est obligatoire.</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"tolerance\\\" required type=\\\"number\\\" name=\\\"tolerance\\\" [(ngModel)]=\\\"citerne.tolerance\\\">\\r\\n          <mat-error>Ce champ est obligatoire.</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"stock\\\" required type=\\\"number\\\" name=\\\"stock\\\" [(ngModel)]=\\\"citerne.stock\\\">\\r\\n          <mat-error>Ce champ est obligatoire.</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"ordre\\\" required type=\\\"number\\\" name=\\\"ordre\\\" [(ngModel)]=\\\"citerne.ordre\\\">\\r\\n          <mat-error>Ce champ est obligatoire.</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Etat</mat-label>\\r\\n          <mat-select required [(ngModel)]=\\\"citerne.etat\\\" name=\\\"etat\\\">\\r\\n            <mat-option value=\\\"actif\\\">Actif</mat-option>\\r\\n            <mat-option value=\\\"non actif\\\">Non Actif</mat-option>\\r\\n          </mat-select>\\r\\n\\r\\n          <mat-error>Ce champ est obligatoire.</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n    </mat-grid-list>\\r\\n\\r\\n    <div class=\\\"button-row\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"updateCiterne()\\\"\\r\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Modifier\\r\\n      </button>\\r\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Annuler</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { Citerne } from 'app/shared/models/citerne.model';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { CiterneService } from 'app/shared/services/citerne.service';\r\nimport { NotificationService } from 'app/shared/services/notification.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { CarburantService } from 'app/shared/services/carburant.service';\r\nimport { IndexListComponent } from '@ComIndex/index-list.component';\r\nimport { IndexService } from 'app/shared/services/index.service';\r\nimport { Index } from 'app/shared/models/Index.model';\r\n\r\n@Component({\r\n  providers: [IndexListComponent],\r\n  selector: 'app-update-citerne',\r\n  templateUrl: './update-citerne.component.html',\r\n  styleUrls: ['./update-citerne.component.css']\r\n})\r\nexport class UpdateCiterneComponent implements OnInit {\r\n\r\n  public citerne: Citerne;\r\n  public width: number;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<UpdateCiterneComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private citerneService: CiterneService,\r\n    private indexService: IndexService,\r\n    private notifservice: NotificationService,\r\n    public carburantService: CarburantService,\r\n    private comp: IndexListComponent) {\r\n    this.citerne = data.citerne;\r\n    this.width = 2;\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (document.body.clientWidth < 600) {\r\n      this.width = 1;\r\n    }\r\n    this.carburantService.getCarburantsList();\r\n  }\r\n  onClose(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onClear(form: NgForm): void {\r\n    form.reset();\r\n  }\r\n\r\n  updateCiterne(): void {\r\n    this.citerneService.updateCiterne(this.citerne._id, this.citerne).subscribe(data => {\r\n      this.citerneService.getCiternesList();\r\n      this.indexService.getIndexByCiterne(this.citerne._id).subscribe(res => {\r\n        if (res.length !== 0) {\r\n          res.forEach((element: Index) => {\r\n            element.carburant = this.citerne.carburant;\r\n            this.indexService.updateIndex(element._id, element).subscribe(update => {\r\n               this.comp.ngOnInit();\r\n            });\r\n          });\r\n        }\r\n      });\r\n      this.dialogRef.close();\r\n      this.notifservice.success('Citerne modifié avec succés');\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvcGFyYW1ldGVycy9jbGllbnQvY2xpZW50LWxpc3QvYWRkLWNsaWVudC9hZGQtY2xpZW50LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-toolbar>\\r\\n  <span>Ajouter Client</span>\\r\\n  <span class=\\\"fill-remaining-space\\\"></span>\\r\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\r\\n    <mat-icon>clear</mat-icon>\\r\\n  </button>\\r\\n</mat-toolbar>\\r\\n\\r\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\r\\n  <div>\\r\\n    <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Matricule Fiscale\\\" required type=\\\"text\\\" name=\\\"matFisc\\\"\\r\\n            [(ngModel)]=\\\"client.matFisc\\\">\\r\\n          <mat-error>Matricule Fiscale est obligatoire</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Nom\\\" required type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"client.name\\\">\\r\\n          <mat-error>Nom est obligatoire</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Numéro du client (4 chiffres)\\\" required type=\\\"text\\\" maxlength=\\\"4\\\" name=\\\"number\\\"\\r\\n            [(ngModel)]=\\\"client.number\\\">\\r\\n          <mat-error>Numéro du client est obligatoire</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Email\\\" required email type=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"client.email\\\"\\r\\n            #email=\\\"ngModel\\\">\\r\\n          <mat-error *ngIf=\\\"email.errors?.required\\\">Email est obligatoire</mat-error>\\r\\n          <mat-error *ngIf=\\\"email.errors?.email\\\">Email Invalide</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Type\\\" required type=\\\"text\\\" name=\\\"type\\\" [(ngModel)]=\\\"client.type\\\">\\r\\n          <mat-error>Type est obligatoire</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Select an option</mat-label>\\r\\n          <mat-select required [(ngModel)]=\\\"client.state\\\" name=\\\"state\\\">\\r\\n            <mat-option>None</mat-option>\\r\\n            <mat-option value=\\\"actif\\\">Actif</mat-option>\\r\\n            <mat-option value=\\\"non actif\\\">Non Actif</mat-option>\\r\\n          </mat-select>\\r\\n\\r\\n          <mat-error>Etat est obligatoire</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Téléphone\\\" required type=\\\"number\\\" maxlength=\\\"8\\\" name=\\\"phone\\\"\\r\\n            [(ngModel)]=\\\"client.phone\\\">\\r\\n          <mat-error>Téléphone est obligatoire</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Fax\\\" required type=\\\"number\\\" maxlength=\\\"8\\\" name=\\\"fax\\\" [(ngModel)]=\\\"client.fax\\\">\\r\\n          <mat-error>Fax est obligatoire</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Plafond Crédit\\\" required type=\\\"number\\\" min=\\\"0\\\" name=\\\"plafondCredit\\\"\\r\\n            [(ngModel)]=\\\"client.plafondCredit\\\">\\r\\n          <mat-error>Plafond Crédit est obligatoire</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Ville\\\" required type=\\\"text\\\" name=\\\"city\\\" [(ngModel)]=\\\"client.address.city\\\">\\r\\n          <mat-error>Ville est obligatoire</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Code Postal\\\" required type=\\\"number\\\" min=\\\"0\\\" maxlength=\\\"5\\\" name=\\\"postal\\\"\\r\\n            [(ngModel)]=\\\"client.address.postal\\\">\\r\\n          <mat-error>Code Postal est obligatoire</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Region\\\" required type=\\\"text\\\" name=\\\"region\\\" [(ngModel)]=\\\"client.region\\\">\\r\\n          <mat-error>Region est obligatoire</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n    </mat-grid-list>\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"button-row\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addClient()\\\"\\r\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Ajouter\\r\\n      </button>\\r\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Client } from 'app/shared/models/client.model';\r\nimport { MatDialogRef } from '@angular/material';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ClientService } from 'app/shared/services/client.service';\r\nimport { NotificationService } from 'app/shared/services/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-add-client',\r\n  templateUrl: './add-client.component.html',\r\n  styleUrls: ['./add-client.component.css']\r\n})\r\nexport class AddClientComponent implements OnInit {\r\n\r\n  public client: Client;\r\n  public width: number;\r\n\r\n  constructor(private dialogMat: MatDialogRef<AddClientComponent>,\r\n              private clientService: ClientService,\r\n              private notifService: NotificationService) {\r\n    this.client = new Client();\r\n    this.width = 2;\r\n  }\r\n\r\n  ngOnInit() {\r\n    if ( document.body.clientWidth < 600 ) {\r\n      this.width = 1;\r\n    }\r\n  }\r\n\r\n  onClose(): void {\r\n    this.dialogMat.close();\r\n  }\r\n\r\n  onClear(form: NgForm): void {\r\n    form.reset();\r\n  }\r\n\r\n  addClient(): void {\r\n    this.clientService.addClient(this.client).subscribe(res => {\r\n      this.clientService.getClientsList();\r\n      this.dialogMat.close();\r\n      this.notifService.success('Client ajouter avec succés');\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"@media(max-width: 400px){\\r\\n    .position {\\r\\n      margin: 0;\\r\\n      padding: 0;\\r\\n      width: 30px;\\r\\n      height: 30px;\\r\\n    }\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQ29tcG9uZW50cy9wYXJhbWV0ZXJzL2NsaWVudC9jbGllbnQtbGlzdC9jbGllbnQtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0k7TUFDRSxTQUFTO01BQ1QsVUFBVTtNQUNWLFdBQVc7TUFDWCxZQUFZO0lBQ2Q7QUFDSiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvcGFyYW1ldGVycy9jbGllbnQvY2xpZW50LWxpc3QvY2xpZW50LWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBtZWRpYShtYXgtd2lkdGg6IDQwMHB4KXtcclxuICAgIC5wb3NpdGlvbiB7XHJcbiAgICAgIG1hcmdpbjogMDtcclxuICAgICAgcGFkZGluZzogMDtcclxuICAgICAgd2lkdGg6IDMwcHg7XHJcbiAgICAgIGhlaWdodDogMzBweDtcclxuICAgIH1cclxufVxyXG4iXX0= */\"","module.exports = \"<!--<app-card-type-add></app-card-type-add>-->\\r\\n<div class=\\\"search-div\\\">\\r\\n  <button mat-raised-button (click)=\\\"addClientDialog()\\\">\\r\\n    <mat-icon>add</mat-icon>Ajouter\\r\\n  </button>\\r\\n  <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\r\\n    <input matInput placeholder=\\\"Search\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"search\\\" (keyup)=\\\"filter()\\\">\\r\\n    <button *ngIf=\\\"search\\\" mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"clearSearch()\\\">\\r\\n      <mat-icon>close</mat-icon>\\r\\n    </button>\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n<div class=\\\"mat-elevation-z8\\\">\\r\\n  <mat-table [dataSource]=\\\"clientService.clientsMatTab\\\" matSort>\\r\\n    <ng-container matColumnDef=\\\"number\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Numéro</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.number}}</mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Nom</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.name}}</mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"matFisc\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Matricule Fiscale</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.matFisc}}</mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"state\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Etat</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.state}}</mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <mat-header-cell *matHeaderCellDef>\\r\\n      </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let row\\\">\\r\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Voir plus\\\" (click)=\\\"seeMoreDialog(row)\\\">\\r\\n          <mat-icon>remove_red_eye</mat-icon>\\r\\n        </button>\\r\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Editer\\\" color=\\\"primary\\\" (click)=\\\"updateClientDialog(row)\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </button>\\r\\n        <button class=\\\"position\\\" mat-icon-button matTooltip=\\\"Supprimer\\\" color=\\\"warn\\\"\\r\\n          (click)=\\\"deleteClientDialog(row._id, 'client')\\\">\\r\\n          <mat-icon>delete_outline</mat-icon>\\r\\n        </button>\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"loading\\\">\\r\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\r\\n        Loading data ...\\r\\n      </mat-footer-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"noData\\\">\\r\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\r\\n        No data.\\r\\n      </mat-footer-cell>\\r\\n    </ng-container>\\r\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':clientService.clientsMatTab!=null}\\\">\\r\\n    </mat-footer-row>\\r\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\"\\r\\n      [ngClass]=\\\"{'hide':!(clientService.clientsMatTab!=null && clientService.clientsMatTab.data.length==0)}\\\">\\r\\n    </mat-footer-row>\\r\\n  </mat-table>\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" [pageSize]=\\\"5\\\" showFirstLastButtons></mat-paginator>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ClientService } from 'app/shared/services/client.service';\r\nimport { MatDialog, MatSort, MatPaginator } from '@angular/material';\r\nimport { MoreDetailsComponent } from './more-details/more-details.component';\r\nimport { AddClientComponent } from './add-client/add-client.component';\r\nimport { ConfirmDeleteComponent } from '../../../Shared/confirm-delete/confirm-delete.component';\r\nimport { Client } from 'app/shared/models/client.model';\r\nimport { UpdateClientComponent } from './update-client/update-client.component';\r\n\r\n@Component({\r\n  selector: 'app-client-list',\r\n  templateUrl: './client-list.component.html',\r\n  styleUrls: ['./client-list.component.css']\r\n})\r\nexport class ClientListComponent implements OnInit {\r\n\r\n  public displayedColumns: string[];\r\n  public search: string;\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  constructor(public clientService: ClientService, private dialog: MatDialog) {\r\n    this.displayedColumns = ['number', 'name', 'matFisc', 'state', 'actions'];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.clientService.getClientsList(this.sort, this.paginator);\r\n  }\r\n\r\n  seeMoreDialog(client): void {\r\n    this.dialog.open(MoreDetailsComponent, {\r\n      panelClass: 'full-width-dialog',\r\n      data: { client }\r\n    });\r\n\r\n  }\r\n\r\n  addClientDialog(): void {\r\n    this.dialog.open(AddClientComponent, {\r\n      panelClass: 'full-width-dialog'\r\n    });\r\n  }\r\n\r\n  deleteClientDialog(id: string, msg: string): void {\r\n\r\n    this.dialog.open(ConfirmDeleteComponent, {\r\n      data: { id, msg }\r\n    });\r\n  }\r\n\r\n  updateClientDialog(client: Client): void {\r\n    this.dialog.open(UpdateClientComponent, {\r\n      panelClass: 'full-width-dialog',\r\n      data: { client: Object.assign({}, client) }\r\n    });\r\n  }\r\n\r\n  filter(): void {\r\n    this.clientService.clientsMatTab.filter = this.search.trim().toLowerCase();\r\n  }\r\n\r\n  clearSearch(): void {\r\n    this.search = '';\r\n    this.filter();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvcGFyYW1ldGVycy9jbGllbnQvY2xpZW50LWxpc3QvbW9yZS1kZXRhaWxzL21vcmUtZGV0YWlscy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div mat-dialog-content>\\r\\n  <mat-list>\\r\\n    <mat-list-item>\\r\\n      <h4>Numéro du client : </h4>&nbsp;&nbsp;{{client.number}}\\r\\n    </mat-list-item>\\r\\n    <mat-divider></mat-divider>\\r\\n    <mat-list-item>\\r\\n      <h4>Nom : </h4>&nbsp;&nbsp;{{client.name}}\\r\\n    </mat-list-item>\\r\\n    <mat-divider></mat-divider>\\r\\n    <mat-list-item>\\r\\n      <h4>Email : </h4>&nbsp;&nbsp;{{client.email}}\\r\\n    </mat-list-item>\\r\\n    <mat-divider></mat-divider>\\r\\n    <mat-list-item>\\r\\n      <h4>Type : </h4>&nbsp;&nbsp;{{client.type}}\\r\\n    </mat-list-item>\\r\\n    <mat-divider></mat-divider>\\r\\n    <mat-list-item>\\r\\n      <h4>Ville : </h4>&nbsp;&nbsp;{{client.address.city}}\\r\\n    </mat-list-item>\\r\\n    <mat-divider></mat-divider>\\r\\n    <mat-list-item>\\r\\n      <h4>Region : </h4>&nbsp;&nbsp;{{client.region}}\\r\\n    </mat-list-item>\\r\\n    <mat-divider></mat-divider>\\r\\n    <mat-list-item>\\r\\n      <h4>Code Postal : </h4>&nbsp;&nbsp;{{client.address.postal}}\\r\\n    </mat-list-item>\\r\\n    <mat-divider></mat-divider>\\r\\n    <mat-list-item>\\r\\n      <h4>Téléphone : </h4>&nbsp;&nbsp;{{client.phone}}\\r\\n    </mat-list-item>\\r\\n    <mat-divider></mat-divider>\\r\\n    <mat-list-item>\\r\\n      <h4>Fax : </h4>&nbsp;&nbsp;<h5>{{client.fax}}</h5>\\r\\n    </mat-list-item>\\r\\n    <mat-divider></mat-divider>\\r\\n    <mat-list-item>\\r\\n      <h4>Plafond Crédit : </h4>&nbsp;&nbsp;{{client.plafondCredit}}\\r\\n    </mat-list-item>\\r\\n    <mat-divider></mat-divider>\\r\\n  </mat-list>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <span class=\\\"fill-remaining-space\\\"></span>\\r\\n  <button mat-raised-button (click)=\\\"onNoClick()\\\" color=\\\"primary\\\">Fermer</button>\\r\\n  <span class=\\\"fill-remaining-space\\\"></span>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Client } from 'app/shared/models/client.model';\r\n\r\n@Component({\r\n  selector: 'app-more-details',\r\n  templateUrl: './more-details.component.html',\r\n  styleUrls: ['./more-details.component.css']\r\n})\r\nexport class MoreDetailsComponent implements OnInit {\r\n\r\n  public client: Client;\r\n\r\n  constructor(public dialogRef: MatDialogRef<MoreDetailsComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: any) {\r\n      this.client = data.client;\r\n     }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvcGFyYW1ldGVycy9jbGllbnQvY2xpZW50LWxpc3QvdXBkYXRlLWNsaWVudC91cGRhdGUtY2xpZW50LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-toolbar>\\r\\n  <span>Modifier Client</span>\\r\\n  <span class=\\\"fill-remaining-space\\\"></span>\\r\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\r\\n    <mat-icon>clear</mat-icon>\\r\\n  </button>\\r\\n</mat-toolbar>\\r\\n\\r\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\r\\n  <div>\\r\\n    <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Matricule Fiscale\\\" required type=\\\"text\\\" name=\\\"matFisc\\\"\\r\\n            [(ngModel)]=\\\"client.matFisc\\\">\\r\\n          <mat-error>Matricule Fiscale est obligatoire</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Nom\\\" required type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"client.name\\\">\\r\\n          <mat-error>Nom est obligatoire</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n            <input matInput placeholder=\\\"Numéro du client (4 chiffres)\\\" required type=\\\"text\\\" maxlength=\\\"4\\\" name=\\\"number\\\"\\r\\n            [(ngModel)]=\\\"client.number\\\">\\r\\n          <mat-error>Numéro du client est obligatoire</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Email\\\" required email type=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"client.email\\\"\\r\\n            #email=\\\"ngModel\\\">\\r\\n          <mat-error *ngIf=\\\"email.errors?.required\\\">Email est obligatoire</mat-error>\\r\\n          <mat-error *ngIf=\\\"email.errors?.email\\\">Email Invalide</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Type\\\" required type=\\\"text\\\" name=\\\"type\\\" [(ngModel)]=\\\"client.type\\\">\\r\\n          <mat-error>Type est obligatoire</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Select an option</mat-label>\\r\\n          <mat-select required [(ngModel)]=\\\"client.state\\\" name=\\\"state\\\">\\r\\n            <mat-option>None</mat-option>\\r\\n            <mat-option value=\\\"actif\\\">Actif</mat-option>\\r\\n            <mat-option value=\\\"non actif\\\">Non Actif</mat-option>\\r\\n          </mat-select>\\r\\n\\r\\n          <mat-error>Etat est obligatoire</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Téléphone\\\" required type=\\\"number\\\" maxlength=\\\"8\\\" name=\\\"phone\\\"\\r\\n            [(ngModel)]=\\\"client.phone\\\">\\r\\n          <mat-error>Téléphone est obligatoire</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Fax\\\" required type=\\\"number\\\" maxlength=\\\"8\\\" name=\\\"fax\\\" [(ngModel)]=\\\"client.fax\\\">\\r\\n          <mat-error>Fax est obligatoire</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Plafond Crédit\\\" required type=\\\"number\\\" min=\\\"0\\\" name=\\\"plafondCredit\\\"\\r\\n            [(ngModel)]=\\\"client.plafondCredit\\\">\\r\\n          <mat-error>Plafond Crédit est obligatoire</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Ville\\\" required type=\\\"text\\\" name=\\\"city\\\" [(ngModel)]=\\\"client.address.city\\\">\\r\\n          <mat-error>Ville est obligatoire</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Code Postal\\\" required type=\\\"number\\\" min=\\\"0\\\" maxlength=\\\"5\\\" name=\\\"postal\\\"\\r\\n            [(ngModel)]=\\\"client.address.postal\\\">\\r\\n          <mat-error>Code Postal est obligatoire</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n    </mat-grid-list>\\r\\n\\r\\n    <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"100px\\\">\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Region\\\" required type=\\\"text\\\" name=\\\"region\\\" [(ngModel)]=\\\"client.region\\\">\\r\\n          <mat-error>Region est obligatoire</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n    </mat-grid-list>\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"button-row\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"updateClient()\\\"\\r\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Modifier\\r\\n      </button>\\r\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Client } from 'app/shared/models/client.model';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ClientService } from 'app/shared/services/client.service';\r\nimport { NotificationService } from 'app/shared/services/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-update-client',\r\n  templateUrl: './update-client.component.html',\r\n  styleUrls: ['./update-client.component.css']\r\n})\r\nexport class UpdateClientComponent implements OnInit {\r\n\r\n  public client: Client;\r\n  public width: number;\r\n\r\n  constructor(public dialogRef: MatDialogRef<UpdateClientComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: any,\r\n              private clientService: ClientService,\r\n              private notifservice: NotificationService) {\r\n    this.client = data.client;\r\n    this.width = 2;\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (document.body.clientWidth < 600) {\r\n      this.width = 1;\r\n    }\r\n  }\r\n\r\n  onClose(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onClear(form: NgForm): void {\r\n    form.reset();\r\n  }\r\n\r\n  updateClient(): void {\r\n    this.clientService.updateClient(this.client._id, this.client).subscribe(res => {\r\n      this.clientService.getClientsList();\r\n      this.dialogRef.close();\r\n      this.notifservice.success('Client modifié avec succés');\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvcGFyYW1ldGVycy9kaXN0cmlidXRldXIvZGlzdHJpYnV0ZXVyLWxpc3QvZGlzdHJpYnV0ZXVyLWFkZC9kaXN0cmlidXRldXItYWRkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-toolbar>\\r\\n  <span>Ajouter Distributeur</span>\\r\\n  <span class=\\\"fill-remaining-space\\\"></span>\\r\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\r\\n    <mat-icon>clear</mat-icon>\\r\\n  </button>\\r\\n</mat-toolbar>\\r\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\" (submit)=\\\"addDistributeur()\\\">\\r\\n  <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\r\\n    <mat-grid-tile>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Reference\\\" (keydown.space)=\\\"$event.preventDefault()\\\" required type=\\\"text\\\" name=\\\"reference\\\"\\r\\n          [(ngModel)]=\\\"distributeur.reference\\\">\\r\\n        <mat-error>Ce champ est obligatoire.</mat-error>\\r\\n      </mat-form-field>\\r\\n    </mat-grid-tile>\\r\\n    <mat-grid-tile>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Libellé\\\" required type=\\\"text\\\" name=\\\"libelle\\\" [(ngModel)]=\\\"distributeur.libelle\\\">\\r\\n        <mat-error>Ce champ est obligatoire.</mat-error>\\r\\n      </mat-form-field>\\r\\n    </mat-grid-tile>\\r\\n    <mat-grid-tile>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"N Immatriculation\\\" type=\\\"number\\\" name=\\\"numImmatriculation\\\"\\r\\n          [(ngModel)]=\\\"distributeur.numImmatriculation\\\">\\r\\n      </mat-form-field>\\r\\n    </mat-grid-tile>\\r\\n    <mat-grid-tile>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Année fabrication\\\" type=\\\"number\\\" name=\\\"anneeFabrication\\\"\\r\\n          [(ngModel)]=\\\"distributeur.anneeFabrication\\\">\\r\\n      </mat-form-field>\\r\\n    </mat-grid-tile>\\r\\n  </mat-grid-list>\\r\\n  <div class=\\\"button-row\\\">\\r\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Ajouter\\r\\n    </button>\\r\\n    <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit, HostListener } from '@angular/core';\nimport { Distributeur } from 'app/shared/models/distributeur.model';\nimport { MatDialogRef } from '@angular/material';\nimport { DistributeurService } from 'app/shared/services/distributeur.service';\nimport { NotificationService } from 'app/shared/services/notification.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-distributeur-add',\n  templateUrl: './distributeur-add.component.html',\n  styleUrls: ['./distributeur-add.component.css']\n})\nexport class DistributeurAddComponent implements OnInit {\n\n  public distributeur: Distributeur;\n  public width: number;\n  screenHeight: any;\n  screenWidth: any;\n\n  constructor(\n    private dialogRef: MatDialogRef<DistributeurAddComponent>,\n    private distributeurService: DistributeurService,\n    private notifService: NotificationService) {\n    this.distributeur = new Distributeur();\n    this.getScreenSize();\n  }\n\n  addDistributeur() {\n    this.distributeurService.addDistributeur(this.distributeur)\n      .subscribe(\n        res => {\n          this.distributeurService.getDistributeursList();\n          this.dialogRef.close();\n          this.notifService.success('Distributeur ajouter avec succés');\n        },\n        err => console.log(err)\n      );\n  }\n\n  onClose() {\n    this.dialogRef.close();\n  }\n\n  onClear(form: NgForm): void {\n    form.reset();\n  }\n\n  @HostListener('window:resize', ['$event'])\n    getScreenSize(event?) {\n          this.screenHeight = window.innerHeight;\n          this.screenWidth = window.innerWidth;\n          if (this.screenWidth < 650) {\n            this.width = 1;\n          } else {\n            this.width = 2;\n          }\n    }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvcGFyYW1ldGVycy9kaXN0cmlidXRldXIvZGlzdHJpYnV0ZXVyLWxpc3QvZGlzdHJpYnV0ZXVyLWVkaXQvZGlzdHJpYnV0ZXVyLWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-toolbar>\\r\\n  <span>Modifier distributeur</span>\\r\\n  <span class=\\\"fill-remaining-space\\\"></span>\\r\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\r\\n    <mat-icon>clear</mat-icon>\\r\\n  </button>\\r\\n</mat-toolbar>\\r\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\r\\n  <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\r\\n    <mat-grid-tile>\\r\\n      <input type=\\\"hidden\\\">\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Reference\\\" (keydown.space)=\\\"$event.preventDefault()\\\" required type=\\\"text\\\" name=\\\"reference\\\"\\r\\n          [(ngModel)]=\\\"distributeur.reference\\\">\\r\\n        <mat-error>Ce champ est obligatoire.</mat-error>\\r\\n      </mat-form-field>\\r\\n    </mat-grid-tile>\\r\\n    <mat-grid-tile>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Libellé\\\" required type=\\\"text\\\" name=\\\"libelle\\\" [(ngModel)]=\\\"distributeur.libelle\\\">\\r\\n        <mat-error>Ce champ est obligatoire.</mat-error>\\r\\n      </mat-form-field>\\r\\n    </mat-grid-tile>\\r\\n    <mat-grid-tile>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"N Immatriculation\\\" type=\\\"number\\\" name=\\\"numImmatriculation\\\"\\r\\n          [(ngModel)]=\\\"distributeur.numImmatriculation\\\">\\r\\n      </mat-form-field>\\r\\n    </mat-grid-tile>\\r\\n    <mat-grid-tile>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Année fabrication\\\" type=\\\"number\\\" name=\\\"anneeFabrication\\\"\\r\\n          [(ngModel)]=\\\"distributeur.anneeFabrication\\\">\\r\\n      </mat-form-field>\\r\\n    </mat-grid-tile>\\r\\n  </mat-grid-list>\\r\\n  <div class=\\\"button-row\\\">\\r\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"angForm.pristine || angForm.invalid\\\"\\r\\n      (click)=\\\"updateDistributeur()\\\">Modifier type</button>\\r\\n    <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit, Inject, HostListener } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { NotificationService } from 'app/shared/services/notification.service';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\nimport { Distributeur } from 'app/shared/models/distributeur.model';\r\nimport { DistributeurService } from 'app/shared/services/distributeur.service';\r\nimport { IndexListComponent } from '@ComIndex/index-list.component';\r\n\r\n@Component({\r\n  providers: [IndexListComponent],\r\n  selector: 'app-distributeur-edit',\r\n  templateUrl: './distributeur-edit.component.html',\r\n  styleUrls: ['./distributeur-edit.component.css']\r\n})\r\nexport class DistributeurEditComponent implements OnInit {\r\n\r\n  public distributeur: Distributeur;\r\n  public width: number;\r\n  screenHeight: any;\r\n  screenWidth: any;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DistributeurEditComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private distributeurService: DistributeurService,\r\n    private notifservice: NotificationService,\r\n    private comp: IndexListComponent) {\r\n    this.distributeur = data.distributeur;\r\n    this.getScreenSize();\r\n  }\r\n\r\n  updateDistributeur(): void {\r\n    this.distributeurService.updateDistributeur(this.distributeur._id, this.distributeur)\r\n      .subscribe(res => {\r\n        this.distributeurService.getDistributeursList();\r\n        this.dialogRef.close();\r\n        this.notifservice.success('Distributeur modifié avec succés');\r\n      },\r\n        err => {\r\n          console.log(err);\r\n        });\r\n    this.comp.ngOnInit();\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  getScreenSize(event?) {\r\n    this.screenHeight = window.innerHeight;\r\n    this.screenWidth = window.innerWidth;\r\n    if (this.screenWidth < 650) {\r\n      this.width =  1;\r\n    } else {\r\n      this.width =  2;\r\n    }\r\n  }\r\n\r\n\r\n  onClose() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onClear(form: NgForm): void {\r\n    form.reset();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvcGFyYW1ldGVycy9kaXN0cmlidXRldXIvZGlzdHJpYnV0ZXVyLWxpc3QvZGlzdHJpYnV0ZXVyLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"search-div\\\">\\n    <button mat-raised-button (click)=\\\"addDistributeurDialog()\\\">\\n      <mat-icon>add</mat-icon>Ajouter\\n    </button>\\n    <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\n      <input matInput placeholder=\\\"Search\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"search\\\" (keyup)=\\\"filter()\\\">\\n      <button *ngIf=\\\"search\\\" mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"clearSearch()\\\">\\n        <mat-icon>close</mat-icon>\\n      </button>\\n    </mat-form-field>\\n  </div>\\n  <div class=\\\"mat-elevation-z8\\\">\\n    <mat-table [dataSource]=\\\"distributeurService.distributeursMatTab\\\" matSort>\\n      <ng-container matColumnDef=\\\"reference\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Reference</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\">{{element.reference}}</mat-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"libelle\\\">\\n        <mat-header-cell *matHeaderCellDef>Libellé</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\">{{element.libelle}}</mat-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"numImmatriculation\\\">\\n        <mat-header-cell *matHeaderCellDef>N Immatriculation</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\">{{element.numImmatriculation}}</mat-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"anneeFabrication\\\">\\n        <mat-header-cell *matHeaderCellDef>Année fabrication</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\">{{element.anneeFabrication}}</mat-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"actions\\\">\\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\">\\n            <button mat-icon-button color=\\\"primary\\\" (click)=\\\"updateDistributeurDialog(row)\\\">\\n                <mat-icon>edit</mat-icon>\\n            </button>\\n            <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteDistributeurDialog(row._id, 'distributeur')\\\">\\n                <mat-icon>delete_outline</mat-icon>\\n            </button>\\n        </mat-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"loading\\\">\\n        <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n            Loading data ...\\n        </mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"noData\\\">\\n        <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n            No data.\\n        </mat-footer-cell>\\n    </ng-container>\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':distributeurService.distributeursMatTab!=null}\\\"></mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\" [ngClass]=\\\"{'hide':!(distributeurService.distributeursMatTab!=null && distributeurService.distributeursMatTab.data.length==0)}\\\">\\n    </mat-footer-row>\\n    </mat-table>\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" [pageSize]=\\\"5\\\" showFirstLastButtons></mat-paginator>\\n  </div>\\n\\n\"","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\r\nimport { DistributeurService } from 'app/shared/services/distributeur.service';\r\nimport { MatDialog, MatPaginator, MatSort } from '@angular/material';\r\nimport { DistributeurAddComponent } from './distributeur-add/distributeur-add.component';\r\nimport { ConfirmDeleteComponent } from 'app/Components/Shared/confirm-delete/confirm-delete.component';\r\nimport { Distributeur } from 'app/shared/models/distributeur.model';\r\nimport { DistributeurEditComponent } from './distributeur-edit/distributeur-edit.component';\r\nimport { IndexListComponent } from '@ComIndex/index-list.component';\r\n\r\n@Component({\r\n  providers: [IndexListComponent],\r\n  selector: 'app-distributeur-list',\r\n  templateUrl: './distributeur-list.component.html',\r\n  styleUrls: ['./distributeur-list.component.css']\r\n})\r\nexport class DistributeurListComponent implements OnInit {\r\n\r\n  public displayedColumns: string[];\r\n  public search: string;\r\n  screenHeight: any;\r\n  screenWidth: any;\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  constructor(\r\n    public distributeurService: DistributeurService,\r\n    private dialog: MatDialog,\r\n    private comp: IndexListComponent) {\r\n    this.getScreenSize();\r\n    }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  getScreenSize(event?) {\r\n    this.screenHeight = window.innerHeight;\r\n    this.screenWidth = window.innerWidth;\r\n    if (this.screenWidth < 650) {\r\n      this.displayedColumns =  ['reference', 'libelle', 'actions'];\r\n    } else {\r\n      this.displayedColumns =  ['reference', 'libelle', 'numImmatriculation', 'anneeFabrication', 'actions'];\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.distributeurService.getDistributeursList(this.sort, this.paginator);\r\n  }\r\n\r\n  addDistributeurDialog(): void {\r\n    this.dialog.afterAllClosed.subscribe(() => {\r\n      this.comp.ngOnInit();\r\n    });\r\n    this.dialog.open(DistributeurAddComponent, {\r\n      panelClass: 'full-width-dialog'\r\n    });\r\n  }\r\n\r\n  deleteDistributeurDialog(id: string, msg: string): void {\r\n\r\n    this.dialog.afterAllClosed.subscribe(() => {\r\n      this.comp.ngOnInit();\r\n    });\r\n    this.dialog.open(ConfirmDeleteComponent, {\r\n      data: { id, msg }\r\n    });\r\n  }\r\n\r\n  updateDistributeurDialog(distributeur: Distributeur): void {\r\n    this.dialog.open(DistributeurEditComponent, {\r\n      panelClass: 'full-width-dialog',\r\n      data: { distributeur: Object.assign({}, distributeur) }\r\n    });\r\n  }\r\n\r\n  filter(): void {\r\n    this.distributeurService.distributeursMatTab.filter = this.search.trim().toLowerCase();\r\n  }\r\n\r\n  clearSearch(): void {\r\n    this.search = '';\r\n    this.filter();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvcGFyYW1ldGVycy9pbmRleC9pbmRleC1saXN0L2luZGV4LWFkZC9pbmRleC1hZGQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-toolbar>\\r\\n  <span>Ajouter Index</span>\\r\\n  <span class=\\\"fill-remaining-space\\\"></span>\\r\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\r\\n    <mat-icon>clear</mat-icon>\\r\\n  </button>\\r\\n</mat-toolbar>\\r\\n\\r\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\r\\n  <div>\\r\\n    <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Reference\\\" (keydown.space)=\\\"$event.preventDefault()\\\"  required type=\\\"text\\\" name=\\\"reference\\\" [(ngModel)]=\\\"index.reference\\\">\\r\\n          <mat-error>Ce champ est obligatoire.</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Valeur Index\\\" required type=\\\"number\\\" name=\\\"valeurIndex\\\"\\r\\n            [(ngModel)]=\\\"index.valeurIndex\\\">\\r\\n          <mat-error>Ce champ est obligatoire.</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Citerne</mat-label>\\r\\n          <mat-select required name=\\\"citerne\\\" [(ngModel)]=\\\"index.citerne\\\">\\r\\n            <mat-option>None</mat-option>\\r\\n            <mat-option *ngFor=\\\"let c of citerneService.citernes\\\" [value]=\\\"c._id\\\" >\\r\\n              {{c.code}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n          <mat-error>Ce champ est obligatoire.</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Distributeur</mat-label>\\r\\n          <mat-select required name=\\\"distributeur\\\" [(ngModel)]=\\\"index.distributeur\\\">\\r\\n            <mat-option>None</mat-option>\\r\\n            <mat-option *ngFor=\\\"let d of distributeurService.distributeurs\\\" [value]=\\\"d._id\\\" >\\r\\n              {{d.reference}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n          <mat-error>Ce champ est obligatoire.</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n    </mat-grid-list>\\r\\n\\r\\n\\r\\n    <div class=\\\"button-row\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addIndex()\\\"\\r\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Ajouter\\r\\n      </button>\\r\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit, HostListener } from '@angular/core';\r\nimport { Index } from 'app/shared/models/Index.model';\r\nimport { MatDialogRef } from '@angular/material';\r\nimport { IndexService } from 'app/shared/services/index.service';\r\nimport { NotificationService } from 'app/shared/services/notification.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { CiterneService } from 'app/shared/services/citerne.service';\r\nimport { DistributeurService } from 'app/shared/services/distributeur.service';\r\nimport { PrixCarburantService } from 'app/shared/services/prix-carburant.service';\r\nimport { CarburantService } from 'app/shared/services/carburant.service';\r\n\r\n@Component({\r\n  selector: 'app-index-add',\r\n  templateUrl: './index-add.component.html',\r\n  styleUrls: ['./index-add.component.css']\r\n})\r\nexport class IndexAddComponent implements OnInit {\r\n\r\n  public index: Index;\r\n  public width: number;\r\n  public citerneList: string[];\r\n  public distributeurList: string[];\r\n  public carburantList: string[];\r\n  screenHeight: any;\r\n  screenWidth: any;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<IndexAddComponent>,\r\n    private indexService: IndexService,\r\n    public citerneService: CiterneService,\r\n    public carburantService: CarburantService,\r\n    public distributeurService: DistributeurService,\r\n    private notifService: NotificationService) {\r\n    this.index = new Index();\r\n    this.citerneList = [];\r\n    this.distributeurList = [];\r\n    this.carburantList = [];\r\n    this.getScreenSize();\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  getScreenSize(event?) {\r\n    this.screenHeight = window.innerHeight;\r\n    this.screenWidth = window.innerWidth;\r\n    if (this.screenWidth < 650) {\r\n      this.width =  1;\r\n    } else {\r\n      this.width =  2;\r\n    }\r\n  }\r\n\r\n  addIndex() {\r\n    const datetime = new Date();\r\n    const date = datetime.toISOString().slice(0, 10);\r\n    this.index.dernierDate = date;\r\n    this.citerneService.getCiterneById(this.index.citerne).subscribe(cit => {\r\n      this.index.carburant = cit.carburant;\r\n      this.indexService.addIndex(this.index)\r\n      .subscribe(\r\n        res => {\r\n          this.indexService.getIndexList();\r\n          this.dialogRef.close();\r\n          this.notifService.success('Index ajouter avec succés');\r\n        },\r\n        err => console.log(err)\r\n      );\r\n    });\r\n  }\r\n\r\n  onClose() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onClear(form: NgForm): void {\r\n    form.reset();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (document.body.clientWidth < 600) {\r\n      this.width = 1;\r\n    }\r\n    this.citerneService.getCiternesList();\r\n    this.distributeurService.getDistributeursList();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvcGFyYW1ldGVycy9pbmRleC9pbmRleC1saXN0L2luZGV4LWVkaXQvaW5kZXgtZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-toolbar>\\r\\n  <span>Modifier Index</span>\\r\\n  <span class=\\\"fill-remaining-space\\\"></span>\\r\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\r\\n    <mat-icon>clear</mat-icon>\\r\\n  </button>\\r\\n</mat-toolbar>\\r\\n\\r\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\r\\n  <div>\\r\\n    <mat-grid-list [cols]=\\\"width\\\" rowHeight=\\\"100px\\\">\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Reference\\\" (keydown.space)=\\\"$event.preventDefault()\\\" required type=\\\"text\\\" name=\\\"reference\\\" [(ngModel)]=\\\"index.reference\\\">\\r\\n          <mat-error>Ce champ est obligatoire.</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Valeur Index\\\" required type=\\\"number\\\" name=\\\"valeurIndex\\\"\\r\\n            [(ngModel)]=\\\"index.valeurIndex\\\">\\r\\n          <mat-error>Ce champ est obligatoire.</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <!--<mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Carburant</mat-label>\\r\\n          <mat-select  required name=\\\"carburant\\\" [(ngModel)]=\\\"index.carburant\\\">\\r\\n            <mat-option>None</mat-option>\\r\\n            <mat-option *ngFor=\\\"let p of carburantService.carburants\\\" [value]=\\\"p._id\\\" >\\r\\n              {{p.ref}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n          <mat-error>Ce champ est obligatoire.</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>-->\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Citerne</mat-label>\\r\\n          <mat-select required name=\\\"citerne\\\" [(ngModel)]=\\\"index.citerne\\\">\\r\\n            <mat-option>None</mat-option>\\r\\n            <mat-option *ngFor=\\\"let c of citerneService.citernes\\\" [value]=\\\"c._id\\\" >\\r\\n              {{c.code}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n          <mat-error>Ce champ est obligatoire.</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n      <mat-grid-tile>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Distributeur</mat-label>\\r\\n          <mat-select required name=\\\"distributeur\\\" [(ngModel)]=\\\"index.distributeur\\\">\\r\\n            <mat-option>None</mat-option>\\r\\n            <mat-option *ngFor=\\\"let d of distributeurService.distributeurs\\\" [value]=\\\"d._id\\\" >\\r\\n              {{d.reference}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n          <mat-error>Ce champ est obligatoire.</mat-error>\\r\\n        </mat-form-field>\\r\\n      </mat-grid-tile>\\r\\n\\r\\n    </mat-grid-list>\\r\\n\\r\\n    <div class=\\\"button-row\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"updateIndex()\\\"\\r\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Modifier\\r\\n      </button>\\r\\n      <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit, Inject, HostListener } from '@angular/core';\r\nimport { Index } from 'app/shared/models/Index.model';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { IndexService } from 'app/shared/services/index.service';\r\nimport { NotificationService } from 'app/shared/services/notification.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { CarburantService } from 'app/shared/services/carburant.service';\r\nimport { CiterneService } from 'app/shared/services/citerne.service';\r\nimport { DistributeurService } from 'app/shared/services/distributeur.service';\r\n\r\n@Component({\r\n  selector: 'app-index-edit',\r\n  templateUrl: './index-edit.component.html',\r\n  styleUrls: ['./index-edit.component.css']\r\n})\r\nexport class IndexEditComponent implements OnInit {\r\n\r\n  public index: Index;\r\n  public width: number;\r\n  screenHeight: any;\r\n  screenWidth: any;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<IndexEditComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private indexService: IndexService,\r\n    private notifservice: NotificationService,\r\n    public carburantService: CarburantService,\r\n    public citerneService: CiterneService,\r\n    public distributeurService: DistributeurService) {\r\n    this.index = data.index;\r\n    this.getScreenSize();\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  getScreenSize(event?) {\r\n    this.screenHeight = window.innerHeight;\r\n    this.screenWidth = window.innerWidth;\r\n    if (this.screenWidth < 650) {\r\n      this.width =  1;\r\n    } else {\r\n      this.width =  2;\r\n    }\r\n  }\r\n\r\n  updateIndex(): void {\r\n    this.citerneService.getCiterneById(this.index.citerne).subscribe(cit => {\r\n      this.index.carburant = cit.carburant;\r\n      console.log(cit.carburant);\r\n\r\n      this.indexService.updateIndex(this.index._id, this.index)\r\n      .subscribe(res => {\r\n        this.indexService.getIndexList();\r\n        this.dialogRef.close();\r\n        this.notifservice.success('Index modifié avec succés');\r\n      },\r\n        err => {\r\n          console.log(err);\r\n        });\r\n    });\r\n  }\r\n\r\n  onClose() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onClear(form: NgForm): void {\r\n    form.reset();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.citerneService.getCiternesList();\r\n    this.distributeurService.getDistributeursList();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvcGFyYW1ldGVycy9pbmRleC9pbmRleC1saXN0L2luZGV4LWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"search-div\\\">\\n  <button mat-raised-button (click)=\\\"addIndexDialog()\\\">\\n    <mat-icon>add</mat-icon>Ajouter\\n  </button>\\n  <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\n    <input matInput placeholder=\\\"Search\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"search\\\" (keyup)=\\\"filter()\\\">\\n    <button *ngIf=\\\"search\\\" mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"clearSearch()\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </mat-form-field>\\n</div>\\n<div class=\\\"mat-elevation-z8\\\">\\n  <mat-table [dataSource]=\\\"indexService.indexsMatTab\\\" matSort>\\n    <ng-container matColumnDef=\\\"reference\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Reference</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.reference}}</mat-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"valeurIndex\\\">\\n      <mat-header-cell *matHeaderCellDef>Valeur index</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.valeurIndex}}</mat-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"dernierDate\\\">\\n      <mat-header-cell *matHeaderCellDef>Dernier date</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.dernierDate}}</mat-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"carburant\\\">\\n      <mat-header-cell *matHeaderCellDef>Carburant</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.carburant}}</mat-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"citerne\\\">\\n      <mat-header-cell *matHeaderCellDef>Citerne</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.citerne}}</mat-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"distributeur\\\">\\n      <mat-header-cell *matHeaderCellDef>Distributeur</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.distributeur}}</mat-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <mat-header-cell *matHeaderCellDef></mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\">\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"updateIndexDialog(row)\\\">\\n          <mat-icon>edit</mat-icon>\\n        </button>\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteIndexDialog(row._id, 'index')\\\">\\n          <mat-icon>delete_outline</mat-icon>\\n        </button>\\n      </mat-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"loading\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n        Loading data ...\\n      </mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"noData\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n        No data.\\n      </mat-footer-cell>\\n    </ng-container>\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':indexService.indexsMatTab!=null}\\\">\\n    </mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\"\\n      [ngClass]=\\\"{'hide':!(indexService.indexsMatTab!=null && indexService.indexsMatTab.data.length==0)}\\\">\\n    </mat-footer-row>\\n  </mat-table>\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" [pageSize]=\\\"5\\\" showFirstLastButtons></mat-paginator>\\n</div>\\n\"","import { Component, OnInit, ViewChild, HostListener, Injectable } from '@angular/core';\r\nimport { MatSort, MatPaginator, MatDialog } from '@angular/material';\r\nimport { IndexService } from 'app/shared/services/index.service';\r\nimport { IndexAddComponent } from './index-add/index-add.component';\r\nimport { ConfirmDeleteComponent } from 'app/Components/Shared/confirm-delete/confirm-delete.component';\r\nimport { Index } from 'app/shared/models/Index.model';\r\nimport { IndexEditComponent } from './index-edit/index-edit.component';\r\nimport { CiterneService } from 'app/shared/services/citerne.service';\r\nimport { DistributeurService } from 'app/shared/services/distributeur.service';\r\n\r\n@Component({\r\n  selector: 'app-index-list',\r\n  templateUrl: './index-list.component.html',\r\n  styleUrls: ['./index-list.component.css']\r\n})\r\n\r\nexport class IndexListComponent implements OnInit {\r\n\r\n  public displayedColumns: string[];\r\n  public search: string;\r\n  screenHeight: any;\r\n  screenWidth: any;\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  constructor(\r\n    public indexService: IndexService,\r\n    private citerneService: CiterneService,\r\n    private distributeurService: DistributeurService,\r\n    private dialog: MatDialog) {\r\n    this.getScreenSize();\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  getScreenSize(event?) {\r\n    this.screenHeight = window.innerHeight;\r\n    this.screenWidth = window.innerWidth;\r\n    if (this.screenWidth < 650) {\r\n      this.displayedColumns =  ['reference', 'valeurIndex', 'carburant', 'actions'];\r\n    } else {\r\n      this.displayedColumns =  ['reference', 'valeurIndex', 'dernierDate', 'carburant', 'citerne', 'distributeur', 'actions'];\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.indexService.getIndexList(this.sort, this.paginator);\r\n  }\r\n\r\n  addIndexDialog(): void {\r\n    this.dialog.open(IndexAddComponent, {\r\n      panelClass: 'full-width-dialog'\r\n    });\r\n  }\r\n\r\n  deleteIndexDialog(id: string, msg: string): void {\r\n    this.dialog.open(ConfirmDeleteComponent, {\r\n      data: { id, msg }\r\n    });\r\n  }\r\n\r\n  updateIndexDialog(index: Index): void {\r\n    let code: string;\r\n    let dis: string;\r\n    code = index.citerne;\r\n    dis = index.distributeur;\r\n    this.citerneService.getCiterneByCode(code).subscribe(res => {\r\n\r\n      index.citerne = res._id;\r\n      this.distributeurService.getByRef(dis).subscribe(d => {\r\n        index.distributeur = d._id;\r\n        this.dialog.open(IndexEditComponent, {\r\n          panelClass: 'full-width-dialog',\r\n          data: { index: Object.assign({}, index) }\r\n        });\r\n        index.citerne = code;\r\n        index.distributeur = dis;\r\n      });\r\n    });\r\n  }\r\n\r\n  filter(): void {\r\n    this.indexService.indexsMatTab.filter = this.search.trim().toLowerCase();\r\n  }\r\n\r\n  clearSearch(): void {\r\n    this.search = '';\r\n    this.filter();\r\n  }\r\n}\r\n","module.exports = \"\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvcGFyYW1ldGVycy9wYXJhbWV0ZXJzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<ng-progress [positionUsing]=\\\"'marginLeft'\\\" [direction]=\\\"'leftToRightIncreased'\\\" [color]=\\\"'#4286f4'\\\"\\r\\n  [trickleSpeed]=\\\"500\\\" [thick]=\\\"true\\\" [ease]=\\\"'easeInSine'\\\"></ng-progress>\\r\\n<div class=\\\"container\\\">\\r\\n  <mat-accordion>\\r\\n\\r\\n    <div class=\\\"margin-param\\\">\\r\\n      <mat-expansion-panel>\\r\\n        <mat-expansion-panel-header>\\r\\n          <span color=\\\"primary\\\">Carte Bon Types</span>\\r\\n        </mat-expansion-panel-header>\\r\\n        <app-card-type-list></app-card-type-list>\\r\\n      </mat-expansion-panel>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"margin-param\\\">\\r\\n      <mat-expansion-panel>\\r\\n        <mat-expansion-panel-header>\\r\\n          <span>Clients</span>\\r\\n        </mat-expansion-panel-header>\\r\\n        <div>\\r\\n          <app-client-list></app-client-list>\\r\\n        </div>\\r\\n      </mat-expansion-panel>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"margin-param\\\">\\r\\n      <mat-expansion-panel>\\r\\n        <mat-expansion-panel-header>\\r\\n          <span>Citernes</span>\\r\\n        </mat-expansion-panel-header>\\r\\n        <app-citerne-list></app-citerne-list>\\r\\n      </mat-expansion-panel>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"margin-param\\\">\\r\\n      <mat-expansion-panel>\\r\\n        <mat-expansion-panel-header>\\r\\n          <span>Indexs</span>\\r\\n        </mat-expansion-panel-header>\\r\\n        <app-index-list></app-index-list>\\r\\n      </mat-expansion-panel>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"margin-param\\\">\\r\\n      <mat-expansion-panel>\\r\\n        <mat-expansion-panel-header>\\r\\n          <span>Distributeur</span>\\r\\n        </mat-expansion-panel-header>\\r\\n        <app-distributeur-list></app-distributeur-list>\\r\\n      </mat-expansion-panel>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"margin-param\\\">\\r\\n      <mat-expansion-panel>\\r\\n        <mat-expansion-panel-header>\\r\\n          <span>Carburant</span>\\r\\n        </mat-expansion-panel-header>\\r\\n        <app-carburant></app-carburant>\\r\\n      </mat-expansion-panel>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"margin-param\\\">\\r\\n      <mat-expansion-panel>\\r\\n        <mat-expansion-panel-header>\\r\\n          <span>Prix carburant</span>\\r\\n        </mat-expansion-panel-header>\\r\\n        <app-prix-carburant-list></app-prix-carburant-list>\\r\\n      </mat-expansion-panel>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"margin-param\\\">\\r\\n      <mat-expansion-panel>\\r\\n        <mat-expansion-panel-header>\\r\\n          <span>Pompiste</span>\\r\\n        </mat-expansion-panel-header>\\r\\n        <app-pompiste-list></app-pompiste-list>\\r\\n      </mat-expansion-panel>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"margin-param\\\">\\r\\n      <mat-expansion-panel>\\r\\n        <mat-expansion-panel-header>\\r\\n          <span>Banques</span>\\r\\n        </mat-expansion-panel-header>\\r\\n        <div>\\r\\n          <app-bank-list></app-bank-list>\\r\\n        </div>\\r\\n      </mat-expansion-panel>\\r\\n    </div>\\r\\n  </mat-accordion>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\n\r\n\r\n@Component({\r\n  selector: 'app-parameters',\r\n  templateUrl: './parameters.component.html',\r\n  styleUrls: ['./parameters.component.css'],\r\n  viewProviders: [MatExpansionModule]\r\n})\r\nexport class ParametersComponent implements OnInit {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n   }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvcGFyYW1ldGVycy9wb21waXN0ZS9wb21waXN0ZS1saXN0L2FkZC1wb21waXN0ZS9hZGQtcG9tcGlzdGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-toolbar>\\r\\n  <span>Ajouter Pompiste</span>\\r\\n  <span class=\\\"fill-remaining-space\\\"></span>\\r\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\r\\n    <mat-icon>clear</mat-icon>\\r\\n  </button>\\r\\n</mat-toolbar>\\r\\n\\r\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\r\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"300px\\\">\\r\\n    <mat-grid-tile>\\r\\n      <div class=\\\"controles-container\\\">\\r\\n\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Nom\\\" required type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"pompiste.name\\\">\\r\\n          <mat-error>Nom est obligatoire</mat-error>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Email\\\" email type=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"pompiste.email\\\"\\r\\n            #email=\\\"ngModel\\\">\\r\\n          <mat-error *ngIf=\\\"email.errors?.email\\\">Email Invalide</mat-error>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Téléphone\\\" required type=\\\"number\\\" maxlength=\\\"8\\\" name=\\\"phone\\\"\\r\\n            [(ngModel)]=\\\"pompiste.phone\\\">\\r\\n          <mat-error>Téléphone est obligatoire</mat-error>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <div class=\\\"button-row\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addPompiste()\\\"\\r\\n            [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Ajouter\\r\\n          </button>\\r\\n          <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </mat-grid-tile>\\r\\n  </mat-grid-list>\\r\\n</form>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Pompiste } from 'app/shared/models/pompiste.model';\r\nimport { MatDialogRef } from '@angular/material';\r\nimport { PompisteService } from 'app/shared/services/pompiste.service';\r\nimport { NotificationService } from 'app/shared/services/notification.service';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-add-pompiste',\r\n  templateUrl: './add-pompiste.component.html',\r\n  styleUrls: ['./add-pompiste.component.css']\r\n})\r\nexport class AddPompisteComponent implements OnInit {\r\n\r\n  public pompiste: Pompiste;\r\n\r\n  constructor(private dialogMat: MatDialogRef<AddPompisteComponent>,\r\n              private pompisteService: PompisteService,\r\n              private notifService: NotificationService) {\r\n    this.pompiste = new Pompiste();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onClose(): void {\r\n    this.dialogMat.close();\r\n  }\r\n\r\n  onClear(form: NgForm): void {\r\n    form.reset();\r\n  }\r\n\r\n  addPompiste(): void {\r\n    this.pompisteService.addpompiste(this.pompiste).subscribe(res => {\r\n      this.pompisteService.getpompistesList();\r\n      this.dialogMat.close();\r\n      this.notifService.success('Pompiste ajouter avec succés');\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \".margin-right{\\r\\n    margin-right: 10px;\\r\\n    overflow: auto;\\r\\n}\\r\\n\\r\\n.sm{\\r\\n    width: 50px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQ29tcG9uZW50cy9wYXJhbWV0ZXJzL3BvbXBpc3RlL3BvbXBpc3RlLWxpc3QvcG9tcGlzdGUtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0lBQ2xCLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxXQUFXO0FBQ2YiLCJmaWxlIjoic3JjL2FwcC9Db21wb25lbnRzL3BhcmFtZXRlcnMvcG9tcGlzdGUvcG9tcGlzdGUtbGlzdC9wb21waXN0ZS1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFyZ2luLXJpZ2h0e1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbn1cclxuXHJcbi5zbXtcclxuICAgIHdpZHRoOiA1MHB4O1xyXG59Il19 */\"","module.exports = \"<!--<app-card-type-add></app-card-type-add>-->\\r\\n<div class=\\\"search-div\\\">\\r\\n  <button mat-raised-button (click)=\\\"addPompisteDialog()\\\">\\r\\n    <mat-icon>add</mat-icon>Ajouter\\r\\n  </button>\\r\\n  <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\r\\n    <input matInput placeholder=\\\"Search\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"search\\\" (keyup)=\\\"filter()\\\">\\r\\n    <button *ngIf=\\\"search\\\" mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"clearSearch()\\\">\\r\\n      <mat-icon>close</mat-icon>\\r\\n    </button>\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n<div class=\\\"mat-elevation-z8\\\">\\r\\n  <mat-table [dataSource]=\\\"pompisteService.pompistesMatTab\\\" matSort>\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Nom</mat-header-cell>\\r\\n      <mat-cell class=\\\"margin-right\\\" *matCellDef=\\\"let element\\\">{{element.name}}</mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"email\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\\r\\n      <mat-cell class=\\\"margin-right\\\" *matCellDef=\\\"let element\\\">{{element.email}}</mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"phone\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Téléphone</mat-header-cell>\\r\\n      <mat-cell class=\\\"margin-right\\\" *matCellDef=\\\"let element\\\">{{element.phone}}</mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <mat-header-cell *matHeaderCellDef>\\r\\n      </mat-header-cell>\\r\\n      <mat-cell class=\\\"sm\\\" *matCellDef=\\\"let row\\\">\\r\\n        <button mat-icon-button matTooltip=\\\"Editer\\\" color=\\\"primary\\\"\\r\\n          (click)=\\\"updatePompisteDialog(row)\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </button>\\r\\n        <button mat-icon-button matTooltip=\\\"Supprimer\\\" color=\\\"warn\\\"\\r\\n          (click)=\\\"deletePompisteDialog(row._id, 'Pompiste')\\\">\\r\\n          <mat-icon>delete_outline</mat-icon>\\r\\n        </button>\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"loading\\\">\\r\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\r\\n        Loading data ...\\r\\n      </mat-footer-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"noData\\\">\\r\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\r\\n        No data.\\r\\n      </mat-footer-cell>\\r\\n    </ng-container>\\r\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':pompisteService.pompistesMatTab!=null}\\\">\\r\\n    </mat-footer-row>\\r\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\"\\r\\n      [ngClass]=\\\"{'hide':!(pompisteService.pompistesMatTab!=null && pompisteService.pompistesMatTab.data.length==0)}\\\">\\r\\n    </mat-footer-row>\\r\\n  </mat-table>\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" [pageSize]=\\\"5\\\" showFirstLastButtons></mat-paginator>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort, MatPaginator, MatDialog } from '@angular/material';\r\nimport { PompisteService } from 'app/shared/services/pompiste.service';\r\nimport { AddPompisteComponent } from './add-pompiste/add-pompiste.component';\r\nimport { ConfirmDeleteComponent } from '@ComShared/confirm-delete/confirm-delete.component';\r\nimport { Pompiste } from 'app/shared/models/pompiste.model';\r\nimport { UpdatePompisteComponent } from './update-pompiste/update-pompiste.component';\r\n\r\n@Component({\r\n  selector: 'app-pompiste-list',\r\n  templateUrl: './pompiste-list.component.html',\r\n  styleUrls: ['./pompiste-list.component.css']\r\n})\r\nexport class PompisteListComponent implements OnInit {\r\n\r\n  public displayedColumns: string[];\r\n  public search: string;\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  constructor(public pompisteService: PompisteService, private dialog: MatDialog) {\r\n    this.displayedColumns = ['name', 'email', 'phone', 'actions'];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.pompisteService.getpompistesList(this.sort, this.paginator);\r\n  }\r\n\r\n\r\n  addPompisteDialog(): void {\r\n    this.dialog.open(AddPompisteComponent, {\r\n      panelClass: 'full-width-dialog'\r\n    });\r\n  }\r\n\r\n  deletePompisteDialog(id: string, msg: string): void {\r\n\r\n    this.dialog.open(ConfirmDeleteComponent, {\r\n      data: { id, msg }\r\n    });\r\n  }\r\n\r\n  updatePompisteDialog(pompiste: Pompiste): void {\r\n    this.dialog.open(UpdatePompisteComponent, {\r\n      panelClass: 'full-width-dialog',\r\n      data: { pompiste: Object.assign({}, pompiste) }\r\n    });\r\n  }\r\n\r\n  filter(): void {\r\n    this.pompisteService.pompistesMatTab.filter = this.search.trim().toLowerCase();\r\n  }\r\n\r\n  clearSearch(): void {\r\n    this.search = '';\r\n    this.filter();\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvcGFyYW1ldGVycy9wb21waXN0ZS9wb21waXN0ZS1saXN0L3VwZGF0ZS1wb21waXN0ZS91cGRhdGUtcG9tcGlzdGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-toolbar>\\r\\n  <span>Modifier Pompiste</span>\\r\\n  <span class=\\\"fill-remaining-space\\\"></span>\\r\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\r\\n    <mat-icon>clear</mat-icon>\\r\\n  </button>\\r\\n</mat-toolbar>\\r\\n\\r\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\r\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"300px\\\">\\r\\n    <mat-grid-tile>\\r\\n      <div class=\\\"controles-container\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Nom\\\" required type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"pompiste.name\\\">\\r\\n          <mat-error>Nom est obligatoire</mat-error>\\r\\n        </mat-form-field>\\r\\n      \\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Email\\\" email type=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"pompiste.email\\\"\\r\\n            #email=\\\"ngModel\\\">\\r\\n          <mat-error *ngIf=\\\"email.errors?.email\\\">Email Invalide</mat-error>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Téléphone\\\" required type=\\\"number\\\" maxlength=\\\"8\\\" name=\\\"phone\\\"\\r\\n            [(ngModel)]=\\\"pompiste.phone\\\">\\r\\n          <mat-error>Téléphone est obligatoire</mat-error>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <div class=\\\"button-row\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" (click)=\\\"updatePompiste()\\\"\\r\\n            [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Modifier\\r\\n          </button>\\r\\n          <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-grid-tile>\\r\\n  </mat-grid-list>\\r\\n</form>\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { Pompiste } from 'app/shared/models/pompiste.model';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { PompisteService } from 'app/shared/services/pompiste.service';\r\nimport { NotificationService } from 'app/shared/services/notification.service';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-update-pompiste',\r\n  templateUrl: './update-pompiste.component.html',\r\n  styleUrls: ['./update-pompiste.component.css']\r\n})\r\nexport class UpdatePompisteComponent implements OnInit {\r\n\r\n  public pompiste: Pompiste;\r\n\r\n  constructor(public dialogRef: MatDialogRef<UpdatePompisteComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: any,\r\n              private pompisteService: PompisteService,\r\n              private notifservice: NotificationService) {\r\n    this.pompiste = data.pompiste;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onClose(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onClear(form: NgForm): void {\r\n    form.reset();\r\n  }\r\n\r\n  updatePompiste(): void {\r\n    this.pompisteService.updatePompiste(this.pompiste._id, this.pompiste).subscribe(res => {\r\n      this.pompisteService.getpompistesList();\r\n      this.dialogRef.close();\r\n      this.notifservice.success('Pompiste modifié avec succés');\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvcGFyYW1ldGVycy9wcml4Q2FyYnVyYW50L3ByaXgtY2FyYnVyYW50LWxpc3QvcHJpeC1jYXJidXJhbnQtYWRkL3ByaXgtY2FyYnVyYW50LWFkZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-toolbar>\\r\\n  <span>Ajouter prix carburant</span>\\r\\n  <span class=\\\"fill-remaining-space\\\"></span>\\r\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\r\\n    <mat-icon>clear</mat-icon>\\r\\n  </button>\\r\\n</mat-toolbar>\\r\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\" (submit)=\\\"addCarburant()\\\">\\r\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"300px\\\">\\r\\n    <mat-grid-tile>\\r\\n      <div class=\\\"controles-container\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-label>Carburant</mat-label>\\r\\n          <mat-select required [(ngModel)]=\\\"prixCarburant.carburant\\\" name=\\\"carburant\\\">\\r\\n            <mat-option>None</mat-option>\\r\\n            <mat-option *ngFor=\\\"let p of carburantService.carburants\\\" [value]=\\\"p._id\\\">{{p.ref}}</mat-option>\\r\\n          </mat-select>\\r\\n\\r\\n          <mat-error>Ce champ est obligatoire</mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Prix\\\" required type=\\\"number\\\" name=\\\"prix\\\" [(ngModel)]=\\\"prixCarburant.prix\\\">\\r\\n          <mat-error>Ce champ est obligatoire.</mat-error>\\r\\n        </mat-form-field>\\r\\n        <div class=\\\"button-row\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\"\\r\\n            [disabled]=\\\"angForm.pristine || angForm.invalid\\\">Ajouter Prix</button>\\r\\n          <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-grid-tile>\\r\\n  </mat-grid-list>\\r\\n</form>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { PrixCarburant } from 'app/shared/models/prixcarburant';\r\nimport { MatDialogRef } from '@angular/material';\r\nimport { PrixCarburantService } from 'app/shared/services/prix-carburant.service';\r\nimport { NotificationService } from 'app/shared/services/notification.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { CarburantService } from 'app/shared/services/carburant.service';\r\n\r\n@Component({\r\n  selector: 'app-prix-carburant-add',\r\n  templateUrl: './prix-carburant-add.component.html',\r\n  styleUrls: ['./prix-carburant-add.component.css']\r\n})\r\nexport class PrixCarburantAddComponent implements OnInit {\r\n\r\n  public prixCarburant: PrixCarburant;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<PrixCarburantAddComponent>,\r\n    private prixcarburantService: PrixCarburantService,\r\n    public carburantService: CarburantService,\r\n    private notifService: NotificationService) {\r\n    this.prixCarburant = new PrixCarburant();\r\n  }\r\n\r\n  addCarburant() {\r\n    this.prixCarburant.identifiantPrix = 'P1';\r\n    const datetime = new Date();\r\n    const date = datetime.toISOString().slice(0, 10);\r\n    this.prixCarburant.date = date;\r\n    this.prixcarburantService.updateIdentifiantPrix(this.prixCarburant.carburant)\r\n      .subscribe(\r\n        res => {\r\n          this.notifService.success('indentifiant prix on eté mis a jour avec succés');\r\n        },\r\n        err => console.log(err)\r\n      );\r\n    this.prixcarburantService.addCarburant(this.prixCarburant)\r\n      .subscribe(\r\n        res => {\r\n          this.prixcarburantService.getCarburantList();\r\n          this.dialogRef.close();\r\n          this.notifService.success('Carburant ajouter avec succés');\r\n        },\r\n        err => console.log(err)\r\n      );\r\n  }\r\n\r\n  onClose() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onClear(form: NgForm): void {\r\n    form.reset();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.carburantService.getCarburantsList();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvcGFyYW1ldGVycy9wcml4Q2FyYnVyYW50L3ByaXgtY2FyYnVyYW50LWxpc3QvcHJpeC1jYXJidXJhbnQtZWRpdC9wcml4LWNhcmJ1cmFudC1lZGl0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-toolbar>\\r\\n  <span>Modifier prix carburant</span>\\r\\n  <span class=\\\"fill-remaining-space\\\"></span>\\r\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\">\\r\\n    <mat-icon>clear</mat-icon>\\r\\n  </button>\\r\\n</mat-toolbar>\\r\\n<form mat-dialog-content class=\\\"normal-form\\\" #angForm=\\\"ngForm\\\">\\r\\n  <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"300px\\\">\\r\\n    <mat-grid-tile>\\r\\n      <div class=\\\"controles-container\\\">\\r\\n        <input type=\\\"hidden\\\" >\\r\\n\\r\\n        <mat-form-field>\\r\\n            <mat-label>Carburant</mat-label>\\r\\n            <mat-select  required [(ngModel)]=\\\"carburant.carburant\\\" name=\\\"carburant\\\">\\r\\n              <mat-option>None</mat-option>\\r\\n              <mat-option *ngFor=\\\"let p of carburantService.carburants\\\" [value]=\\\"p._id\\\">{{p.ref}}</mat-option>\\r\\n            </mat-select>\\r\\n            <mat-error>Carburant est obligatoire</mat-error>\\r\\n          </mat-form-field>\\r\\n\\r\\n        <mat-form-field>\\r\\n          <input matInput #prix placeholder=\\\"Prix\\\" required type=\\\"number\\\" name=\\\"prix\\\" [(ngModel)]=\\\"carburant.prix\\\" >\\r\\n          <mat-error>prix Carburant is required.</mat-error>\\r\\n        </mat-form-field>\\r\\n        <div class=\\\"button-row\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"angForm.pristine || angForm.invalid\\\"\\r\\n            (click)=\\\"updateCarburant()\\\">Modifier type</button>\\r\\n          <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear(angForm)\\\">Reset</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-grid-tile>\\r\\n  </mat-grid-list>\\r\\n</form>\\r\\n\"","import { Component, OnInit, Inject} from '@angular/core';\r\nimport { PrixCarburant } from 'app/shared/models/prixcarburant';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { PrixCarburantService } from 'app/shared/services/prix-carburant.service';\r\nimport { NotificationService } from 'app/shared/services/notification.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { CarburantService } from 'app/shared/services/carburant.service';\r\n\r\n@Component({\r\n  selector: 'app-prix-carburant-edit',\r\n  templateUrl: './prix-carburant-edit.component.html',\r\n  styleUrls: ['./prix-carburant-edit.component.css']\r\n})\r\nexport class PrixCarburantEditComponent implements OnInit {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<PrixCarburantEditComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private prixcarburantService: PrixCarburantService,\r\n    public carburantService: CarburantService,\r\n    private notifservice: NotificationService) {\r\n    this.carburant = data.carburant;\r\n  }\r\n\r\n  public carburant: PrixCarburant;\r\n\r\n\r\n  updateCarburant(): void {\r\n      this.prixcarburantService.updateCarburant(this.carburant._id, this.carburant)\r\n      .subscribe(res => {\r\n        this.prixcarburantService.getCarburantList();\r\n        this.dialogRef.close();\r\n        this.notifservice.success('Prix carburant modifié avec succés');\r\n      },\r\n        err => {\r\n          console.log(err);\r\n        });\r\n  }\r\n\r\n  onClose() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onClear(form: NgForm): void {\r\n    form.reset();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.carburantService.getCarburantsList();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0NvbXBvbmVudHMvcGFyYW1ldGVycy9wcml4Q2FyYnVyYW50L3ByaXgtY2FyYnVyYW50LWxpc3QvcHJpeC1jYXJidXJhbnQtbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"search-div\\\">\\r\\n  <button mat-raised-button (click)=\\\"addCarburantDialog()\\\">\\r\\n    <mat-icon>add</mat-icon>Ajouter\\r\\n  </button>\\r\\n  <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\r\\n    <input matInput placeholder=\\\"Search\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"search\\\" (keyup)=\\\"filter()\\\">\\r\\n    <button *ngIf=\\\"search\\\" mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"clearSearch()\\\">\\r\\n      <mat-icon>close</mat-icon>\\r\\n    </button>\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n<div class=\\\"mat-elevation-z8\\\">\\r\\n  <mat-table [dataSource]=\\\"prixcarburantService.carburantsMatTab\\\" matSort>\\r\\n    <ng-container matColumnDef=\\\"carburant\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Carburant</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.carburant}}</mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"prix\\\">\\r\\n      <mat-header-cell *matHeaderCellDef>Prix</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.prix}}</mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"identifiantPrix\\\">\\r\\n      <mat-header-cell *matHeaderCellDef>Identifiant prix</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.identifiantPrix}}</mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"date\\\">\\r\\n      <mat-header-cell *matHeaderCellDef>Date</mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.date}}</mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <mat-header-cell *matHeaderCellDef></mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let row\\\">\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"updateCarburantDialog(row)\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </button>\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deletePrixCarburantDialog(row._id, 'Prix carburant')\\\">\\r\\n          <mat-icon>delete_outline</mat-icon>\\r\\n        </button>\\r\\n      </mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"loading\\\">\\r\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\r\\n        Loading data ...\\r\\n      </mat-footer-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"noData\\\">\\r\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\r\\n        No data.\\r\\n      </mat-footer-cell>\\r\\n    </ng-container>\\r\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':prixcarburantService.carburantsMatTab!=null}\\\">\\r\\n    </mat-footer-row>\\r\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\"\\r\\n      [ngClass]=\\\"{'hide':!(prixcarburantService.carburantsMatTab!=null && prixcarburantService.carburantsMatTab.data.length==0)}\\\">\\r\\n    </mat-footer-row>\\r\\n  </mat-table>\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" [pageSize]=\\\"5\\\" showFirstLastButtons></mat-paginator>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort, MatPaginator, MatDialog } from '@angular/material';\r\nimport { PrixCarburantService } from 'app/shared/services/prix-carburant.service';\r\nimport { PrixCarburantAddComponent } from './prix-carburant-add/prix-carburant-add.component';\r\nimport { ConfirmDeleteComponent } from '@ComShared/confirm-delete/confirm-delete.component';\r\nimport { PrixCarburant } from 'app/shared/models/prixcarburant';\r\nimport { PrixCarburantEditComponent } from './prix-carburant-edit/prix-carburant-edit.component';\r\nimport { CarburantService } from 'app/shared/services/carburant.service';\r\n\r\n@Component({\r\n  selector: 'app-prix-carburant-list',\r\n  templateUrl: './prix-carburant-list.component.html',\r\n  styleUrls: ['./prix-carburant-list.component.css']\r\n})\r\nexport class PrixCarburantListComponent implements OnInit {\r\n\r\n  public displayedColumns: string[];\r\n  public search: string;\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  constructor(\r\n    public prixcarburantService: PrixCarburantService,\r\n    private carburantService: CarburantService,\r\n    private dialog: MatDialog) {\r\n    this.displayedColumns = ['carburant', 'prix', 'identifiantPrix', 'date', 'actions'];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.prixcarburantService.getCarburantList(this.sort, this.paginator);\r\n  }\r\n\r\n  updateCarburantDialog(carburant: PrixCarburant): void {\r\n    let ref: string;\r\n    ref = carburant.carburant;\r\n    this.carburantService.getByRef(ref).subscribe(res => {\r\n      carburant.carburant = res._id;\r\n      this.dialog.open(PrixCarburantEditComponent, {\r\n        panelClass: 'full-width-dialog',\r\n        data: { carburant : Object.assign({}, carburant) }\r\n      });\r\n      carburant.carburant = ref;\r\n    });\r\n  }\r\n\r\n  addCarburantDialog(): void {\r\n    this.dialog.open(PrixCarburantAddComponent, {\r\n      panelClass: 'full-width-dialog'\r\n    });\r\n  }\r\n\r\n  deletePrixCarburantDialog(id: string, msg: string): void {\r\n    this.dialog.open(ConfirmDeleteComponent, {\r\n      data: { id, msg }\r\n    });\r\n  }\r\n\r\n\r\n  filter(): void {\r\n    this.prixcarburantService.carburantsMatTab.filter = this.search.trim().toLowerCase();\r\n  }\r\n\r\n  clearSearch(): void {\r\n    this.search = '';\r\n    this.filter();\r\n  }\r\n\r\n}\r\n","import { NgModule, Component } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ParametersComponent } from './Components/parameters/parameters.component';\r\nimport { RegisterComponent } from './Components/Authentification/register/register.component';\r\nimport { LoginComponent } from './Components/Authentification/login/login.component';\r\nimport { HomeComponent } from './Components/home/home.component';\r\nimport { AuthGuard } from './shared/Guards/auth.guard';\r\nimport { CheckCurrentSessionComponent } from './Components/check-current-session/check-current-session.component';\r\nimport { InventaireComponent } from './Components/inventaire/inventaire.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo : '/login',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: 'register',\r\n    component: RegisterComponent\r\n  },\r\n  {\r\n    path: 'parameters',\r\n    component: ParametersComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'home',\r\n    component: HomeComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'session',\r\n    component: CheckCurrentSessionComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'inventaire',\r\n    component: InventaireComponent,\r\n    canActivate: [AuthGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\r\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/home\\\">SS</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\"\\r\\n    aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" *ngIf=\\\"authService.loggedIn()\\\" routerLink=\\\"/session\\\" routerLinkActive=\\\"active\\\">Session</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" *ngIf=\\\"authService.loggedIn()\\\" routerLink=\\\"/parameters\\\"\\r\\n          routerLinkActive=\\\"active\\\">Parametres</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" *ngIf=\\\"authService.loggedIn()\\\" routerLink=\\\"/inventaire\\\" routerLinkActive=\\\"active\\\">Inventaire</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n    <ul class=\\\"navbar-nav\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" *ngIf=\\\"!authService.loggedIn()\\\" routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">Login</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" *ngIf=\\\"authService.loggedIn()\\\" routerLinkActive=\\\"active\\\"\\r\\n          (click)=\\\"authService.logoutUser()\\\">Logout</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\nimport { AuthService } from './shared/services/auth.service';\nimport { Event, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'App';\n\n  constructor(\n    public authService: AuthService,\n    private _router: Router) {\n    this._router.events.subscribe((event: Event) => {\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './Components/Authentification/login/login.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RegisterComponent } from './Components/Authentification/register/register.component';\r\nimport { ParametersComponent } from './Components/parameters/parameters.component';\r\nimport { HomeComponent } from './Components/home/home.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AuthService } from './shared/services/auth.service';\r\nimport { AuthGuard } from './shared/Guards/auth.guard';\r\nimport { TokenInterceptorService } from './shared/services/token-interceptor.service';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CarteBonTypeService } from './shared/services/carte-bon-type.service';\r\nimport { CardTypeAddComponent } from '@ComCardType/card-type-add/card-type-add.component';\r\nimport { CardTypeEditComponent } from '@ComCardType/card-type-edit/card-type-edit.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from './material/material.module';\r\nimport { ClientListComponent } from '@ComClient/client-list.component';\r\nimport { MoreDetailsComponent } from '@ComClient/more-details/more-details.component';\r\nimport { AddClientComponent } from '@ComClient/add-client/add-client.component';\r\nimport { ConfirmDeleteComponent } from '@ComShared/confirm-delete/confirm-delete.component';\r\nimport { UpdateClientComponent } from '@ComClient/update-client/update-client.component';\r\nimport { CardTypeListComponent } from '@ComCardType/card-type-list.component';\r\nimport { AddCiterneComponent } from '@ComCiterne/add-citerne/add-citerne.component';\r\nimport { CiterneListComponent } from '@ComCiterne/citerne-list.component';\r\nimport { UpdateCiterneComponent } from '@ComCiterne/update-citerne/update-citerne.component';\r\nimport { MoreCiterneDetailsComponent } from '@ComCiterne/more-citerne-details/more-citerne-details.component';\r\nimport { ReleveIndexListComponent } from '@ComRecette/releveIndex-list/releveIndex-list.component';\r\nimport { ReleveIndexAddComponent } from '@ComRecette/releveIndex-list/releveIndex-add/releveIndex-add.component';\r\nimport { ReleveIndexEditComponent } from '@ComRecette/releveIndex-list/releveIndex-edit/releveIndex-edit.component';\r\nimport { IndexListComponent } from '@ComIndex/index-list.component';\r\nimport { IndexAddComponent } from '@ComIndex/index-add/index-add.component';\r\nimport { IndexEditComponent } from '@ComIndex/index-edit/index-edit.component';\r\nimport { DistributeurListComponent } from '@ComDistributeur/distributeur-list.component';\r\nimport { DistributeurAddComponent } from '@ComDistributeur/distributeur-add/distributeur-add.component';\r\nimport { DistributeurEditComponent } from '@ComDistributeur/distributeur-edit/distributeur-edit.component';\r\nimport { PrixCarburantListComponent } from '@ComCarburant/prix-carburant-list.component';\r\nimport { PrixCarburantAddComponent } from '@ComCarburant/prix-carburant-add/prix-carburant-add.component';\r\nimport { PrixCarburantEditComponent } from '@ComCarburant/prix-carburant-edit/prix-carburant-edit.component';\r\nimport { PompisteListComponent } from './Components/parameters/pompiste/pompiste-list/pompiste-list.component';\r\nimport { AddPompisteComponent } from './Components/parameters/pompiste/pompiste-list/add-pompiste/add-pompiste.component';\r\nimport { UpdatePompisteComponent } from './Components/parameters/pompiste/pompiste-list/update-pompiste/update-pompiste.component';\r\nimport { SessionPompisteListComponent } from './Components/check-current-session/session-pompiste-list/session-pompiste-list.component';\r\nimport { CheckCurrentSessionComponent } from './Components/check-current-session/check-current-session.component';\r\nimport { CalendarComponent } from './Components/home/calendar/calendar.component';\r\nimport { ListEventsComponent } from './Components/home/calendar/list-events/list-events.component';\r\nimport { UpdateEventComponent } from './Components/home/calendar/list-events/update-event/update-event.component';\r\nimport { CarburantComponent } from './Components/parameters/carburant/carburant.component';\r\nimport { AddCarburantComponent } from './Components/parameters/carburant/add-carburant/add-carburant.component';\r\nimport { UpdateCarburantComponent } from './Components/parameters/carburant/update-carburant/update-carburant.component';\r\nimport { MatExpansionModule } from '@angular/material';\r\nimport { ConfirmSessionCloserComponent } from './Components/check-current-session/confirm-session-closer/confirm-session-closer.component';\r\nimport { ModifySessionComponent } from './Components/check-current-session/modify-session/modify-session.component';\r\nimport { OpenSessionComponent } from './Components/check-current-session/open-session/open-session.component';\r\nimport { ShowDetailsComponent } from '@ComShowDet/show-details.component';\r\nimport { CardBonListComponent } from '@ComCarteBon/card-bon-list.component';\r\nimport { CardBonEditComponent } from '@ComCarteBon/card-bon-edit/card-bon-edit.component';\r\nimport { CardBonMoreDetailsComponent } from '@ComCarteBon/card-bon-more-details/card-bon-more-details.component';\r\nimport { BonValeurListComponent } from '@ComBonValeur/bon-valeur-list.component';\r\nimport { BonValeurEditComponent } from '@ComBonValeur/bon-valeur-edit/bon-valeur-edit.component';\r\nimport { ChequeListComponent } from './Components/inventaire/Cheque/cheque-list/cheque-list.component';\r\nimport { ChequeEditComponent } from './Components/inventaire/Cheque/cheque-list/cheque-edit/cheque-edit.component';\r\nimport { NgProgressModule, NgProgressInterceptor } from 'ngx-progressbar';\r\nimport { InventaireComponent } from './Components/inventaire/inventaire.component';\r\nimport { RecetteCarteBonComponent } from '@ComShowDet/recette-carte-bon/recette-carte-bon.component';\r\nimport { RecetteBonValeurComponent } from '@ComShowDet/recette-bon-valeur/recette-bon-valeur.component';\r\nimport { RecetteChequeComponent } from '@ComShowDet/recette-cheque/recette-cheque.component';\r\nimport { RecetteChequeAddComponent } from '@ComShowDet/recette-cheque/recette-cheque-add/recette-cheque-add.component';\r\nimport { RecetteChequeEditComponent } from '@ComShowDet/recette-cheque/recette-cheque-edit/recette-cheque-edit.component';\r\nimport { RecetteCarteBonAddComponent } from '@ComShowDet/recette-carte-bon/recette-carte-bon-add/recette-carte-bon-add.component';\r\nimport { RecetteCarteBonEditComponent } from '@ComShowDet/recette-carte-bon/recette-carte-bon-edit/recette-carte-bon-edit.component';\r\nimport { RecetteCarteBonMoreDetailsComponent } from '@ComRecetteCarteBMD/recette-carte-bon-more-details.component';\r\nimport { RecetteBonValeurAddComponent } from '@ComShowDet/recette-bon-valeur/recette-bon-valeur-add/recette-bon-valeur-add.component';\r\nimport { RecetteBonValeurEditComponent } from '@ComShowDet/recette-bon-valeur/recette-bon-valeur-edit/recette-bon-valeur-edit.component';\r\nimport { RecetteChequeMoreDetailsComponent } from '@ComRecetteChequeMD/recette-cheque-more-details.component';\r\nimport { RecetteCreditsComponent } from '@ComShowDet/recette-credits/recette-credits.component';\r\nimport { RecetteCreditsAddComponent } from '@ComShowDet/recette-credits/recette-credits-add/recette-credits-add.component';\r\nimport { RecetteCreditsEditComponent } from '@ComShowDet/recette-credits/recette-credits-edit/recette-credits-edit.component';\r\nimport { CreditListComponent } from './Components/inventaire/Credit/credit-list/credit-list.component';\r\nimport { CreditAddComponent } from './Components/inventaire/Credit/credit-list/credit-add/credit-add.component';\r\nimport { CreditEditComponent } from './Components/inventaire/Credit/credit-list/credit-edit/credit-edit.component';\r\nimport { RecetteStegEtAutresComponent } from '@ComRecetteSEA/recette-steg-et-autres.component';\r\nimport { RecetteStegEtAutresAddComponent } from '@ComRecetteSEA/recette-steg-et-autres-add/recette-steg-et-autres-add.component';\r\nimport { RecetteStegEtAutresEditComponent } from '@ComRecetteSEA/recette-steg-et-autres-edit/recette-steg-et-autres-edit.component';\r\nimport { StegEtAutresListComponent } from '@ComStegEtAutre/steg-et-autres-list.component';\r\nimport { StegEtAutresEditComponent } from '@ComStegEtAutre/steg-et-autres-edit/steg-et-autres-edit.component';\r\nimport { StegEtAutresMoreDetailsComponent } from '@ComStegEtAutre/steg-et-autres-more-details/steg-et-autres-more-details.component';\r\nimport { RecetteStegEtAutresMoreDetailsComponent } from '@ComSEAMD';\r\nimport { BankListComponent } from './Components/parameters/bank/bank-list/bank-list.component';\r\nimport { BankAddComponent } from './Components/parameters/bank/bank-list/bank-add/bank-add.component';\r\nimport { BankEditComponent } from './Components/parameters/bank/bank-list/bank-edit/bank-edit.component';\r\nimport { BankMoreDetailsComponent } from './Components/parameters/bank/bank-list/bank-more-details/bank-more-details.component';\r\nimport { TanksComponent } from './Components/home/tanks/tanks.component';\r\nimport { EspeceListComponent } from './Components/inventaire/Espece/espece-list/espece-list.component';\r\nimport { EspeceEditComponent } from './Components/inventaire/Espece/espece-list/espece-edit/espece-edit.component';\r\nimport { RecetteEspeceComponent } from '@ComRecetteEspece/recette-espece.component';\r\nimport { RecetteEspeceAddComponent } from '@ComRecetteEspece/recette-espece-add/recette-espece-add.component';\r\nimport { RecetteEspeceEditComponent } from '@ComRecetteEspece/recette-espece-edit/recette-espece-edit.component';\r\nimport { SubventionPecheListComponent } from '@ComSubventionPeche/subvention-peche-list.component';\r\nimport { SubventionPecheEditComponent } from '@ComSubventionPeche/subvention-peche-edit/subvention-peche-edit.component';\r\nimport { SubventionPecheMoreDetailsComponent } from '@ComSubventionPecheMD/subvention-peche-more-details.component';\r\nimport { RecetteSubventionPecheComponent } from '@ComRecetteSubP/recette-subvention-peche.component';\r\nimport { RecetteSubventionPecheAddComponent } from '@ComRecetteSubP/recette-subvention-peche-add/recette-subvention-peche-add.component';\r\nimport { RecetteSubventionPecheEditComponent } from '@ComRecetteSubP/recette-subvention-peche-edit/recette-subvention-peche-edit.component';\r\nimport { RecetteSubventionPecheMoreDetailsComponent } from '@ComRecetteSubPMD/recette-subvention-peche-more-details.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    ParametersComponent,\r\n    HomeComponent,\r\n    CardTypeAddComponent,\r\n    CardTypeEditComponent,\r\n    ClientListComponent,\r\n    MoreDetailsComponent,\r\n    AddClientComponent,\r\n    ConfirmDeleteComponent,\r\n    UpdateClientComponent,\r\n    CardTypeListComponent,\r\n    AddCiterneComponent,\r\n    CiterneListComponent,\r\n    UpdateCiterneComponent,\r\n    ReleveIndexListComponent,\r\n    ReleveIndexAddComponent,\r\n    ReleveIndexEditComponent,\r\n    IndexListComponent,\r\n    IndexAddComponent,\r\n    IndexEditComponent,\r\n    DistributeurListComponent,\r\n    DistributeurAddComponent,\r\n    DistributeurEditComponent,\r\n    PrixCarburantListComponent,\r\n    PrixCarburantAddComponent,\r\n    PrixCarburantEditComponent,\r\n    PompisteListComponent,\r\n    AddPompisteComponent,\r\n    UpdatePompisteComponent,\r\n    SessionPompisteListComponent,\r\n    CheckCurrentSessionComponent,\r\n    CalendarComponent,\r\n    ListEventsComponent,\r\n    UpdateEventComponent,\r\n    MoreCiterneDetailsComponent,\r\n    CarburantComponent,\r\n    AddCarburantComponent,\r\n    UpdateCarburantComponent,\r\n    ConfirmSessionCloserComponent,\r\n    ModifySessionComponent,\r\n    OpenSessionComponent,\r\n    ShowDetailsComponent,\r\n    CardBonListComponent,\r\n    CardBonEditComponent,\r\n    CardBonMoreDetailsComponent,\r\n    BonValeurListComponent,\r\n    BonValeurEditComponent,\r\n    ChequeListComponent,\r\n    ChequeEditComponent,\r\n    InventaireComponent,\r\n    RecetteCarteBonComponent,\r\n    RecetteBonValeurComponent,\r\n    RecetteChequeComponent,\r\n    RecetteChequeAddComponent,\r\n    RecetteChequeEditComponent,\r\n    RecetteCarteBonAddComponent,\r\n    RecetteCarteBonEditComponent,\r\n    RecetteCarteBonMoreDetailsComponent,\r\n    RecetteBonValeurAddComponent,\r\n    RecetteBonValeurEditComponent,\r\n    RecetteChequeMoreDetailsComponent,\r\n    RecetteCreditsComponent,\r\n    RecetteCreditsAddComponent,\r\n    RecetteCreditsEditComponent,\r\n    CreditListComponent,\r\n    CreditAddComponent,\r\n    CreditEditComponent,\r\n    RecetteStegEtAutresComponent,\r\n    RecetteStegEtAutresAddComponent,\r\n    RecetteStegEtAutresEditComponent,\r\n    RecetteStegEtAutresMoreDetailsComponent,\r\n    BankListComponent,\r\n    BankAddComponent,\r\n    BankEditComponent,\r\n    BankMoreDetailsComponent,\r\n    TanksComponent,\r\n    EspeceListComponent,\r\n    EspeceEditComponent,\r\n    RecetteEspeceComponent,\r\n    RecetteEspeceAddComponent,\r\n    RecetteEspeceEditComponent,\r\n    StegEtAutresListComponent,\r\n    StegEtAutresEditComponent,\r\n    StegEtAutresMoreDetailsComponent,\r\n    SubventionPecheListComponent,\r\n    SubventionPecheEditComponent,\r\n    SubventionPecheMoreDetailsComponent,\r\n    RecetteSubventionPecheComponent,\r\n    RecetteSubventionPecheAddComponent,\r\n    RecetteSubventionPecheEditComponent,\r\n    RecetteSubventionPecheMoreDetailsComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    MatExpansionModule,\r\n    NgProgressModule\r\n  ],\r\n  entryComponents: [\r\n    CardTypeAddComponent,\r\n    CardTypeEditComponent,\r\n    MoreDetailsComponent,\r\n    AddClientComponent,\r\n    ConfirmDeleteComponent,\r\n    UpdateClientComponent,\r\n    AddCiterneComponent,\r\n    UpdateCiterneComponent,\r\n    ReleveIndexAddComponent,\r\n    ReleveIndexEditComponent,\r\n    IndexAddComponent,\r\n    IndexEditComponent,\r\n    DistributeurAddComponent,\r\n    DistributeurEditComponent,\r\n    PrixCarburantAddComponent,\r\n    PrixCarburantEditComponent,\r\n    AddPompisteComponent,\r\n    UpdatePompisteComponent,\r\n    SessionPompisteListComponent,\r\n    UpdateEventComponent,\r\n    MoreCiterneDetailsComponent,\r\n    AddCarburantComponent,\r\n    UpdateCarburantComponent,\r\n    ConfirmSessionCloserComponent,\r\n    ModifySessionComponent,\r\n    OpenSessionComponent,\r\n    ShowDetailsComponent,\r\n    CardBonEditComponent,\r\n    CardBonMoreDetailsComponent,\r\n    BonValeurEditComponent,\r\n    ChequeEditComponent,\r\n    RecetteChequeAddComponent,\r\n    RecetteChequeEditComponent,\r\n    RecetteCarteBonAddComponent,\r\n    RecetteCarteBonEditComponent,\r\n    RecetteCarteBonMoreDetailsComponent,\r\n    RecetteBonValeurAddComponent,\r\n    RecetteBonValeurEditComponent,\r\n    CreditAddComponent,\r\n    CreditEditComponent,\r\n    RecetteCreditsAddComponent,\r\n    RecetteCreditsEditComponent,\r\n    StegEtAutresEditComponent,\r\n    StegEtAutresMoreDetailsComponent,\r\n    RecetteStegEtAutresAddComponent,\r\n    RecetteStegEtAutresEditComponent,\r\n    RecetteStegEtAutresMoreDetailsComponent,\r\n    BankAddComponent,\r\n    BankEditComponent,\r\n    BankMoreDetailsComponent,\r\n    RecetteEspeceAddComponent,\r\n    RecetteEspeceEditComponent,\r\n    EspeceEditComponent,\r\n    RecetteSubventionPecheAddComponent,\r\n    RecetteSubventionPecheEditComponent,\r\n    RecetteSubventionPecheMoreDetailsComponent,\r\n    SubventionPecheEditComponent,\r\n    SubventionPecheMoreDetailsComponent,\r\n  ],\r\n  providers: [AuthService, AuthGuard, IndexListComponent,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptorService,\r\n      multi: true\r\n    }, CarteBonTypeService,\r\n    { provide: HTTP_INTERCEPTORS, useClass: NgProgressInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport * as Material from '@angular/material';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    Material.MatButtonModule,\r\n    Material.MatCheckboxModule,\r\n    Material.MatTableModule,\r\n    Material.MatIconModule,\r\n    Material.MatPaginatorModule,\r\n    Material.MatSortModule,\r\n    Material.MatFormFieldModule,\r\n    Material.MatInputModule,\r\n    Material.MatDialogModule,\r\n    Material.MatToolbarModule,\r\n    Material.MatGridListModule,\r\n    Material.MatSnackBarModule,\r\n    Material.MatDividerModule,\r\n    Material.MatListModule,\r\n    Material.MatSelectModule,\r\n    Material.MatTooltipModule,\r\n    Material.MatCardModule,\r\n    Material.MatDatepickerModule,\r\n    Material.MatNativeDateModule,\r\n    Material.MatBadgeModule,\r\n    Material.MatRadioModule\r\n  ],\r\n  exports: [\r\n    Material.MatButtonModule,\r\n    Material.MatCheckboxModule,\r\n    Material.MatTableModule,\r\n    Material.MatIconModule,\r\n    Material.MatPaginatorModule,\r\n    Material.MatSortModule,\r\n    Material.MatFormFieldModule,\r\n    Material.MatInputModule,\r\n    Material.MatDialogModule,\r\n    Material.MatToolbarModule,\r\n    Material.MatGridListModule,\r\n    Material.MatSnackBarModule,\r\n    Material.MatDividerModule,\r\n    Material.MatListModule,\r\n    Material.MatSelectModule,\r\n    Material.MatTooltipModule,\r\n    Material.MatCardModule,\r\n    Material.MatDatepickerModule,\r\n    Material.MatNativeDateModule,\r\n    Material.MatBadgeModule,\r\n    Material.MatRadioModule\r\n  ]\r\n})\r\nexport class MaterialModule { }\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router) {\n\n  }\n\n  canActivate(): boolean {\n    if (this.authService.loggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n\n}\n","export class Cheque {\r\n\r\n  constructor() {\r\n    this.payeeName = '';\r\n    this.date = '';\r\n    this.chequeValue = 0;\r\n    this.sessionId = '';\r\n    this.state = '';\r\n  }\r\n\r\n  public _id?: string;\r\n  public payeeName: string;\r\n  public chequeNumber: string;\r\n  public bankName: string;\r\n  public chequeValue: number;\r\n  public sessionId: string;\r\n  public state: string;\r\n  public rib: string;\r\n  public agency: string;\r\n  public date: string;\r\n\r\n\r\n}\r\n","export class Index {\r\n  constructor() {\r\n    this.reference = '';\r\n    this.valeurIndex = 0;\r\n    this.carburant = '';\r\n    this.citerne = '';\r\n    this.distributeur = '';\r\n  }\r\n  public _id?: string;\r\n  public reference: string;\r\n  public valeurIndex: number;\r\n  public dernierDate: string;\r\n  public carburant: string;\r\n  public citerne: string;\r\n  public distributeur: string;\r\n}\r\n","export class ReleveIndex {\r\n  constructor() {\r\n    this.reference = '';\r\n    this.depart = 0;\r\n    this.arrive = 0;\r\n    this.quantite = 0;\r\n    this.prix = 0.0;\r\n    this.pompiste = {\r\n      _id: '',\r\n      nom: ''\r\n    };\r\n  }\r\n  public _id?: string;\r\n  public reference: string;\r\n  public depart: number;\r\n  public arrive: number;\r\n  public quantite: number;\r\n  public prix: number;\r\n  public pompiste: {\r\n    _id: string,\r\n    nom: string\r\n  };\r\n}\r\n","export class StegEtAutre {\r\n\r\n  constructor() {\r\n    this.cardNumber = '';\r\n    this.clientName = '';\r\n    this.clientNumber = '';\r\n    this.carburant = '';\r\n    this.chauffeur = '';\r\n    this.literPrice = 0;\r\n    this.numberOfCards = 0;\r\n    this.numberOfLiters = 0;\r\n    this.cardValue = 0;\r\n    this.totalValue = 0;\r\n    this.sessionId = '';\r\n    this.date = '';\r\n  }\r\n\r\n  public _id?: string;\r\n  public cardNumber: string;\r\n  public clientNumber: string;\r\n  public clientName: string;\r\n  public chauffeur: string;\r\n  public carburant: string;\r\n  public numberOfLiters: number;\r\n  public literPrice: number;\r\n  public numberOfCards: number;\r\n  public cardValue: number;\r\n  public totalValue: number;\r\n  public sessionId: string;\r\n  public date: string;\r\n}\r\n","export class Bank {\r\n\r\n  constructor() {\r\n    this.bankName = '';\r\n    this.bankCode = 0;\r\n    this.agencyName = '';\r\n    this.agencyCode = 0;\r\n    this.comptoir = 0;\r\n    this.adress = '';\r\n    this.tel = 0;\r\n    this.responsibleName = '';\r\n    this.dAgrem = '';\r\n    this.dOuv = '';\r\n    this.dFerm = '';\r\n  }\r\n\r\n  public _id?: string;\r\n  public bankName: string;\r\n  public bankCode: number;\r\n  public agencyCode: number;\r\n  public agencyName: string;\r\n  public comptoir: number;\r\n  public adress: string;\r\n  public tel: number;\r\n  public responsibleName: string;\r\n  public dAgrem: string;\r\n  public dOuv: string;\r\n  public dFerm: string;\r\n\r\n}\r\n","export class BonValeur {\r\n\r\n  constructor() {\r\n    this.cardValue = 0;\r\n    this.numberOfCards = 0;\r\n    this.totalValue = 0;\r\n    this.date = '';\r\n    this.sessionId = '';\r\n    this.state = '';\r\n  }\r\n\r\n  public _id?: string;\r\n  public cardValue: number;\r\n  public numberOfCards: number;\r\n  public totalValue: number;\r\n  public sessionId: string;\r\n  public state: string;\r\n  public date: string;\r\n}\r\n","export class Carburant {\r\n\r\n    constructor() {\r\n      this.ref = '';\r\n      this.description = '';\r\n    }\r\n\r\n    public _id?: string;\r\n    public ref: string;\r\n    public description: string;\r\n\r\n  }\r\n","export class CardType {\r\n\r\n  constructor() {\r\n    this.cardCode = '';\r\n    this.cardDescription = '';\r\n    this.numberOfLiters = 0;\r\n  }\r\n\r\n  public _id?: string;\r\n  public cardCode: string;\r\n  public cardCarburant: string;\r\n  public numberOfLiters: number;\r\n  public cardDescription: string;\r\n}\r\n","export class CarteBon {\r\n\r\n  constructor() {\r\n    this.cardType = '';\r\n    this.cardValue = 0;\r\n    this.numberOfCards = 0;\r\n    this.totalValue = 0;\r\n    this.sessionId = '';\r\n    this.state = '';\r\n    this.date = '';\r\n  }\r\n\r\n  public _id?: string;\r\n  public cardType: string;\r\n  public cardValue: number;\r\n  public numberOfCards: number;\r\n  public totalValue: number;\r\n  public sessionId: string;\r\n  public state: string;\r\n  public date: string;\r\n}\r\n","export class Citerne {\r\n  constructor() {\r\n    this.code = '';\r\n    this.libelle = '';\r\n    this.capacite = 0;\r\n    this.carburant = '';\r\n    this.tolerance = 0;\r\n    this.stock = 0;\r\n    this.ordre = 0;\r\n    this.etat = 'actif';\r\n\r\n  }\r\n  public _id?: string;\r\n  public code: string;\r\n  public libelle: string;\r\n  public capacite: number;\r\n  public carburant: string;\r\n  public tolerance: number;\r\n  public stock: number;\r\n  public ordre: number;\r\n  public etat: string;\r\n\r\n}\r\n","export class Client {\r\n    constructor() {\r\n        this.name = '';\r\n        this.number = '';\r\n        this.email = '';\r\n        this.type = '';\r\n        this.state = 'actif';\r\n        this.matFisc = '';\r\n        this.phone = null;\r\n        this.plafondCredit = null;\r\n        this.address = {\r\n            city: '',\r\n            postal: null\r\n        };\r\n        this.fax = null;\r\n        this.region = '';\r\n    }\r\n    public _id?: string;\r\n    public name: string;\r\n    public number: string;\r\n    public email: string;\r\n    public type: string;\r\n    public state: string;\r\n    public matFisc: string;\r\n    public phone: number;\r\n    public plafondCredit: number;\r\n    public address: {\r\n        city: string,\r\n        postal: number\r\n    };\r\n    public fax: number;\r\n    public region: string;\r\n}\r\n","export class Credit {\r\n\r\n  constructor() {\r\n    this.clientName = '';\r\n    this.clientNumber = '';\r\n    this.creditOriginalValue = 0;\r\n    this.creditRestValue = 0;\r\n    this.date = '';\r\n  }\r\n\r\n  public _id?: string;\r\n  public clientNumber: string;\r\n  public clientName: string;\r\n  public creditOriginalValue: number;\r\n  public creditRestValue: number;\r\n  public date: string;\r\n}\r\n","export class Distributeur {\r\n  constructor() {\r\n    this.reference = '';\r\n    this.libelle = '';\r\n    this.numImmatriculation = 0;\r\n    this.anneeFabrication = 0;\r\n  }\r\n  public _id?: string;\r\n  public reference: string;\r\n  public libelle: string;\r\n  public numImmatriculation: number;\r\n  public anneeFabrication: number;\r\n}\r\n","export class Espece {\r\n  constructor() {\r\n    this.type = 0;\r\n    this.quantity = 0;\r\n    this.totalValue = 0;\r\n    this.sessionId = '';\r\n    this.state = '';\r\n  }\r\n  public _id?: string;\r\n  public type: number;\r\n  public quantity: number;\r\n  public totalValue: number;\r\n  public sessionId: string;\r\n  public state: string;\r\n}\r\n","export class Event {\r\n    public _id?: string;\r\n    public date: string;\r\n    public description: string;\r\n}\r\n","export class PayementCredit {\r\n\r\n  constructor() {\r\n    this.clientName = '';\r\n    this.clientNumber = '';\r\n    this.payementValue = 0;\r\n    this.sessionId = '';\r\n    this.date = '';\r\n  }\r\n\r\n  public _id?: string;\r\n  public clientNumber: string;\r\n  public clientName: string;\r\n  public payementValue: number;\r\n  public sessionId: string;\r\n  public date: string;\r\n}\r\n","export class Pompiste {\r\n    constructor() {\r\n        this._id = null;\r\n        this.email = '';\r\n        this.name = '';\r\n        this.phone = null;\r\n    }\r\n\r\n    public _id?: string;\r\n    public name: string;\r\n    public email: string;\r\n    public phone: number;\r\n}\r\n","export class PrixCarburant {\r\n\r\n  constructor() {\r\n    this.carburant = '';\r\n    this.prix = 0;\r\n    this.identifiantPrix = '';\r\n    this.date = '';\r\n  }\r\n\r\n  public _id?: string;\r\n  public carburant: string;\r\n  public prix: number;\r\n  public identifiantPrix: string;\r\n  public date: string;\r\n}\r\n","export class Session {\r\n  constructor() {\r\n      this.date = '';\r\n      this.poste = '';\r\n      this.description = '';\r\n      this.state = 'Open';\r\n  }\r\n  public _id?: string;\r\n  public date: string;\r\n  public poste: string;\r\n  public description: string;\r\n  public state: string;\r\n  public personnes: [\r\n    {\r\n      _id?: string,\r\n      id_pompiste: string,\r\n      nom_pompiste: string,\r\n      heures_pres: number,\r\n      indexs: string[]\r\n    }\r\n  ];\r\n}\r\n","export class SubventionPeche {\r\n\r\n  constructor() {\r\n    this.payeeName = '';\r\n    this.cardNumber = 0;\r\n    this.motorPower = 0;\r\n    this.boatName = '';\r\n    this.numberOfLiters = 0;\r\n    this.cardValue = 0;\r\n    this.literPrice = 0;\r\n    this.sessionId = '';\r\n    this.state = '';\r\n    this.date = '';\r\n  }\r\n  public _id?: string;\r\n  public cardNumber: number;\r\n  public payeeName: string;\r\n  public motorPower: number;\r\n  public boatName: string;\r\n  public numberOfLiters: number;\r\n  public cardValue: number;\r\n  public literPrice: number;\r\n  public sessionId: string;\r\n  public state: string;\r\n  public date: string;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private registredUrl = 'https://ppp-ss.herokuapp.com/api/register';\n  private loginUrl = 'https://ppp-ss.herokuapp.com/api/login';\n  constructor(private http: HttpClient, private router: Router) { }\n\n  registerUser(user) {\n    return this.http.post<any>(this.registredUrl, user);\n  }\n\n  loginUser(user) {\n    return this.http.post<any>(this.loginUrl, user);\n  }\n\n  loggedIn() {\n    return !!localStorage.getItem('token');\n  }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n\n  logoutUser() {\n    localStorage.removeItem('token');\n    this.router.navigate(['/login']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Bank } from '../models/bank';\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BankService {\n\n  public banks: Bank[];\n  public banksMatTab: MatTableDataSource<any>;\n\n  private uri = 'https://ppp-ss.herokuapp.com/bank';\n\n  constructor(private http: HttpClient) {\n    this.banks = [];\n    this.banksMatTab = new MatTableDataSource(this.banks);\n  }\n\n  // get banks list\n  getBanksList(sort?: MatSort, paginator?: MatPaginator): void {\n    this.http.get<Bank[]>(`${this.uri}/list`).subscribe(res => {\n      const key = 'banks';\n      this.banks = res[key];\n      this.banks = this.banks.reverse();\n      this.banksMatTab.data = this.banks;\n      if (sort) {\n        this.banksMatTab.sort = sort;\n      }\n      if (paginator) {\n        this.banksMatTab.paginator = paginator;\n      }\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n  // add new bank\n  addBank(bank: Bank): Observable<any> {\n    const request = { bank };\n    return this.http.post(`${this.uri}/add`, request);\n  }\n\n  // delete bank\n  deleteBank(id: string): Observable<any> {\n    return this.http.delete(`${this.uri}/delete/${id}`);\n  }\n\n  // update bank\n  updateBank(id: string, bank: Bank): Observable<any> {\n    const request = {\n      bank\n    };\n    return this.http.put(`${this.uri}/update/${id}`, request);\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BonValeur } from '../models/bonValeur.model';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BonValeurService {\n\n  public bonValeurs: BonValeur[];\n  public bonValeursMatTab: MatTableDataSource<any>;\n\n  private uri = 'https://ppp-ss.herokuapp.com/bonValeur';\n\n  constructor(private http: HttpClient) {\n    this.bonValeurs = [];\n    this.bonValeursMatTab = new MatTableDataSource(this.bonValeurs);\n  }\n\n  getTotalPrevue(): string {\n    return this.bonValeurs.map(t => t.totalValue).reduce((acc, value) => acc + value, 0).toFixed(3);\n  }\n\n  // get bons Valeur list\n  getBonValeursList(sort?: MatSort, paginator?: MatPaginator): void {\n    this.http.get<BonValeur[]>(`${this.uri}/list`).subscribe(res => {\n      const key = 'bonValeurs';\n      this.bonValeurs = res[key];\n      this.bonValeurs = this.bonValeurs.reverse();\n      this.bonValeursMatTab.data = this.bonValeurs;\n      if (sort) {\n        this.bonValeursMatTab.sort = sort;\n      }\n      if (paginator) {\n        this.bonValeursMatTab.paginator = paginator;\n      }\n\n\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n  // get bons Valeur list by session id\n  getBonValeursListById(sessionId: string, sort?: MatSort, paginator?: MatPaginator): void {\n    this.http.get<BonValeur[]>(`${this.uri}/list`).subscribe(res => {\n      const key = 'bonValeurs';\n      this.bonValeurs = res[key];\n      this.bonValeurs = this.bonValeurs.reverse();\n      this.bonValeurs = this.bonValeurs.filter(x => x.sessionId === sessionId);\n      this.bonValeursMatTab.data = this.bonValeurs;\n      if (sort) {\n        this.bonValeursMatTab.sort = sort;\n      }\n      if (paginator) {\n        this.bonValeursMatTab.paginator = paginator;\n      }\n\n\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n  // add new bon Valeur\n  addBonValeur(bonValeur: BonValeur): Observable<any> {\n    const request = { bonValeur };\n    return this.http.post(`${this.uri}/add`, request);\n  }\n\n  // delete bon Valeur\n  deleteBonValeur(id: string): Observable<any> {\n    return this.http.delete(`${this.uri}/delete/${id}`);\n  }\n\n  // update bon Valeur\n  updateBonValeur(id: string, bonValeur: BonValeur): Observable<any> {\n    const request = {\n      bonValeur\n    };\n    return this.http.put(`${this.uri}/update/${id}`, request);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Carburant } from '../models/carburant';\r\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CarburantService {\r\n\r\n  public carburants: Carburant[];\r\n  public carburantsMatTab: MatTableDataSource<any>;\r\n  private uri = 'https://ppp-ss.herokuapp.com/carburant';\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.carburants = [];\r\n    this.carburantsMatTab = new MatTableDataSource(this.carburants);\r\n  }\r\n\r\n  // get carburants list\r\n  getCarburantsList(sort?: MatSort, paginator?: MatPaginator): void {\r\n    this.http.get<Carburant[]>(`${this.uri}/list`).subscribe((data: Carburant[]) => {\r\n      this.carburants = data;\r\n      this.carburants = this.carburants.reverse();\r\n      this.carburantsMatTab.data = this.carburants;\r\n      if (sort) {\r\n        this.carburantsMatTab.sort = sort;\r\n      }\r\n      if (paginator) {\r\n        this.carburantsMatTab.paginator = paginator;\r\n      }\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  // add new carburant\r\n  addCarburant(carburant: Carburant): Observable<any> {\r\n    return this.http.post(`${this.uri}/add`, carburant);\r\n  }\r\n\r\n  // delete Carburant\r\n  deleteCarburant(id: string): Observable<any> {\r\n    return this.http.delete(`${this.uri}/delete/${id}`);\r\n  }\r\n\r\n  // update Carburant\r\n  updateCarburant(id: string, carburant: Carburant): Observable<any> {\r\n    return this.http.put(`${this.uri}/update/${id}`, carburant);\r\n  }\r\n\r\n  // get by id\r\n  getById(id: string) {\r\n    return this.http.get<Carburant>(`${this.uri}/list/${id}`);\r\n  }\r\n\r\n  // get by reference\r\n  getByRef(ref: string) {\r\n    return this.http.get<Carburant>(`${this.uri}/list/getbyref/${ref}`);\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MatSort, MatPaginator, MatTableDataSource } from '@angular/material';\nimport { CardType } from '../models/cardType.model';\nimport { CarburantService } from './carburant.service';\nimport { Carburant } from '../models/carburant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CarteBonTypeService {\n\n  public cardTypes: CardType[];\n  public cardTypesMatTab: MatTableDataSource<any>;\n\n  private uri = 'https://ppp-ss.herokuapp.com/cardType';\n\n  constructor(private http: HttpClient,\n              private carburantService: CarburantService) {\n    this.cardTypes = [];\n    this.cardTypesMatTab = new MatTableDataSource(this.cardTypes);\n   }\n\n  addCardType(cardType: CardType) {\n    return this.http.post<any>(`${this.uri}/add`, cardType);\n  }\n\n  getCardTypesList(sort?: MatSort, paginator?: MatPaginator): void {\n    this.http.get<CardType[]>(`${this.uri}/list`).subscribe((data: CardType[]) => {\n      this.cardTypes = data;\n\n      let carburant: Carburant;\n      this.cardTypes.forEach((element: CardType) => {\n        this.carburantService.getById(element.cardCarburant).subscribe((res: Carburant) => {\n          carburant = res;\n          element.cardCarburant = carburant.ref;\n        });\n      });\n      this.cardTypes = this.cardTypes.reverse();\n      this.cardTypesMatTab.data = this.cardTypes;\n      if (sort) {\n        this.cardTypesMatTab.sort = sort;\n      }\n      if (paginator) {\n        this.cardTypesMatTab.paginator = paginator;\n      }\n\n\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n  editCardType(id: string) {\n    return this.http.get(`${this.uri}/edit/${id}`);\n  }\n\n  updateCardType(id: string, cardType: CardType) {\n    return this.http.put(`${this.uri}/update/${id}`, cardType);\n  }\n\n  deleteCardType(id: string) {\n    return this.http.delete(`${this.uri}/delete/${id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CarteBon } from '../models/carteBon.model';\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CarteBonService {\n\n  public carteBons: CarteBon[];\n  public carteBonsMatTab: MatTableDataSource<any>;\n\n  private uri = 'https://ppp-ss.herokuapp.com/carteBon';\n\n  constructor(private http: HttpClient) {\n    this.carteBons = [];\n    this.carteBonsMatTab = new MatTableDataSource(this.carteBons);\n  }\n\n  getTotalPrevue(): string {\n    return this.carteBons.map(t => t.totalValue).reduce((acc, value) => acc + value, 0).toFixed(3);\n  }\n\n  // get carteBons list\n  getCarteBonsList(sort?: MatSort, paginator?: MatPaginator): void {\n    this.http.get<CarteBon[]>(`${this.uri}/list`).subscribe(res => {\n      const key = 'carteBons';\n      this.carteBons = res[key];\n      this.carteBons = this.carteBons.reverse();\n      this.carteBonsMatTab.data = this.carteBons;\n      if (sort) {\n        this.carteBonsMatTab.sort = sort;\n      }\n      if (paginator) {\n        this.carteBonsMatTab.paginator = paginator;\n      }\n\n\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n  // get carteBons list by session id\n  getCarteBonsListById(sessionId: string, sort?: MatSort, paginator?: MatPaginator): void {\n    this.http.get<CarteBon[]>(`${this.uri}/list`).subscribe(res => {\n      const key = 'carteBons';\n      this.carteBons = res[key];\n      this.carteBons = this.carteBons.reverse();\n      this.carteBons = this.carteBons.filter(x => x.sessionId === sessionId);\n      this.carteBonsMatTab.data = this.carteBons;\n      if (sort) {\n        this.carteBonsMatTab.sort = sort;\n      }\n      if (paginator) {\n        this.carteBonsMatTab.paginator = paginator;\n      }\n\n\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n  // add new carteBon\n  addCarteBon(carteBon: CarteBon): Observable<any> {\n    const request = { carteBon };\n    return this.http.post(`${this.uri}/add`, request);\n  }\n\n  // delete CarteBon\n  deleteCarteBon(id: string): Observable<any> {\n    return this.http.delete(`${this.uri}/delete/${id}`);\n  }\n\n  // update CarteBon\n  updateCarteBon(id: string, carteBon: CarteBon): Observable<any> {\n    const request = {\n      carteBon\n    };\n    return this.http.put(`${this.uri}/update/${id}`, request);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Cheque } from '../models/Cheque.model';\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChequeService {\n\n  public cheques: Cheque[];\n  public chequesMatTab: MatTableDataSource<any>;\n\n  private uri = 'https://ppp-ss.herokuapp.com/cheque';\n\n  constructor(private http: HttpClient) {\n    this.cheques = [];\n    this.chequesMatTab = new MatTableDataSource(this.cheques);\n  }\n\n  getTotalPrevue(): string {\n    return this.cheques.map(t => t.chequeValue).reduce((acc, value) => acc + value, 0).toFixed(3);\n  }\n\n  // get cheques list\n  getChequesList(sort?: MatSort, paginator?: MatPaginator): void {\n    this.http.get<Cheque[]>(`${this.uri}/list`).subscribe(res => {\n      const key = 'cheques';\n      this.cheques = res[key];\n      this.cheques = this.cheques.reverse();\n      this.chequesMatTab.data = this.cheques;\n      if (sort) {\n        this.chequesMatTab.sort = sort;\n      }\n      if (paginator) {\n        this.chequesMatTab.paginator = paginator;\n      }\n\n\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n  // get cheques list by session id\n  getChequesListById(sessionId: string, sort?: MatSort, paginator?: MatPaginator): void {\n    this.http.get<Cheque[]>(`${this.uri}/list`).subscribe(res => {\n      const key = 'cheques';\n      this.cheques = res[key];\n      this.cheques = this.cheques.reverse();\n      this.cheques = this.cheques.filter(x => x.sessionId === sessionId);\n      this.chequesMatTab.data = this.cheques;\n      if (sort) {\n        this.chequesMatTab.sort = sort;\n      }\n      if (paginator) {\n        this.chequesMatTab.paginator = paginator;\n      }\n\n\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n  // add new cheque\n  addCheque(cheque: Cheque): Observable<any> {\n    const request = { cheque };\n    return this.http.post(`${this.uri}/add`, request);\n  }\n\n  // delete Cheque\n  deleteCheque(id: string): Observable<any> {\n    return this.http.delete(`${this.uri}/delete/${id}`);\n  }\n\n  // update Cheque\n  updateCheque(id: string, cheque: Cheque): Observable<any> {\n    const request = {\n      cheque\n    };\n    return this.http.put(`${this.uri}/update/${id}`, request);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Citerne } from '../models/citerne.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\r\nimport { Carburant } from '../models/carburant';\r\nimport { CarburantService } from './carburant.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CiterneService {\r\n\r\n  public citernes: Citerne[];\r\n  public citernesMatTab: MatTableDataSource<any>;\r\n\r\n  private uri = 'https://ppp-ss.herokuapp.com/citerne';\r\n\r\n\r\n\r\n  constructor(private http: HttpClient,\r\n              private carburantService: CarburantService) {\r\n    this.citernes = [];\r\n    this.citernesMatTab = new MatTableDataSource(this.citernes);\r\n  }\r\n\r\n  // get citernes list\r\n  getCiternesList(sort?: MatSort, paginator?: MatPaginator): void {\r\n    this.http.get<Citerne[]>(`${this.uri}/list`).subscribe(res => {\r\n      const key = 'citernes';\r\n      this.citernes = res[key];\r\n\r\n      let carburant: Carburant;\r\n      this.citernes.forEach((element: Citerne) => {\r\n        this.carburantService.getById(element.carburant).subscribe((data: Carburant) => {\r\n          carburant = data;\r\n          element.carburant = carburant.ref;\r\n        });\r\n      });\r\n\r\n      this.citernes = this.citernes.reverse();\r\n      this.citernesMatTab.data = this.citernes;\r\n      if (sort) {\r\n        this.citernesMatTab.sort = sort;\r\n      }\r\n      if (paginator) {\r\n        this.citernesMatTab.paginator = paginator;\r\n      }\r\n\r\n\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n\r\n  // add new citerne\r\n  addCiterne(citerne: Citerne): Observable<any> {\r\n    const request = { citerne };\r\n    return this.http.post(`${this.uri}/add`, request);\r\n  }\r\n\r\n  // delete Citerne\r\n  deleteCiterne(id: string): Observable<any> {\r\n\r\n    return this.http.delete(`${this.uri}/delete/${id}`);\r\n  }\r\n\r\n  // update Citerne\r\n  updateCiterne(id: string, citerne: Citerne): Observable<any> {\r\n    const request = {\r\n      citerne\r\n    };\r\n\r\n    return this.http.put(`${this.uri}/update/${id}`, request);\r\n  }\r\n\r\n  // get citerne by ID\r\n  getCiterneById(id: string) {\r\n    return this.http.get<Citerne>(`${this.uri}/list/${id}`);\r\n  }\r\n\r\n  // get by code\r\n  getCiterneByCode(code: string) {\r\n    return this.http.get<Citerne>(`${this.uri}/list/getbycode/${code}`);\r\n  }\r\n\r\n  // get citerne list of carburant\r\n  getCiterneByCarburant(carburant: string) {\r\n    return this.http.get<Citerne[]>(`${this.uri}/list/carburant/${carburant}`);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Client } from '../models/client.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClientService {\r\n\r\n  public clients: Client[];\r\n  public clientsMatTab: MatTableDataSource<any>;\r\n\r\n  private uri = 'https://ppp-ss.herokuapp.com/client';\r\n\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.clients = [];\r\n    this.clientsMatTab = new MatTableDataSource(this.clients);\r\n  }\r\n\r\n  // get clients list\r\n  getClientsList(sort?: MatSort, paginator?: MatPaginator): void {\r\n    this.http.get<Client[]>(`${this.uri}/list`).subscribe(res => {\r\n      const key = 'clients';\r\n      this.clients = res[key];\r\n      this.clients = this.clients.reverse();\r\n      this.clientsMatTab.data = this.clients;\r\n      if (sort) {\r\n        this.clientsMatTab.sort = sort;\r\n      }\r\n      if (paginator) {\r\n        this.clientsMatTab.paginator = paginator;\r\n      }\r\n\r\n\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  // add new client\r\n  addClient(client: Client): Observable<any> {\r\n    const request = { client };\r\n    return this.http.post(`${this.uri}/add`, request);\r\n  }\r\n\r\n  // delete Client\r\n  deleteClient(id: string): Observable<any> {\r\n\r\n    return this.http.delete(`${this.uri}/delete/${id}`);\r\n  }\r\n\r\n  // update Client\r\n  updateClient(id: string, client: Client): Observable<any> {\r\n    const request = {\r\n      client\r\n    };\r\n\r\n    return this.http.put(`${this.uri}/update/${id}`, request);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\nimport { Credit } from '../models/credit.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CreditService {\n\n  public credits: Credit[];\n  public creditsMatTab: MatTableDataSource<any>;\n\n  private uri = 'https://ppp-ss.herokuapp.com/credit';\n\n  constructor(private http: HttpClient) {\n    this.credits = [];\n    this.creditsMatTab = new MatTableDataSource(this.credits);\n  }\n\n  getTotalPrevue(): string {\n    return this.credits.map(t => t.creditRestValue).reduce((acc, value) => acc + value, 0).toFixed(3);\n  }\n\n  // get credits list\n  getCreditsList(sort?: MatSort, paginator?: MatPaginator): void {\n    this.http.get<Credit[]>(`${this.uri}/list`).subscribe(res => {\n      const key = 'credits';\n      this.credits = res[key];\n      if (this.credits.length > 0) {\n        this.credits = this.credits.reverse();\n      }\n      this.creditsMatTab.data = this.credits;\n      if (sort) {\n        this.creditsMatTab.sort = sort;\n      }\n      if (paginator) {\n        this.creditsMatTab.paginator = paginator;\n      }\n\n\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n  // add new credit\n  addCredit(credit: Credit): Observable<any> {\n    const request = { credit };\n    return this.http.post(`${this.uri}/add`, request);\n  }\n\n  // delete Credit\n  deleteCredit(id: string): Observable<any> {\n    return this.http.delete(`${this.uri}/delete/${id}`);\n  }\n\n  // update Credit\n  updateCredit(id: string, credit: Credit): Observable<any> {\n    const request = {\n      credit\n    };\n    return this.http.put(`${this.uri}/update/${id}`, request);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Distributeur } from '../models/distributeur.model';\r\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DistributeurService {\r\n\r\n  public distributeurs: Distributeur[];\r\n  public distributeursMatTab: MatTableDataSource<any>;\r\n\r\n  private uri = 'https://ppp-ss.herokuapp.com/distributeur';\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.distributeurs = [];\r\n    this.distributeursMatTab = new MatTableDataSource(this.distributeurs);\r\n   }\r\n\r\n  addDistributeur(distributeur) {\r\n    return this.http.post<any>(`${this.uri}/add`, distributeur);\r\n  }\r\n\r\n  getDistributeursList(sort?: MatSort, paginator?: MatPaginator): void {\r\n    this.http.get<Distributeur[]>(`${this.uri}/list`).subscribe((data: Distributeur[]) => {\r\n      this.distributeurs = data;\r\n      this.distributeurs = this.distributeurs.reverse();\r\n      this.distributeursMatTab.data = this.distributeurs;\r\n      if (sort) {\r\n        this.distributeursMatTab.sort = sort;\r\n      }\r\n      if (paginator) {\r\n        this.distributeursMatTab.paginator = paginator;\r\n      }\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  editDistributeur(id) {\r\n    return this.http.get(`${this.uri}/edit/${id}`);\r\n  }\r\n\r\n  updateDistributeur(id, distributeur) {\r\n    return this.http.put(`${this.uri}/update/${id}`, distributeur);\r\n  }\r\n\r\n  deleteDistributeur(id) {\r\n    return this.http.delete(`${this.uri}/delete/${id}`);\r\n  }\r\n\r\n  // get distributeur by ID\r\n  getById(id: string) {\r\n    return this.http.get<Distributeur>(`${this.uri}/list/${id}`);\r\n  }\r\n\r\n  // get by reference\r\n  getByRef(ref: string) {\r\n    return this.http.get<Distributeur>(`${this.uri}/list/getbyref/${ref}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Espece } from '../models/espece';\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EspeceService {\n\n  public especes: Espece[];\n  public especesMatTab: MatTableDataSource<any>;\n\n  private uri = 'https://ppp-ss.herokuapp.com/espece';\n\n  constructor(private http: HttpClient) {\n    this.especes = [];\n    this.especesMatTab = new MatTableDataSource(this.especes);\n  }\n\n  getTotalPrevue(): string {\n    const result = this.especes.filter(e => e.state === 'Non');\n    return result.map(t => t.totalValue).reduce((acc, value) => acc + value, 0).toFixed(3);\n  }\n\n  // get bons Valeur list\n  getEspecesList(sort?: MatSort, paginator?: MatPaginator): void {\n    this.http.get<Espece[]>(`${this.uri}/list`).subscribe(res => {\n      const key = 'especes';\n      this.especes = res[key];\n      this.especes = this.especes.reverse();\n      this.especesMatTab.data = this.especes;\n      if (sort) {\n        this.especesMatTab.sort = sort;\n      }\n      if (paginator) {\n        this.especesMatTab.paginator = paginator;\n      }\n\n\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n  // get bons Valeur list by session id\n  getEspecesListById(sessionId: string, sort?: MatSort, paginator?: MatPaginator): void {\n    this.http.get<Espece[]>(`${this.uri}/list`).subscribe(res => {\n      const key = 'especes';\n      this.especes = res[key];\n      this.especes = this.especes.reverse();\n      this.especes = this.especes.filter(x => x.sessionId === sessionId);\n      this.especesMatTab.data = this.especes;\n      if (sort) {\n        this.especesMatTab.sort = sort;\n      }\n      if (paginator) {\n        this.especesMatTab.paginator = paginator;\n      }\n\n\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n  // add new Espece\n  addEspece(espece: Espece): Observable<any> {\n    const request = { espece };\n    return this.http.post(`${this.uri}/add`, request);\n  }\n\n  // delete Espece\n  deleteEspece(id: string): Observable<any> {\n    return this.http.delete(`${this.uri}/delete/${id}`);\n  }\n\n  // update Espece\n  updateEspece(id: string, espece: Espece): Observable<any> {\n    const request = {\n      espece\n    };\n    return this.http.put(`${this.uri}/update/${id}`, request);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Event } from '../models/event.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { NotificationService } from './notification.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventService {\r\n\r\n  private uri = 'https://ppp-ss.herokuapp.com/event';\r\n\r\n  public events: Event[];\r\n\r\n  constructor(private http: HttpClient,\r\n              private notiService: NotificationService) {\r\n    this.events = [];\r\n  }\r\n\r\n  getEvents(d?: string): void {\r\n    const now = new Date();\r\n    let date = now.toString().slice(4, 15).replace(/\\s+/g, '-');\r\n\r\n    if (d) {\r\n      date = d;\r\n    }\r\n\r\n    this.http.get(`${this.uri}/list/byDate?date=${date}`).subscribe(res => {\r\n      const key = 'events';\r\n      this.events = res[key];\r\n    },\r\n    err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  deleteEvent(id: string): Observable<any> {\r\n    return this.http.delete(`${this.uri}/delete/${id}`);\r\n  }\r\n\r\n  addevent(event: Event): void {\r\n    const request = {\r\n      event\r\n    };\r\n    this.http.post(`${this.uri}/add`, request).subscribe(res => {\r\n      this.getEvents();\r\n      this.notiService.success('Evénement ajouté');\r\n    },\r\n    err => {\r\n      console.log(err);\r\n      this.notiService.warn('Erreur');\r\n    });\r\n  }\r\n\r\n  updateEvent(event: Event): Observable<any> {\r\n    const request = {\r\n      event\r\n    };\r\n\r\n    return this.http.put(`${this.uri}/update/${event._id}`, request);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Index } from '../models/Index.model';\r\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Carburant } from '../models/carburant';\r\nimport { CarburantService } from './carburant.service';\r\nimport { CiterneService } from './citerne.service';\r\nimport { Citerne } from '../models/citerne.model';\r\nimport { DistributeurService } from './distributeur.service';\r\nimport { Distributeur } from '../models/distributeur.model';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IndexService {\r\n\r\n  public indexs: Index[];\r\n  public carburant: string;\r\n  public indexsMatTab: MatTableDataSource<any>;\r\n\r\n\r\n  private uri = 'https://ppp-ss.herokuapp.com/index';\r\n\r\n  constructor(private http: HttpClient,\r\n              private citerneService: CiterneService,\r\n              private distributeurService: DistributeurService,\r\n              private carburantService: CarburantService) {\r\n    this.indexs = [];\r\n    this.carburant = '';\r\n    this.indexsMatTab = new MatTableDataSource(this.indexs);\r\n  }\r\n\r\n  addIndex(index) {\r\n    return this.http.post<any>(`${this.uri}/add`, index);\r\n  }\r\n\r\n  getCarburant(reference: string) {\r\n    return this.http.get<any>(`${this.uri}/getCarburant/${reference}`);\r\n  }\r\n\r\n  getIndexList(sort?: MatSort, paginator?: MatPaginator): void {\r\n    this.http.get<Index[]>(`${this.uri}/list`).subscribe((data: Index[]) => {\r\n      this.indexs = data;\r\n\r\n      let citerne: Citerne;\r\n      let distributeur: Distributeur;\r\n      this.indexs.forEach((element: Index) => {\r\n        this.citerneService.getCiterneById(element.citerne).subscribe((cit: Citerne) => {\r\n          citerne = cit;\r\n          element.citerne = citerne.code;\r\n          this.carburantService.getById(citerne.carburant).subscribe((ref: Carburant) => {\r\n            element.carburant = ref.ref;\r\n          });\r\n        });\r\n\r\n        this.distributeurService.getById(element.distributeur).subscribe((dis: Distributeur) => {\r\n          distributeur = dis;\r\n          element.distributeur = distributeur.reference;\r\n        });\r\n      });\r\n      this.indexs = this.indexs.reverse();\r\n      this.indexsMatTab.data = this.indexs;\r\n      if (sort) {\r\n        this.indexsMatTab.sort = sort;\r\n      }\r\n      if (paginator) {\r\n        this.indexsMatTab.paginator = paginator;\r\n      }\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  editIndex(id) {\r\n    return this.http.get(`${this.uri}/edit/${id}`);\r\n  }\r\n\r\n  updateIndex(id, index) {\r\n    return this.http.put(`${this.uri}/update/${id}`, index);\r\n  }\r\n\r\n  deleteIndex(id) {\r\n    return this.http.delete(`${this.uri}/delete/${id}`);\r\n  }\r\n\r\n  getIndexByCiterne(code: string): Observable<Index[]> {\r\n    return this.http.get<Index[]>(`${this.uri}/list/indexbyciterne/${code}`);\r\n  }\r\n\r\n  getIndexByDistributeur(code: string): Observable<Index[]> {\r\n    return this.http.get<Index[]>(`${this.uri}/list/indexbydistributeur/${code}`);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  constructor(public snackBar: MatSnackBar) { }\n\n  panel = 'panelClass';\n\n  config: MatSnackBarConfig = {\n    duration: 2000,\n    horizontalPosition: 'right',\n    verticalPosition: 'top'\n  };\n\n  success(msg) {\n    this.config[this.panel] = ['notification', 'success'];\n    this.snackBar.open(msg, '', this.config);\n  }\n\n  warn(msg) {\n    this.config[this.panel] = ['notification', 'warn'];\n    this.snackBar.open(msg, '', this.config);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatSort, MatPaginator, MatTableDataSource } from '@angular/material';\nimport { PayementCredit } from '../models/payementCredit.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PayementCreditService {\n\n  public payementCredits: PayementCredit[];\n  public payementCreditsMatTab: MatTableDataSource<any>;\n\n  private uri = 'https://ppp-ss.herokuapp.com/payementCredit';\n\n  constructor(private http: HttpClient) {\n    this.payementCredits = [];\n    this.payementCreditsMatTab = new MatTableDataSource(this.payementCredits);\n  }\n\n  getTotalPrevue(): string {\n    return this.payementCredits.map(t => t.payementValue).reduce((acc, value) => acc + value, 0).toFixed(3);\n  }\n\n  // get payement credits list\n  getPayementCreditsList(sessionId: string, sort?: MatSort, paginator?: MatPaginator): void {\n    this.http.get<PayementCredit[]>(`${this.uri}/list`).subscribe(res => {\n      const key = 'payementCredits';\n      this.payementCredits = res[key];\n      if (this.payementCredits.length > 0) {\n        this.payementCredits = this.payementCredits.reverse();\n        this.payementCredits = this.payementCredits.filter(x => x.sessionId === sessionId);\n      }\n      this.payementCreditsMatTab.data = this.payementCredits;\n      if (sort) {\n        this.payementCreditsMatTab.sort = sort;\n      }\n      if (paginator) {\n        this.payementCreditsMatTab.paginator = paginator;\n      }\n\n\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n  // add new credit\n  addPayementCredit(payementCredit: PayementCredit): Observable<any> {\n    const request = { payementCredit };\n    return this.http.post(`${this.uri}/add`, request);\n  }\n\n  // delete Credit\n  deletePayementCredit(id: string): Observable<any> {\n    return this.http.delete(`${this.uri}/delete/${id}`);\n  }\n\n  // update Credit\n  updatePayementCredit(id: string, payementCredit: PayementCredit): Observable<any> {\n    const request = {\n      payementCredit\n    };\n    return this.http.put(`${this.uri}/update/${id}`, request);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Pompiste } from '../models/pompiste.model';\r\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PompisteService {\r\n  private uri = 'https://ppp-ss.herokuapp.com/pompiste';\r\n\r\n  public pompistes: Pompiste[];\r\n  public pompistesMatTab: MatTableDataSource<any>;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.pompistes = [];\r\n    this.pompistesMatTab = new MatTableDataSource(this.pompistes);\r\n  }\r\n\r\n  // get pompistes list\r\n  getpompistesList(sort?: MatSort, paginator?: MatPaginator): void {\r\n    this.http.get<Pompiste[]>(`${this.uri}/list`).subscribe(res => {\r\n      const key = 'pompistes';\r\n      this.pompistes = res[key];\r\n      this.pompistes = this.pompistes.reverse();\r\n      this.pompistesMatTab.data = this.pompistes;\r\n      if (sort) {\r\n        this.pompistesMatTab.sort = sort;\r\n      }\r\n      if (paginator) {\r\n        this.pompistesMatTab.paginator = paginator;\r\n      }\r\n\r\n\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  // add new pompiste\r\n  addpompiste(pompiste: Pompiste): Observable<any> {\r\n    const request = { pompiste };\r\n    return this.http.post(`${this.uri}/add`, request);\r\n  }\r\n\r\n  // delete Pompiste\r\n  deletePompiste(id: string): Observable<any> {\r\n\r\n    return this.http.delete(`${this.uri}/delete/${id}`);\r\n  }\r\n\r\n  // update Pompiste\r\n  updatePompiste(id: string, pompiste: Pompiste): Observable<any> {\r\n    const request = {\r\n      pompiste\r\n    };\r\n\r\n    return this.http.put(`${this.uri}/update/${id}`, request);\r\n  }\r\n\r\n  getTotalPompiste(): Observable<any> {\r\n    return this.http.get(`${this.uri}/totalPompiste`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PrixCarburant } from '../models/prixcarburant';\r\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { CarburantService } from './carburant.service';\r\nimport { Carburant } from '../models/carburant';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PrixCarburantService {\r\n\r\n  public prixCarburants: PrixCarburant[];\r\n  public carburant: Carburant;\r\n  public carburantsMatTab: MatTableDataSource<any>;\r\n\r\n  private uri = 'https://ppp-ss.herokuapp.com/prixcarburant';\r\n\r\n  constructor(private http: HttpClient,\r\n              private carburantService: CarburantService) {\r\n    this.prixCarburants = [];\r\n    this.carburantsMatTab = new MatTableDataSource(this.prixCarburants);\r\n  }\r\n\r\n  addCarburant(carburant) {\r\n    return this.http.post<any>(`${this.uri}/add`, carburant);\r\n  }\r\n\r\n  change(input: string) {\r\n    const num = input.slice(1);\r\n    let res = parseInt(num, 10);\r\n    res++;\r\n    const result = 'P' + res;\r\n    return result;\r\n  }\r\n\r\n  updateIdentifiantPrix(id: string) {\r\n    this.carburantService.getCarburantsList();\r\n    const car = this.carburantService.carburants;\r\n    const result = car.filter(x => x._id === id)[0];\r\n    this.getCarburantList();\r\n    const res = this.prixCarburants.filter(x => x.carburant === result.ref);\r\n    let i;\r\n    for (i = 0; i < res.length; i++) {\r\n      res[i].identifiantPrix = this.change(res[i].identifiantPrix);\r\n      res[i].carburant = id;\r\n    }\r\n    return this.http.put(`${this.uri}/updateList/`, res);\r\n  }\r\n\r\n  getPrix(input: string) {\r\n    return this.http.get<any>(`${this.uri}/getPrix/${input}`);\r\n  }\r\n\r\n  getCarburantList(sort?: MatSort, paginator?: MatPaginator): void {\r\n    this.http.get<PrixCarburant[]>(`${this.uri}/list`).subscribe((data: PrixCarburant[]) => {\r\n      this.prixCarburants = data;\r\n      let carburant: Carburant;\r\n      this.prixCarburants.forEach((element: PrixCarburant) => {\r\n        this.carburantService.getById(element.carburant).subscribe((res: Carburant) => {\r\n          carburant = res;\r\n          element.carburant = carburant.ref;\r\n        });\r\n      });\r\n\r\n\r\n      this.prixCarburants = this.prixCarburants.reverse();\r\n      this.carburantsMatTab.data = this.prixCarburants;\r\n      if (sort) {\r\n        this.carburantsMatTab.sort = sort;\r\n      }\r\n      if (paginator) {\r\n        this.carburantsMatTab.paginator = paginator;\r\n      }\r\n\r\n\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  editCarburant(id) {\r\n    return this.http.get(`${this.uri}/edit/${id}`);\r\n  }\r\n\r\n  updateCarburant(id, carburant) {\r\n    return this.http.put(`${this.uri}/update/${id}`, carburant);\r\n  }\r\n\r\n  deletePrixCarburant(id) {\r\n    return this.http.delete(`${this.uri}/delete/${id}`);\r\n  }\r\n\r\n  /*getPrixCarburantListByName(carburant: string) {\r\n    return this.http.get<any>(`${this.uri}/list/${carburant}`);\r\n  }*/\r\n  getCarburantByPrix(carburant: string) {\r\n    return this.http.get<PrixCarburant[]>(`${this.uri}/list/carburantbyprix/${carburant}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\r\nimport { IndexVM } from '../models/view_models/IndexVM.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Index } from '../models/Index.model';\r\nimport { Observable } from 'rxjs';\r\nimport { ReleveIndex } from '../models/ReleveIndex.model';\r\nimport { PrixCarburant } from '../models/prixcarburant';\r\nimport { NotificationService } from './notification.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReleveIndexService {\r\n\r\n  public releveIndexs: IndexVM[];\r\n  public releveIndexsMatTab: MatTableDataSource<any>;\r\n  public list: string[];\r\n  public indexs: Index[];\r\n  public pompistes: any[];\r\n  public listReleveIndexs: ReleveIndex[];\r\n\r\n  private uri = 'https://ppp-ss.herokuapp.com/recette';\r\n  private indexUri = 'https://ppp-ss.herokuapp.com/index';\r\n  private sessionUri = 'https://ppp-ss.herokuapp.com/session';\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private notifService: NotificationService) {\r\n    this.releveIndexs = [];\r\n    this.list = [];\r\n    this.indexs = [];\r\n    this.pompistes = [];\r\n    this.releveIndexsMatTab = new MatTableDataSource(this.releveIndexs);\r\n    this.listReleveIndexs = [];\r\n  }\r\n\r\n  getDatePoste = () => {\r\n    const datetime = new Date();\r\n    let date = datetime.toISOString().slice(0, 10);\r\n    const hour = datetime.getHours();\r\n    const dd = new Date(datetime.setDate(datetime.getDate() - 1));\r\n    const yesterday = dd.toISOString().slice(0, 10);\r\n    let poste = '';\r\n    if ((hour >= 6) && (hour < 14)) {\r\n      poste = 'P1';\r\n    } else if ((hour >= 14) && (hour < 22)) {\r\n      poste = 'P2';\r\n    } else if ((hour === 22) || (hour === 23)) {\r\n      poste = 'P3';\r\n    } else if ((hour >= 0) && (hour < 6)) {\r\n      poste = 'P3'; date = yesterday;\r\n    }\r\n    return date.concat(poste);\r\n  }\r\n\r\n  assignIndexs(pompisteVM: any, sessionId: string, indexs: Index[], prixCarburant: PrixCarburant[]): void {\r\n    const pompiste = {\r\n      _id: pompisteVM.id_pompiste,\r\n      nom: pompisteVM.nom_pompiste\r\n    };\r\n    for (let _i = 0; _i < pompisteVM.indexs.length; _i++) {\r\n      this.listReleveIndexs[_i] = new ReleveIndex();\r\n      this.listReleveIndexs[_i].reference = pompisteVM.indexs[_i];\r\n      this.listReleveIndexs[_i].pompiste = pompiste;\r\n      const res = indexs.filter(x => x.reference === pompisteVM.indexs[_i]);\r\n      this.listReleveIndexs[_i].depart = res[0].valeurIndex;\r\n      this.listReleveIndexs[_i].arrive = res[0].valeurIndex;\r\n      const carburantPrice = prixCarburant.filter(x => x.carburant === res[0].carburant).filter(x => x.identifiantPrix === 'P1');\r\n      this.listReleveIndexs[_i].prix = carburantPrice[0].prix;\r\n    }\r\n\r\n    this.addMultipleReleveIndex(this.listReleveIndexs).subscribe(\r\n      res => {\r\n        this.getReleveIndexsList(sessionId);\r\n        this.notifService.success('relevé index ajouter avec succés');\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        this.notifService.warn('Erreur');\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  addReleveIndex(releveIndex) {\r\n    return this.http.post<any>(`${this.uri}/addReleveIndex`, releveIndex);\r\n  }\r\n\r\n  addMultipleReleveIndex(releveIndex) {\r\n    return this.http.post<any>(`${this.uri}/addMultipleReleveIndex`, releveIndex);\r\n  }\r\n\r\n  getReleveIndexsList(currentId: string, sort?: MatSort, paginator?: MatPaginator): void {\r\n    this.http.get<IndexVM[]>(`${this.uri}/listReleveIndex/${currentId}`).subscribe((data: IndexVM[]) => {\r\n      this.releveIndexs = data;\r\n      this.releveIndexs = this.releveIndexs.reverse();\r\n      this.releveIndexsMatTab.data = this.releveIndexs;\r\n      if (sort) {\r\n        this.releveIndexsMatTab.sort = sort;\r\n      }\r\n      if (paginator) {\r\n        this.releveIndexsMatTab.paginator = paginator;\r\n      }\r\n\r\n\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  clear() {\r\n    this.releveIndexs = [];\r\n    this.releveIndexsMatTab.data = [];\r\n  }\r\n\r\n  getIndexsNames(): void {\r\n    this.list = [];\r\n    this.http.get<Index[]>(`${this.indexUri}/list`).subscribe((data: Index[]) => {\r\n      this.indexs = data;\r\n      let i;\r\n      for (i = 0; i < this.indexs.length; i++) {\r\n        this.list.push(this.indexs[i].reference);\r\n      }\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  getSessionPompiste(): void {\r\n    this.http.get(`${this.sessionUri}/get-session-pompiste`).subscribe(res => {\r\n      const key = 'pompistes';\r\n      this.pompistes = res[key].map(p => {\r\n        return {\r\n          _id: p._id,\r\n          nom: p.nom_pompiste\r\n        };\r\n      });\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  editReleveIndex(id) {\r\n    return this.http.get(`${this.uri}/editReleveIndex/${id}`);\r\n  }\r\n\r\n  updateReleveIndex(id, index) {\r\n    return this.http.put(`${this.uri}/updateReleveIndex/${id}`, index);\r\n  }\r\n\r\n  deleteReleveIndex(id) {\r\n    return this.http.delete(`${this.uri}/deleteReleveIndex/${id}`);\r\n  }\r\n\r\n\r\n  // get total revenue\r\n  getTotlaRevenue(): Observable<any> {\r\n    const month = new Date().getMonth() + 1;\r\n    return this.http.get(`${this.uri}/totalRevenue?month=${month}`);\r\n  }\r\n\r\n  // get quantité carburant\r\n  getQuantiteCarburant(): Observable<any> {\r\n    const month = new Date().getMonth() + 1;\r\n    return this.http.get(`${this.uri}/quantiteCarburant?month=${month}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Session } from 'app/shared/models/session.model';\r\nimport { MatTableDataSource } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport { ReleveIndexService } from './releveIndex.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SessionService {\r\n\r\n  private uri = 'https://ppp-ss.herokuapp.com/session';\r\n  public sessions: Session[];\r\n  public currentSessionId: string;\r\n  public sessionMatTab: MatTableDataSource<any>;\r\n\r\n  constructor(private http: HttpClient,\r\n              public releveIndexService: ReleveIndexService) {\r\n    this.sessions = [];\r\n    this.currentSessionId = '';\r\n    this.sessionMatTab = new MatTableDataSource(this.sessions);\r\n  }\r\n\r\n\r\n  closeSession(): Observable<any> {\r\n    return this.http.put(`${this.uri}/closeSession`, 'close');\r\n  }\r\n\r\n  OpenNewSession(session: Session): Observable<any> {\r\n    return this.http.post(`${this.uri}/OpenNewSession`, session);\r\n  }\r\n\r\n  getCurrentSession(): void {\r\n    this.http.get<Session[]>(`${this.uri}/get`).subscribe(res => {\r\n      const key = 'result';\r\n      this.sessions = res[key];\r\n      this.sessionMatTab.data = this.sessions;\r\n      if (this.sessions[0]) {\r\n        this.currentSessionId = this.sessions[0]._id;\r\n        this.releveIndexService.getReleveIndexsList(this.sessions[0]._id);\r\n      }\r\n    },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  updateSession(id, description) {\r\n    console.log(description);\r\n    return this.http.put(`${this.uri}/update/${id}/${description}`, description);\r\n  }\r\n\r\n  deletePompisteFromSession(idPompiste: string, idSession: string): Observable<any> {\r\n    const request = {\r\n      idSession,\r\n      idPompiste\r\n    };\r\n    return this.http.put(`${this.uri}/delete-pompiste`, request);\r\n  }\r\n\r\n  addPompisteToSession(pompisteVM: any, idSession: string): Observable<any> {\r\n    const request = {\r\n      idSession,\r\n      pompistes: [pompisteVM]\r\n    };\r\n\r\n    return this.http.put(`${this.uri}/add-pompistes`, request);\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { StegEtAutre } from '../models/StegEtAutre.model';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { CarburantService } from './carburant.service';\nimport { Carburant } from '../models/carburant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StegEtAutresService {\n\n  public stegEtAutres: StegEtAutre[];\n  public stegEtAutresMatTab: MatTableDataSource<any>;\n\n  private uri = 'https://ppp-ss.herokuapp.com/stegEtAutre';\n\n  constructor(private http: HttpClient,\n              private carburantService: CarburantService) {\n    this.stegEtAutres = [];\n    this.stegEtAutresMatTab = new MatTableDataSource(this.stegEtAutres);\n  }\n\n  getTotalPrevue(): string {\n    return this.stegEtAutres.map(t => t.totalValue).reduce((acc, value) => acc + value, 0).toFixed(3);\n  }\n\n  // get stegEtAutres list\n  getStegEtAutresList(sort?: MatSort, paginator?: MatPaginator): void {\n    this.http.get<StegEtAutre[]>(`${this.uri}/list`).subscribe(res => {\n      const key = 'stegEtAutres';\n      this.stegEtAutres = res[key];\n      if (this.stegEtAutres.length > 0) {\n        let carburant: Carburant;\n        this.stegEtAutres.forEach((element: StegEtAutre) => {\n          this.carburantService.getById(element.carburant).subscribe((carb: Carburant) => {\n            carburant = carb;\n            element.carburant = carburant.ref;\n          });\n        });\n        this.stegEtAutres = this.stegEtAutres.reverse();\n      }\n      this.stegEtAutresMatTab.data = this.stegEtAutres;\n      if (sort) {\n        this.stegEtAutresMatTab.sort = sort;\n      }\n      if (paginator) {\n        this.stegEtAutresMatTab.paginator = paginator;\n      }\n\n\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n  // get stegEtAutres list by session Id\n  getStegEtAutresListById(sessionId: string, sort?: MatSort, paginator?: MatPaginator): void {\n    this.http.get<StegEtAutre[]>(`${this.uri}/list`).subscribe(res => {\n      const key = 'stegEtAutres';\n      this.stegEtAutres = res[key];\n      if (this.stegEtAutres.length > 0) {\n        let carburant: Carburant;\n        this.stegEtAutres.forEach((element: StegEtAutre) => {\n          this.carburantService.getById(element.carburant).subscribe((carb: Carburant) => {\n            carburant = carb;\n            element.carburant = carburant.ref;\n          });\n        });\n        this.stegEtAutres = this.stegEtAutres.filter(s => s.sessionId === sessionId);\n        this.stegEtAutres = this.stegEtAutres.reverse();\n      }\n      this.stegEtAutresMatTab.data = this.stegEtAutres;\n      if (sort) {\n        this.stegEtAutresMatTab.sort = sort;\n      }\n      if (paginator) {\n        this.stegEtAutresMatTab.paginator = paginator;\n      }\n\n\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n  // add new stegEtAutre\n  addStegEtAutre(stegEtAutre: StegEtAutre): Observable<any> {\n    const request = { stegEtAutre };\n    return this.http.post(`${this.uri}/add`, request);\n  }\n\n  // delete stegEtAutre\n  deleteStegEtAutre(id: string): Observable<any> {\n    return this.http.delete(`${this.uri}/delete/${id}`);\n  }\n\n  // update stegEtAutre\n  updateStegEtAutre(id: string, stegEtAutre: StegEtAutre): Observable<any> {\n    const request = {\n      stegEtAutre\n    };\n    return this.http.put(`${this.uri}/update/${id}`, request);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatSort, MatPaginator, MatTableDataSource } from '@angular/material';\nimport { SubventionPeche } from '../models/subventionPeche';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubventionPecheService {\n\n  public subventionPeches: SubventionPeche[];\n  public subventionPechesMatTab: MatTableDataSource<any>;\n\n  private uri = 'https://ppp-ss.herokuapp.com/subventionPeche';\n\n  constructor(private http: HttpClient) {\n    this.subventionPeches = [];\n    this.subventionPechesMatTab = new MatTableDataSource(this.subventionPeches);\n  }\n\n  getTotalPrevue(): string {\n    const result = this.subventionPeches.filter(e => e.state === 'Non');\n    return result.map(t => t.cardValue).reduce((acc, value) => acc + value, 0).toFixed(3);\n  }\n\n  // get bons Valeur list\n  getSubventionPechesList(sort?: MatSort, paginator?: MatPaginator): void {\n    this.http.get<SubventionPeche[]>(`${this.uri}/list`).subscribe(res => {\n      const key = 'subventionPeches';\n      this.subventionPeches = res[key];\n      this.subventionPeches = this.subventionPeches.reverse();\n      this.subventionPechesMatTab.data = this.subventionPeches;\n      if (sort) {\n        this.subventionPechesMatTab.sort = sort;\n      }\n      if (paginator) {\n        this.subventionPechesMatTab.paginator = paginator;\n      }\n\n\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n  // get bons Valeur list by session id\n  getSubventionPechesListById(sessionId: string, sort?: MatSort, paginator?: MatPaginator): void {\n    this.http.get<SubventionPeche[]>(`${this.uri}/list`).subscribe(res => {\n      const key = 'subventionPeches';\n      this.subventionPeches = res[key];\n      this.subventionPeches = this.subventionPeches.reverse();\n      this.subventionPeches = this.subventionPeches.filter(x => x.sessionId === sessionId);\n      this.subventionPechesMatTab.data = this.subventionPeches;\n      if (sort) {\n        this.subventionPechesMatTab.sort = sort;\n      }\n      if (paginator) {\n        this.subventionPechesMatTab.paginator = paginator;\n      }\n\n\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n  // add new subventionPeche\n  addSubventionPeche(subventionPeche: SubventionPeche): Observable<any> {\n    const request = { subventionPeche };\n    return this.http.post(`${this.uri}/add`, request);\n  }\n\n  // delete subventionPeche\n  deleteSubventionPeche(id: string): Observable<any> {\n    return this.http.delete(`${this.uri}/delete/${id}`);\n  }\n\n  // update subventionPeche\n  updateSubventionPeche(id: string, subventionPeche: SubventionPeche): Observable<any> {\n    const request = {\n      subventionPeche\n    };\n    return this.http.put(`${this.uri}/update/${id}`, request);\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  constructor(private injector: Injector) { }\n\n  intercept(req, next) {\n    const authService = this.injector.get(AuthService);\n    const tokenizedReq = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${authService.getToken()}`\n      }\n    });\n    return next.handle(tokenizedReq);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Weather } from '../models/weather.model';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WeatherService {\r\n\r\n  private uri = 'https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/weather?q=Tunis,TN&' +\r\n                  'appid=ebc55f582577e7d5e719553641f7dd5f';\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n\r\n  getWeather(): Observable<Weather> {\r\n    return this.http.get<Weather>(this.uri);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport 'hammerjs';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}